/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./js/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "../words/list.js":
/*!************************!*\
  !*** ../words/list.js ***!
  \************************/
/*! exports provided: wordListJP, wordListEN */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wordListJP", function() { return wordListJP; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wordListEN", function() { return wordListEN; });
let wordListJP = [
	'こんにちは',
	'さようなら',
	'ごきげんよう',
	'またあした',
	'おやすみなさい',
	'いただきます',
	'いってきます',
	'ただいま',
	'ohayo',
	'こんniちWa',
	'全角スペー　ス',
	'半角スペー ス',
	'ハイフン-',
	'記号？',
	'記号・',
]

let wordListEN = [
	'the',
	'be',
	'and',
	'of',
	'to',
	'a',
	'in',
	'have',
	'it',
	'you',
	'he',
	'for',
	'they',
	'not',
	'that',
	'we',
	'on',
	'with',
	'this',
	'i',
	'do',
	'as',
	'at',
	'she',
	'but',
	'from',
	'by',
	'will',
	'or',
	'say',
	'go',
	'so',
	'all',
	'if',
	'one',
	'would',
	'about',
	'can',
	'which',
	'there',
	'know',
	'more',
	'get',
	'who',
	'like',
	'when',
	'think',
	'make',
	'time',
	'see',
	'what',
	'up',
	'some',
	'other',
	'out',
	'good',
	'people',
	'year',
	'take',
	'no',
	'well',
	'because',
	'very',
	'just',
	'come',
	'could',
	'work',
	'use',
	'than',
	'now',
	'then',
	'also',
	'into',
	'only',
	'look',
	'want',
	'give',
	'first',
	'new',
	'way',
	'find',
	'over',
	'any',
	'after',
	'day',
	'where',
	'thing',
	'most',
	'should',
	'need',
	'much',
	'right',
	'how',
	'back',
	'mean',
	'even',
	'may',
	'here',
	'many',
	'such',
	'last',
	'child',
	'tell',
	'really',
	'call',
	'before',
	'company',
	'through',
	'down',
	'show',
	'life',
	'man',
	'change',
	'place',
	'long',
	'between',
	'feel',
	'too',
	'still',
	'problem',
	'write',
	'same',
	'lot',
	'great',
	'try',
	'leave',
	'number',
	'both',
	'own',
	'part',
	'point',
	'little',
	'help',
	'ask',
	'meet',
	'start',
	'talk',
	'something',
	'put',
	'another',
	'become',
	'interest',
	'country',
	'old',
	'each',
	'school',
	'late',
	'high',
	'different',
	'off',
	'next',
	'end',
	'live',
	'why',
	'while',
	'world',
	'week',
	'play',
	'might',
	'must',
	'home',
	'never',
	'include',
	'course',
	'house',
	'report',
	'group',
	'case',
	'woman',
	'around',
	'book',
	'family',
	'seem',
	'let',
	'again',
	'kind',
	'keep',
	'hear',
	'system',
	'every',
	'question',
	'during',
	'always',
	'big',
	'set',
	'small',
	'study',
	'follow',
	'begin',
	'important',
	'since',
	'run',
	'under',
	'turn',
	'few',
	'bring',
	'early',
	'hand',
	'state',
	'move',
	'money',
	'fact',
	'however',
	'area',
	'provide',
	'name',
	'read',
	'friend',
	'month',
	'large',
	'business',
	'without',
	'information',
	'open',
	'order',
	'government',
	'word',
	'issue',
	'market',
	'pay',
	'build',
	'hold',
	'service',
	'against',
	'believe',
	'second',
	'though',
	'yes',
	'love',
	'increase',
	'job',
	'plan',
	'result',
	'away',
	'example',
	'happen',
	'offer',
	'young',
	'close',
	'program',
	'lead',
	'buy',
	'understand',
	'thank',
	'far',
	'today',
	'hour',
	'student',
	'face',
	'hope',
	'idea',
	'cost',
	'less',
	'room',
	'until',
	'reason',
	'form',
	'spend',
	'head',
	'car',
	'learn',
	'level',
	'person',
	'experience',
	'once',
	'member',
	'enough',
	'bad',
	'city',
	'night',
	'able',
	'support',
	'whether',
	'line',
	'present',
	'side',
	'quite',
	'although',
	'sure',
	'term',
	'least',
	'age',
	'low',
	'speak',
	'within',
	'process',
	'public',
	'often',
	'train',
	'possible',
	'actually',
	'rather',
	'view',
	'together',
	'consider',
	'price',
	'parent',
	'hard',
	'party',
	'local',
	'control',
	'already',
	'concern',
	'product',
	'lose',
	'story',
	'almost',
	'continue',
	'stand',
	'whole',
	'yet',
	'rate',
	'care',
	'expect',
	'effect',
	'sort',
	'ever',
	'anything',
	'cause',
	'fall',
	'deal',
	'water',
	'send',
	'allow',
	'soon',
	'watch',
	'base',
	'probably',
	'suggest',
	'past',
	'power',
	'test',
	'visit',
	'center',
	'grow',
	'nothing',
	'return',
	'mother',
	'walk',
	'matter',
	'mind',
	'value',
	'office',
	'record',
	'stay',
	'force',
	'stop',
	'several',
	'light',
	'develop',
	'remember',
	'bit',
	'share',
	'real',
	'answer',
	'sit',
	'figure',
	'letter',
	'decide',
	'language',
	'subject',
	'class',
	'development',
	'town',
	'half',
	'minute',
	'food',
	'break',
	'clear',
	'future',
	'either',
	'ago',
	'per',
	'remain',
	'top',
	'among',
	'win',
	'color',
	'involve',
	'reach',
	'social',
	'period',
	'across',
	'note',
	'history',
	'create',
	'drive',
	'along',
	'type',
	'sound',
	'eye',
	'music',
	'game',
	'political',
	'free',
	'receive',
	'moment',
	'sale',
	'policy',
	'further',
	'body',
	'require',
	'wait',
	'general',
	'appear',
	'toward',
	'team',
	'easy',
	'individual',
	'full',
	'black',
	'sense',
	'perhaps',
	'add',
	'rule',
	'pass',
	'produce',
	'sell',
	'short',
	'agree',
	'law',
	'everything',
	'research',
	'cover',
	'paper',
	'position',
	'near',
	'human',
	'computer',
	'situation',
	'staff',
	'activity',
	'film',
	'morning',
	'war',
	'account',
	'shop',
	'major',
	'someone',
	'above',
	'design',
	'event',
	'special',
	'sometimes',
	'condition',
	'carry',
	'choose',
	'father',
	'decision',
	'table',
	'certain',
	'forward',
	'main',
	'die',
	'bear',
	'cut',
	'describe',
	'himself',
	'available',
	'especially',
	'strong',
	'rise',
	'girl',
	'maybe',
	'community',
	'else',
	'particular',
	'role',
	'join',
	'difficult',
	'please',
	'detail',
	'difference',
	'action',
	'health',
	'eat',
	'step',
	'true',
	'phone',
	'themselves',
	'draw',
	'white',
	'date',
	'practice',
	'model',
	'raise',
	'customer',
	'front',
	'explain',
	'door',
	'outside',
	'behind',
	'economic',
	'site',
	'approach',
	'teacher',
	'land',
	'charge',
	'finally',
	'sign',
	'claim',
	'relationship',
	'travel',
	'enjoy',
	'death',
	'nice',
	'amount',
	'improve',
	'picture',
	'boy',
	'regard',
	'organization',
	'happy',
	'couple',
	'act',
	'range',
	'quality',
	'project',
	'round',
	'opportunity',
	'road',
	'accord',
	'list',
	'wish',
	'therefore',
	'wear',
	'fund',
	'rest',
	'kid',
	'industry',
	'education',
	'measure',
	'kill',
	'serve',
	'likely',
	'certainly',
	'national',
	'itself',
	'teach',
	'field',
	'security',
	'air',
	'benefit',
	'trade',
	'risk',
	'news',
	'standard',
	'vote',
	'percent',
	'focus',
	'stage',
	'space',
	'instead',
	'realize',
	'usually',
	'data',
	'single',
	'address',
	'performance',
	'chance',
	'accept',
	'society',
	'technology',
	'mention',
	'choice',
	'save',
	'common',
	'culture',
	'total',
	'demand',
	'material',
	'limit',
	'listen',
	'due',
	'wrong',
	'foot',
	'effort',
	'attention',
	'upon',
	'check',
	'complete',
	'lie',
	'pick',
	'reduce',
	'personal',
	'ground',
	'animal',
	'arrive',
	'patient',
	'current',
	'century',
	'evidence',
	'exist',
	'similar',
	'fight',
	'leader',
	'fine',
	'street',
	'former',
	'contact',
	'particularly',
	'wife',
	'sport',
	'prepare',
	'discuss',
	'response',
	'voice',
	'piece',
	'finish',
	'suppose',
	'apply',
	'president',
	'fire',
	'compare',
	'court',
	'police',
	'store',
	'poor',
	'knowledge',
	'laugh',
	'arm',
	'heart',
	'source',
	'employee',
	'manage',
	'simply',
	'bank',
	'firm',
	'cell',
	'article',
	'fast',
	'attack',
	'foreign',
	'surprise',
	'feature',
	'factor',
	'pretty',
	'recently',
	'affect',
	'drop',
	'recent',
	'relate',
	'official',
	'financial',
	'miss',
	'art',
	'campaign',
	'private',
	'pause',
	'everyone',
	'forget',
	'page',
	'worry',
	'summer',
	'drink',
	'opinion',
	'park',
	'represent',
	'key',
	'inside',
	'manager',
	'international',
	'contain',
	'notice',
	'wonder',
	'nature',
	'structure',
	'section',
	'myself',
	'exactly',
	'plant',
	'paint',
	'worker',
	'press',
	'whatever',
	'necessary',
	'region',
	'growth',
	'evening',
	'influence',
	'respect',
	'various',
	'catch',
	'thus',
	'skill',
	'attempt',
	'son',
	'simple',
	'medium',
	'average',
	'stock',
	'management',
	'character',
	'bed',
	'hit',
	'establish',
	'indeed',
	'final',
	'economy',
	'fit',
	'guy',
	'function',
	'yesterday',
	'image',
	'size',
	'behavior',
	'addition',
	'determine',
	'station',
	'population',
	'fail',
	'environment',
	'production',
	'contract',
	'player',
	'comment',
	'enter',
	'occur',
	'alone',
	'significant',
	'drug',
	'wall',
	'series',
	'direct',
	'success',
	'tomorrow',
	'director',
	'clearly',
	'lack',
	'review',
	'depend',
	'race',
	'recognize',
	'window',
	'purpose',
	'department',
	'gain',
	'tree',
	'college',
	'argue',
	'board',
	'holiday',
	'mark',
	'church',
	'machine',
	'achieve',
	'item',
	'prove',
	'cent',
	'season',
	'floor',
	'stuff',
	'wide',
	'anyone',
	'method',
	'analysis',
	'election',
	'military',
	'hotel',
	'club',
	'below',
	'movie',
	'doctor',
	'discussion',
	'sorry',
	'challenge',
	'nation',
	'nearly',
	'statement',
	'link',
	'despite',
	'introduce',
	'advantage',
	'ready',
	'marry',
	'strike',
	'mile',
	'seek',
	'ability',
	'unit',
	'card',
	'hospital',
	'quickly',
	'interview',
	'agreement',
	'release',
	'tax',
	'solution',
	'capital',
	'popular',
	'specific',
	'beautiful',
	'fear',
	'aim',
	'television',
	'serious',
	'target',
	'degree',
	'pull',
	'red',
	'husband',
	'access',
	'movement',
	'treat',
	'identify',
	'loss',
	'shall',
	'modern',
	'pressure',
	'bus',
	'treatment',
	'yourself',
	'supply',
	'village',
	'worth',
	'natural',
	'express',
	'indicate',
	'attend',
	'brother',
	'investment',
	'score',
	'organize',
	'trip',
	'beyond',
	'sleep',
	'fish',
	'promise',
	'potential',
	'energy',
	'trouble',
	'relation',
	'touch',
	'file',
	'middle',
	'bar',
	'suffer',
	'strategy',
	'deep',
	'except',
	'clean',
	'tend',
	'advance',
	'fill',
	'star',
	'network',
	'generally',
	'operation',
	'match',
	'avoid',
	'seat',
	'throw',
	'task',
	'normal',
	'goal',
	'associate',
	'blue',
	'positive',
	'option',
	'box',
	'huge',
	'message',
	'instance',
	'style',
	'refer',
	'cold',
	'push',
	'quarter',
	'assume',
	'baby',
	'successful',
	'sing',
	'doubt',
	'competition',
	'theory',
	'propose',
	'reference',
	'argument',
	'adult',
	'fly',
	'document',
	'pattern',
	'application',
	'hot',
	'obviously',
	'unclear',
	'bill',
	'search',
	'separate',
	'central',
	'career',
	'anyway',
	'speech',
	'dog',
	'officer',
	'throughout',
	'oil',
	'dress',
	'profit',
	'guess',
	'fun',
	'protect',
	'resource',
	'science',
	'disease',
	'balance',
	'damage',
	'basis',
	'author',
	'basic',
	'encourage',
	'hair',
	'male',
	'operate',
	'reflect',
	'exercise',
	'useful',
	'restaurant',
	'income',
	'property',
	'previous',
	'dark',
	'imagine',
	'okay',
	'earn',
	'daughter',
	'post',
	'newspaper',
	'define',
	'conclusion',
	'clock',
	'everybody',
	'weekend',
	'perform',
	'professional',
	'mine',
	'debate',
	'memory',
	'green',
	'song',
	'object',
	'maintain',
	'credit',
	'ring',
	'discover',
	'dead',
	'afternoon',
	'prefer',
	'extend',
	'possibility',
	'direction',
	'facility',
	'variety',
	'daily',
	'clothes',
	'screen',
	'track',
	'dance',
	'completely',
	'female',
	'responsibility',
	'original',
	'sister',
	'rock',
	'dream',
	'nor',
	'university',
	'easily',
	'agency',
	'dollar',
	'garden',
	'fix',
	'ahead',
	'cross',
	'yeah',
	'weight',
	'legal',
	'proposal',
	'version',
	'conversation',
	'somebody',
	'pound',
	'magazine',
	'shape',
	'sea',
	'immediately',
	'welcome',
	'smile',
	'communication',
	'agent',
	'traditional',
	'replace',
	'judge',
	'herself',
	'suddenly',
	'generation',
	'estimate',
	'favorite',
	'difficulty',
	'purchase',
	'shoot',
	'announce',
	'unless',
	'independent',
	'recommend',
	'survey',
	'majority',
	'stick',
	'request',
	'rich',
	'wind',
	'none',
	'exchange',
	'budget',
	'famous',
	'blood',
	'appropriate',
	'block',
	'warm',
	'count',
	'scene',
	'writer',
	'content',
	'prevent',
	'safe',
	'invite',
	'mix',
	'element',
	'effective',
	'correct',
	'medical',
	'admit',
	'beat',
	'telephone',
	'copy',
	'committee',
	'aware',
	'advice',
	'handle',
	'glass',
	'trial',
	'stress',
	'radio',
	'administration',
	'complex',
	'text',
	'context',
	'ride',
	'directly',
	'heavy',
	'remove',
	'conduct',
	'equipment',
	'otherwise',
	'title',
	'extra',
	'executive',
	'chair',
	'expensive',
	'sample',
	'sex',
	'deliver',
	'video',
	'connection',
	'primary',
	'weather',
	'collect',
	'inform',
	'principle',
	'straight',
	'appeal',
	'highly',
	'trust',
	'wonderful',
	'flat',
	'absolutely',
	'flow',
	'fair',
	'additional',
	'responsible',
	'farm',
	'collection',
	'hang',
	'negative',
	'band',
	'relative',
	'tour',
	'alternative',
	'software',
	'pair',
	'ship',
	'attitude',
	'cheap',
	'double',
	'leg',
	'observe',
	'sentence',
	'print',
	'progress',
	'truth',
	'nobody',
	'examine',
	'lay',
	'speed',
	'politics',
	'reply',
	'display',
	'transfer',
	'perfect',
	'slightly',
	'overall',
	'intend',
	'user',
	'respond',
	'dinner',
	'slow',
	'regular',
	'physical',
	'apart',
	'suit',
	'federal',
	'reveal',
	'percentage',
	'peace',
	'status',
	'crime',
	'decline',
	'decade',
	'launch',
	'warn',
	'consumer',
	'favor',
	'dry',
	'partner',
	'institution',
	'spot',
	'horse',
	'eventually',
	'heat',
	'excite',
	'reader',
	'importance',
	'distance',
	'guide',
	'grant',
	'taxi',
	'feed',
	'pain',
	'sector',
	'mistake',
	'ensure',
	'satisfy',
	'chief',
	'cool',
	'expert',
	'wave',
	'south',
	'labor',
	'surface',
	'library',
	'excellent',
	'edge',
	'camp',
	'audience',
	'lift',
	'procedure',
	'email',
	'global',
	'struggle',
	'advertise',
	'select',
	'surround',
	'extent',
	'river',
	'annual',
	'fully',
	'contrast',
	'roll',
	'reality',
	'photograph',
	'artist',
	'conflict',
	'entire',
	'presence',
	'crowd',
	'corner',
	'gas',
	'shift',
	'net',
	'category',
	'secretary',
	'defense',
	'quick',
	'cook',
	'spread',
	'nuclear',
	'scale',
	'driver',
	'ball',
	'cry',
	'introduction',
	'requirement',
	'north',
	'confirm',
	'senior',
	'photo',
	'refuse',
	'transport',
	'emerge',
	'map',
	'concept',
	'island',
	'reform',
	'neither',
	'football',
	'survive',
	'flight',
	'left',
	'solve',
	'neighbor',
	'background',
	'technique',
	'traffic',
	'improvement',
	'tool',
	'consequence',
	'circumstance',
	'smoke',
	'reaction',
	'rain',
	'busy',
	'lesson',
	'brain',
	'mass',
	'funny',
	'contribute',
	'failure',
	'schedule',
	'speaker',
	'bottom',
	'adopt',
	'combine',
	'mountain',
	'waste',
	'hide',
	'marriage',
	'ticket',
	'meal',
	'colleague',
	'bag',
	'repeat',
	'equal',
	'expression',
	'plus',
	'extremely',
	'owner',
	'plane',
	'commercial',
	'lady',
	'duty',
	'strength',
	'connect',
	'cultural',
	'arrange',
	'scheme',
	'payment',
	'unfortunately',
	'brief',
	'bird',
	'demonstrate',
	'contribution',
	'appreciate',
	'chapter',
	'secret',
	'apparently',
	'novel',
	'union',
	'burn',
	'trend',
	'initial',
	'pleasure',
	'suggestion',
	'critical',
	'gather',
	'mostly',
	'earth',
	'pop',
	'essential',
	'desire',
	'promote',
	'currently',
	'employ',
	'path',
	'topic',
	'beach',
	'attract',
	'engage',
	'powerful',
	'flower',
	'crisis',
	'settle',
	'boat',
	'aid',
	'fan',
	'kitchen',
	'twice',
	'fresh',
	'delay',
	'safety',
	'engineer',
	'quiet',
	'insurance',
	'nurse',
	'divide',
	'length',
	'investigation',
	'package',
	'somewhere',
	'expand',
	'commit',
	'obvious',
	'jump',
	'weapon',
	'relatively',
	'host',
	'winter',
	'district',
	'broad',
	'tire',
	'spring',
	'spirit',
	'lunch',
	'actual',
	'pool',
	'battle',
	'tradition',
	'cash',
	'hardly',
	'award',
	'coach',
	'experiment',
	'consideration',
	'strange',
	'code',
	'possibly',
	'threat',
	'accident',
	'impossible',
	'revenue',
	'enable',
	'afraid',
	'active',
	'conclude',
	'religious',
	'cancer',
	'convince',
	'vary',
	'environmental',
	'sun',
	'healthy',
	'blow',
	'volume',
	'location',
	'invest',
	'proceed',
	'wash',
	'actor',
	'glad',
	'tape',
	'whereas',
	'opposite',
	'stone',
	'sum',
	'murder',
	'monitor',
	'soldier',
	'finance',
	'hate',
	'egg',
	'concert',
	'shock',
	'comfortable',
	'usual',
	'carefully',
	'pack',
	'recall',
	'wine',
	'camera',
	'swim',
	'manufacture',
	'theater',
	'cycle',
	'coffee',
	'totally',
	'museum',
	'visitor',
	'freedom',
	'construction',
	'dear',
	'objective',
	'moreover',
	'onto',
	'historical',
	'oppose',
	'branch',
	'vehicle',
	'scientist',
	'route',
	'bind',
	'belong',
	'taste',
	'tonight',
	'fashion',
	'danger',
	'bomb',
	'army',
	'dangerous',
	'decrease',
	'hurt',
	'council',
	'editor',
	'normally',
	'sight',
	'generate',
	'gift',
	'delivery',
	'deny',
	'guest',
	'anybody',
	'bedroom',
	'quote',
	'climb',
	'basically',
	'violence',
	'minister',
	'mainly',
	'mouth',
	'noise',
	'manner',
	'gun',
	'square',
	'occasion',
	'familiar',
	'ignore',
	'destroy',
	'affair',
	'civil',
	'locate',
	'citizen',
	'temperature',
	'gold',
	'domestic',
	'load',
	'belief',
	'troop',
	'technical',
	'remind',
	'arrangement',
	'skin',
	'prison',
	'switch',
	'acquire',
	'corporate',
	'fairly',
	'wood',
	'participate',
	'tough',
	'tear',
	'representative',
	'capacity',
	'border',
	'shake',
	'assessment',
	'shoe',
	'ought',
	'ad',
	'fee',
	'hall',
	'regulation',
	'escape',
	'studio',
	'proper',
	'relax',
	'tourist',
	'component',
	'afford',
	'lawyer',
	'suspect',
	'cup',
	'description',
	'confidence',
	'industrial',
	'complain',
	'perspective',
	'error',
	'arrest',
	'assess',
	'register',
	'asset',
	'signal',
	'finger',
	'relevant',
	'explore',
	'leadership',
	'commitment',
	'wake',
	'necessarily',
	'bright',
	'frame',
	'slowly',
	'bond',
	'hire',
	'hole',
	'tie',
	'internal',
	'chain',
	'literature',
	'victim',
	'threaten',
	'division',
	'secure',
	'amaze',
	'device',
	'birth',
	'forest',
	'label',
	'root',
	'factory',
	'expense',
	'channel',
	'investigate',
	'recommendation',
	'rank',
	'typical',
	'west',
	'friendly',
	'resident',
	'provision',
	'concentrate',
	'plenty',
	'export',
	'entirely',
	'strongly',
	'bridge',
	'consist',
	'graduate',
	'brand',
	'moral',
	'insist',
	'combination',
	'abuse',
	'ice',
	'principal',
	'master',
	'definitely',
	'session',
	'grade',
	'nevertheless',
	'predict',
	'previously',
	'protection',
	'largely',
	'wed',
	'rent',
	'shot',
	'appearance',
	'reasonable',
	'guarantee',
	'till',
	'theme',
	'judgment',
	'odd',
	'approve',
	'loan',
	'definition',
	'elect',
	'atmosphere',
	'farmer',
	'comparison',
	'characteristic',
	'license',
	'rely',
	'narrow',
	'succeed',
	'identity',
	'desk',
	'permit',
	'seriously',
	'wild',
	'empty',
	'commission',
	'unique',
	'association',
	'instrument',
	'investor',
	'practical',
	'tea',
	'lovely',
	'soft',
	'row',
	'youth',
	'lock',
	'fuel',
	'expectation',
	'employment',
	'celebrate',
	'sexual',
	'shoulder',
	'breath',
	'increasingly',
	'import',
	'bottle',
	'ourselves',
	'sheet',
	'engine',
	'cast',
	'notion',
	'conservative',
	'journey',
	'opposition',
	'relief',
	'debt',
	'honor',
	'outcome',
	'blame',
	'explanation',
	'arise',
	'musical',
	'recover',
	'dad',
	'stretch',
	'declare',
	'retire',
	'tiny',
	'careful',
	'suitable',
	'native',
	'fruit',
	'analyze',
	'witness',
	'mail',
	'terrible',
	'researcher',
	'ordinary',
	'selection',
	'anywhere',
	'mental',
	'participant',
	'vision',
	'personality',
	'specifically',
	'fat',
	'entry',
	'fellow',
	'chemical',
	'capture',
	'tip',
	'discount',
	'peak',
	'chairman',
	'proportion',
	'ear',
	'disappear',
	'shout',
	'yard',
	'constant',
	'significantly',
	'hill',
	'considerable',
	'instruction',
	'intelligence',
	'ideal',
	'folk',
	'surely',
	'guard',
	'cat',
	'somewhat',
	'kiss',
	'presentation',
	'joint',
	'compete',
	'poll',
	'weak',
	'faith',
	'reduction',
	'reserve',
	'complaint',
	'bore',
	'mission',
	'somehow',
	'tone',
	'neighborhood',
	'passenger',
	'justice',
	'phase',
	'thin',
	'rush',
	'formal',
	'religion',
	'employer',
	'reject',
	'latter',
	'plate',
	'ban',
	'steal',
	'protest',
	'index',
	'sad',
	'frequently',
	'circle',
	'helpful',
	'command',
	'attractive',
	'sick',
	'impression',
	'unable',
	'joke',
	'sky',
	'column',
	'electronic',
	'impose',
	'criminal',
	'besides',
	'properly',
	'ancient',
	'coast',
	'ill',
	'kick',
	'closely',
	'multiple',
	'yield',
	'via',
	'legislation',
	'county',
	'unlike',
	'mobile',
	'assistant',
	'implement',
	'chart',
	'attach',
	'hell',
	'everywhere',
	'advise',
	'household',
	'acknowledge',
	'reward',
	'east',
	'hat',
	'academic',
	'voter',
	'meanwhile',
	'furthermore',
	'accuse',
	'scientific',
	'wage',
	'absence',
	'construct',
	'remark',
	'medicine',
	'professor',
	'rare',
	'intention',
	'dozen',
	'settlement',
	'gap',
	'widely',
	'minimum',
	'northern',
	'estate',
	'equally',
	'expose',
	'alive',
	'shut',
	'victory',
	'resolve',
	'critic',
	'variable',
	'enormous',
	'sweet',
	'permanent',
	'emotion',
	'pursue',
	'tall',
	'urge',
	'enemy',
	'appoint',
	'milk',
	'talent',
	'smell',
	'prior',
	'priority',
	'online',
	'phrase',
	'pilot',
	'stable',
	'merely',
	'resolution',
	'communicate',
	'injury',
	'vast',
	'exhibition',
	'producer',
	'regional',
	'immediate',
	'incident',
	'childhood',
	'draft',
	'slip',
	'accompany',
	'politician',
	'angry',
	'knock',
	'seed',
	'salary',
	'illustrate',
	'imply',
	'breakfast',
	'temporary',
	'liberal',
	'lake',
	'qualify',
	'competitive',
	'truly',
	'hi',
	'yellow',
	'habit',
	'disk',
	'core',
	'emotional',
	'aircraft',
	'self',
	'metal',
	'existence',
	'bone',
	'panel',
	'prime',
	'appointment',
	'emphasize',
	'maximum',
	'effectively',
	'elsewhere',
	'bother',
	'initiative',
	'sharp',
	'diet',
	'motion',
	'gray',
	'plastic',
	'complicate',
	'discipline',
	'disappoint',
	'boss',
	'assumption',
	'freeze',
	'extreme',
	'passage',
	'reputation',
	'forth',
	'negotiation',
	'mechanism',
	'coat',
	'democracy',
	'pocket',
	'lucky',
	'crash',
	'observation',
	'meat',
	'concentration',
	'implication',
	'deserve',
	'unusual',
	'defend',
	'classic',
	'king',
	'interaction',
	'repair',
	'collapse',
	'borrow',
	'fundamental',
	'dish',
	'abroad',
	'soul',
	'capable',
	'defeat',
	'presidential',
	'perfectly',
	'enhance',
	'proud',
	'emergency',
	'educational',
	'distinguish',
	'substantial',
	'nearby',
	'manufacturer',
	'slide',
	'valuable',
	'personally',
	'breast',
	'cope',
	'approximately',
	'accommodation',
	'highlight',
	'reporter',
	'climate',
	'shirt',
	'exception',
	'corporation',
	'chip',
	'winner',
	'encounter',
	'brown',
	'breathe',
	'excuse',
	'partly',
	'tennis',
	'urban',
	'confuse',
	'southern',
	'output',
	'beauty',
	'massive',
	'install',
	'calculate',
	'mouse',
	'mathematics',
	'upper',
	'creation',
	'occupy',
	'outline',
	'sufficient',
	'update',
	'luck',
	'preserve',
	'split',
	'swing',
	'illness',
	'journalist',
	'sudden',
	'advertisement',
	'consistent',
	'originally',
	'aside',
	'comfort',
	'secondly',
	'severe',
	'gene',
	'prospect',
	'snow',
	'plot',
	'neck',
	'criterion',
	'primarily',
	'integrate',
	'criticism',
	'convention',
	'bet',
	'retain',
	'sequence',
	'plain',
	'volunteer',
	'rural',
	'calm',
	'abandon',
	'examination',
	'silence',
	'rapidly',
	'efficient',
	'revolution',
	'delight',
	'spell',
	'premise',
	'lean',
	'dramatic',
	'differ',
	'grateful',
	'protein',
	'bike',
	'distribute',
	'intellectual',
	'derive',
	'crucial',
	'unemployment',
	'wheel',
	'crop',
	'minority',
	'origin',
	'interpretation',
	'gentleman',
	'drama',
	'landscape',
	'educate',
	'toy',
	'fault',
	'exhibit',
	'minor',
	'hunt',
	'storm',
	'thick',
	'achievement',
	'negotiate',
	'dominate',
	'supplier',
	'prize',
	'typically',
	'peer',
	'pension',
	'wing',
	'acquisition',
	'laughter',
	'deeply',
	'recognition',
	'electricity',
	'assistance',
	'roof',
	'retirement',
	'respectively',
	'variation',
	'ultimately',
	'proof',
	'soil',
	'smart',
	'layer',
	'upset',
	'tooth',
	'representation',
	'preparation',
	'dispute',
	'agenda',
	'emphasis',
	'edition',
	'silver',
	'entertainment',
	'honest',
	'undertake',
	'retail',
	'wire',
	'unlikely',
	'gay',
	'publication',
	'slight',
	'unknown',
	'framework',
	'zone',
	'restrict',
	'trace',
	'inch',
	'equivalent',
	'solid',
	'enterprise',
	'elderly',
	'owe',
	'governor',
	'uniform',
	'port',
	'pitch',
	'arrival',
	'contemporary',
	'gate',
	'ease',
	'beer',
	'specialist',
	'assure',
	'profile',
	'mood',
	'episode',
	'crack',
	'numerous',
	'submit',
	'symptom',
	'virtually',
	'era',
	'coverage',
	'tension',
	'cable',
	'sensitive',
	'nervous',
	'input',
	'isolate',
	'prisoner',
	'eliminate',
	'tight',
	'wet',
	'secondary',
	'welfare',
	'recruit',
	'exclude',
	'string',
	'cloud',
	'persuade',
	'inspire',
	'grand',
	'hence',
	'crew',
	'phenomenon',
	'pupil',
	'false',
	'assist',
	'restore',
	'formula',
	'alter',
	'perceive',
	'routine',
	'sink',
	'stare',
	'anymore',
	'hero',
	'supporter',
	'convert',
	'steady',
	'meter',
	'truck',
	'nose',
	'beside',
	'sail',
	'disaster',
	'pace',
	'heavily',
	'devote',
	'terrorist',
	'justify',
	'vital',
	'fascinate',
	'external',
	'spare',
	'whenever',
	'depression',
	'guilty',
	'underlie',
	'mom',
	'distinction',
	'satisfaction',
	'incorporate',
	'pour',
	'sweep',
	'obligation',
	'sir',
	'evaluate',
	'anger',
	'pub',
	'perception',
	'naturally',
	'currency',
	'database',
	'initially',
	'territory',
	'stream',
	'rarely',
	'height',
	'apparent',
	'western',
	'expansion',
	'constantly',
	'muscle',
	'scare',
	'badly',
	'everyday',
	'boundary',
	'ratio',
	'essay',
	'scream',
	'withdraw',
	'pollution',
	'disorder',
	'furniture',
	'symbol',
	'apartment',
	'demonstration',
	'analyst',
	'platform',
	'steel',
	'cake',
	'transform',
	'wound',
	'restriction',
	'foundation',
	'designer',
	'strain',
	'innovation',
	'album',
	'singer',
	'trail',
	'trap',
	'loose',
	'extension',
	'wealth',
	'gradually',
	'tank',
	'evil',
	'remarkable',
	'tune',
	'grass',
	'invitation',
	'transition',
	'frighten',
	'bid',
	'breed',
	'extraordinary',
	'brilliant',
	'adviser',
	'stem',
	'reverse',
	'mode',
	'mirror',
	'awful',
	'pose',
	'adjust',
	'creative',
	'nowadays',
	'poem',
	'agricultural',
	'competitor',
	'alcohol',
	'festival',
	'vegetable',
	'van',
	'confident',
	'planet',
	'curve',
	'knee',
	'overcome',
	'web',
	'depth',
	'entrance',
	'log',
	'giant',
	'god',
	'portion',
	'substance',
	'extensive',
	'interpret',
	'independence',
	'sugar',
	'inner',
	'harm',
	'consult',
	'pink',
	'shadow',
	'strip',
	'smooth',
	'intervention',
	'impress',
	'exam',
	'vice',
	'radical',
	'similarly',
	'behave',
	'loud',
	'dimension',
	'subsequent',
	'infection',
	'jacket',
	'efficiency',
	'dirty',
	'statistic',
	'regularly',
	'resort',
	'iron',
	'broadcast',
	'membership',
	'bread',
	'blind',
	'pure',
	'bloody',
	'ally',
	'quantity',
	'bend',
	'mature',
	'briefly',
	'alarm',
	'disturb',
	'sustain',
	'flood',
	'poverty',
	'crazy',
	'cite',
	'newly',
	'parallel',
	'gender',
	'sponsor',
	'boot',
	'accurate',
	'dealer',
	'button',
	'burden',
	'desert',
	'mate',
	'occasionally',
	'shareholder',
	'bowl',
	'discovery',
	'resistance',
	'bath',
	'frequency',
	'criticize',
	'tap',
	'philosophy',
	'lip',
	'attribute',
	'apologize',
	'approval',
	'grab',
	'entitle',
	'lend',
	'involvement',
	'exposure',
	'conventional',
	'digital',
	'translate',
	'edit',
	'formation',
	'deposit',
	'pleasant',
	'overseas',
	'advocate',
	'establishment',
	'summary',
	'rough',
	'pen',
	'recovery',
	'seal',
	'tube',
	'tower',
	'characterize',
	'specify',
	'exact',
	'spin',
	'operator',
	'infant',
	'dig',
	'drag',
	'mount',
	'wrap',
	'anticipate',
	'dependent',
	'specialize',
	'angle',
	'chicken',
	'anxiety',
	'virus',
	'precisely',
	'rival',
	'offense',
	'detect',
	'teenager',
	'admire',
	'moderate',
	'surgery',
	'musician',
	'significance',
	'shower',
	'illegal',
	'charity',
	'universal',
	'cigarette',
	'constitute',
	'adequate',
	'consultant',
	'historian',
	'cousin',
	'visual',
	'stupid',
	'keen',
	'ethnic',
	'twin',
	'clinical',
	'eastern',
	'forecast',
	'segment',
	'custom',
	'adapt',
	'sand',
	'cap',
	'prompt',
	'charm',
	'react',
	'lecture',
	'venture',
	'compound',
	'rescue',
	'mess',
	'preference',
	'comprehensive',
	'incentive',
	'league',
	'dialog',
	'cream',
	'rapid',
	'cancel',
	'regret',
	'dismiss',
	'margin',
	'beneath',
	'opponent',
	'resist',
	'capability',
	'absolute',
	'correspond',
	'stroke',
	'dare',
	'barrier',
	'rid',
	'divorce',
	'ruin',
	'bury',
	'counsel',
	'tendency',
	'frequent',
	'motor',
	'survival',
	'counter',
	'possess',
	'permission',
	'valley',
	'float',
	'mad',
	'greatly',
	'visible',
	'electric',
	'impressive',
	'evolution',
	'awareness',
	'violent',
	'slave',
	'wealthy',
	'architecture',
	'acceptable',
	'journal',
	'coal',
	'measurement',
	'random',
	'successfully',
	'depress',
	'illustration',
	'burst',
	'privilege',
	'buyer',
	'mutual',
	'rail',
	'motivate',
	'laboratory',
	'mortgage',
	'promotion',
	'passion',
	'champion',
	'fulfill',
	'dust',
	'dedicate',
	'roughly',
	'skirt',
	'province',
	'march',
	'evaluation',
	'compromise',
	'accomplish',
	'weakness',
	'announcement',
	'salt',
	'glance',
	'opera',
	'contest',
	'brush',
	'embarrass',
	'gallery',
	'genetic',
	'aggressive',
	'chest',
	'format',
	'literary',
	'govern',
	'embrace',
	'praise',
	'silent',
	'pump',
	'publisher',
	'celebration',
	'golf',
	'compensation',
	'classical',
	'weigh',
	'versus',
	'deficit',
	'modify',
	'flash',
	'friendship',
	'profession',
	'literally',
	'equation',
	'gesture',
	'entertain',
	'fantastic',
	'assign',
	'inflation',
	'historic',
	'injure',
	'remote',
	'therapy',
	'orange',
	'twist',
	'personnel',
	'imagination',
	'disagree',
	'throat',
	'insight',
	'tackle',
	'forever',
	'exceed',
	'expenditure',
	'joy',
	'pregnant',
	'reliable',
	'gear',
	'poet',
	'fortune',
	'ceremony',
	'pile',
	'pig',
	'mixture',
	'automatically',
	'scholar',
	'psychological',
	'dramatically',
	'stake',
	'creature',
	'partnership',
	'participation',
	'clause',
	'penalty',
	'chamber',
	'fancy',
	'poetry',
	'chat',
	'clothing',
	'evolve',
	'sake',
	'shelf',
	'boost',
	'tail',
	'possession',
	'abortion',
	'curious',
	'wooden',
	'boom',
	'tale',
	'democratic',
	'maintenance',
	'consequently',
	'pot',
	'cow',
	'strengthen',
	'whilst',
	'constraint',
	'fold',
	'bin',
	'undergo',
	'potentially',
	'scope',
	'pretend',
	'diversity',
	'allege',
	'pride',
	'intense',
	'inquiry',
	'resign',
	'craft',
	'strict',
	'concrete',
	'shell',
	'damn',
	'distinct',
	'humor',
	'limitation',
	'indication',
	'stability',
	'wise',
	'neglect',
	'compose',
	'jail',
	'shelter',
	'mere',
	'carbon',
	'regulate',
	'cheese',
	'trigger',
	'pipe',
	'destruction',
	'guitar',
	'flag',
	'piano',
	'magic',
	'mystery',
	'ski',
	'whisper',
	'rear',
	'menu',
	'species',
	'moon',
	'presumably',
	'bless',
	'airline',
	'amendment',
	'grandmother',
	'jury',
	'cooperation',
	'civilian',
	'composition',
	'coin',
	'regardless',
	'scan',
	'bunch',
	'racial',
	'greet',
	'hopefully',
	'sanction',
	'trick',
	'paragraph',
	'maker',
	'chocolate',
	'stimulate',
	'belt',
	'potato',
	'narrative',
	'tissue',
	'barely',
	'invent',
	'tourism',
	'pro',
	'stair',
	'hesitate',
	'shine',
	'motivation',
	'romantic',
	'firmly',
	'interior',
	'stomach',
	'nowhere',
	'pray',
	'championship',
	'servant',
	'immigrant',
	'excess',
	'complexity',
	'liability',
	'surprisingly',
	'extract',
	'implementation',
	'bias',
	'differently',
	'catalog',
	'continuous',
	'golden',
	'stamp',
	'guideline',
	'envelope',
	'knife',
	'biological',
	'consume',
	'luxury',
	'weekly',
	'wherever',
	'bite',
	'printer',
	'firstly',
	'anxious',
	'adventure',
	'fence',
	'exhaust',
	'attraction',
	'ocean',
	'quietly',
	'castle',
	'veteran',
	'reflection',
	'nerve',
	'determination',
	'altogether',
	'fiction',
	'carpet',
	'cluster',
	'confusion',
	'hurry',
	'logic',
	'controversial',
	'raw',
	'grammar',
	'revise',
	'hint',
	'hook',
	'bell',
	'liquid',
	'panic',
	'uncle',
	'rice',
	'slope',
	'happiness',
	'genuine',
	'vessel',
	'verb',
	'reckon',
	'silly',
	'transportation',
	'harbor',
	'comedy',
	'chase',
	'storage',
	'universe',
	'horrible',
	'sheep',
	'lover',
	'rat',
	'portrait',
	'innocent',
	'substitute',
	'supplement',
	'adjustment',
	'reasonably',
	'filter',
	'flexible',
	'abstract',
	'tent',
	'precise',
	'distant',
	'stranger',
	'shade',
	'grain',
	'situate',
	'summarize',
	'leap',
	'snap',
	'probability',
	'leather',
	'uncertainty',
	'swear',
	'refugee',
	'shore',
	'monthly',
	'comprise',
	'stir',
	'excitement',
	'sigh',
	'pregnancy',
	'experimental',
	'institutional',
	'slice',
	'wander',
	'empire',
	'subsequently',
	'gentle',
	'attendance',
	'ownership',
	'qualification',
	'suspend',
	'functional',
	'voluntary',
	'pale',
	'stain',
	'athlete',
	'organic',
	'tongue',
	'server',
	'structural',
	'fool',
	'alongside',
	'unite',
	'gently',
	'compute',
	'wipe',
	'weird',
	'gaze',
	'fade',
	'cough',
	'hypothesis',
	'royal',
	'theoretical',
	'curtain',
	'mayor',
	'darkness',
	'aunt',
	'tournament',
	'registration',
	'fragment',
	'listener',
	'tender',
	'density',
	'ugly',
	'module',
	'faithfully',
	'autumn',
	'cheek',
	'attachment',
	'holder',
	'grin',
	'noun',
	'fortunate',
	'alright',
	'lazy',
	'hello',
	'hunger',
	'insure',
	'ashamed',
	'found',
	'thirst',
]




/***/ }),

/***/ "./js/index.js":
/*!*********************!*\
  !*** ./js/index.js ***!
  \*********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(__webpack__worker__1) {/* harmony import */ var comlinkjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! comlinkjs */ "./node_modules/comlinkjs/comlink.js");
/* harmony import */ var _words_list__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../words/list */ "../words/list.js");


// Your environment may also support transparent rewriting of commonJS to ES6:
// import ProxyPolyfill from 'proxy-polyfill/src/proxy';

let worker = new Worker(__webpack__worker__1, {  })
let Muff = comlinkjs__WEBPACK_IMPORTED_MODULE_0__["proxy"](worker)

class muffSample {
	constructor (Muff) {
		this.Muff = Muff
		this.isInitialized = false
	}

	async init() {
		if (this.isInitialized) {
			return
		}

		// 結果の数を設定
		await this.Muff.init()
		await this.Muff.setReturnListLength(20)
		await this.Muff.setSearchWordList(this.listToHashList(_words_list__WEBPACK_IMPORTED_MODULE_1__["wordListEN"]))

		this.setForm()
		this.setToggle()

		this.isInitialized = true
	}

	setToggle() {
		let switcher = false
		document.getElementById("change-wordlist").addEventListener('click', () => {
			(async () => {
				console.log('switched')
				switcher = !switcher
				if (switcher) {
					console.log('to JP')
					await this.Muff.setSearchWordList(this.listToHashList(_words_list__WEBPACK_IMPORTED_MODULE_1__["wordListJP"]))
					this.search()
				} else {
					console.log('to EN')
					await this.Muff.setSearchWordList(this.listToHashList(_words_list__WEBPACK_IMPORTED_MODULE_1__["wordListEN"]))
					this.search()
				}
			})()
		})
	}

	listToHashList(list) {
		let hashList = []
		let revList = list.slice().reverse()
		list.forEach((value, index) => {
			hashList.push({
				word: value,
				index: "" + index,
				rev: revList[index],
				_ignore: 'test'
			})
		})

		return hashList
	}

	setForm() {
		document.getElementById("search").addEventListener('keyup', () => {
			this.search()
		})
	}

	async search() {
		const value = document.getElementById("search").value

		const startTime = performance.now(); // 開始時間

		const result = await this.Muff.search(value)

		const len = await this.Muff.getHitLength()
		console.log(len)

		const endTime = performance.now(); // 終了時間
		console.log(endTime - startTime); // 何ミリ秒かかったかを表示する

		const $resultField = document.getElementById('result-field')
		const $resultFieldWord = document.getElementsByClassName('result-field-li')

		if ($resultFieldWord.length > 0) {
			let len = $resultFieldWord.length
			for (let $i = 0; $i < len; $i++) {
				// 要素が減っていくため0個目を削除
				$resultField.removeChild($resultFieldWord[0])
			}
		}

		console.log(result)
		result.forEach((res) => {
			let $li = document.createElement('li')
			$li.classList.add('result-field-li')
			let wordNode = document.createTextNode(
				res.matches.word + 
				'(' + res.matches.index + ') -> ' + 
				res.highlighteds.word + 
				'(' + res.highlighteds.index + ')' + 
				res.matches.rev + '->' +
				res.highlighteds.rev
			)
			$li.appendChild(wordNode)
			$resultField.appendChild($li); // fragmentの追加する
		})
	}
}

let Sample = new muffSample(Muff)

document.getElementById("search").addEventListener("focus", function( event ) {
	Sample.init()
})


/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/worker-plugin/dist/loader.js!./worker/worker */ "./node_modules/worker-plugin/dist/loader.js!./js/worker/worker.js")))

/***/ }),

/***/ "./node_modules/comlinkjs/comlink.js":
/*!*******************************************!*\
  !*** ./node_modules/comlinkjs/comlink.js ***!
  \*******************************************/
/*! exports provided: transferHandlers, proxy, proxyValue, expose */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transferHandlers", function() { return transferHandlers; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "proxy", function() { return proxy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "proxyValue", function() { return proxyValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "expose", function() { return expose; });
/**
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *     http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const TRANSFERABLE_TYPES = ["ArrayBuffer", "MessagePort", "OffscreenCanvas"]
    .filter(f => f in self)
    .map(f => self[f]);
const uid = Math.floor(Math.random() * Number.MAX_SAFE_INTEGER);
const proxyValueSymbol = Symbol("proxyValue");
const throwSymbol = Symbol("throw");
const proxyTransferHandler = {
    canHandle: (obj) => obj && obj[proxyValueSymbol],
    serialize: (obj) => {
        const { port1, port2 } = new MessageChannel();
        expose(obj, port1);
        return port2;
    },
    deserialize: (obj) => {
        return proxy(obj);
    }
};
const throwTransferHandler = {
    canHandle: (obj) => obj && obj[throwSymbol],
    serialize: (obj) => {
        const message = obj && obj.message;
        const stack = obj && obj.stack;
        return Object.assign({}, obj, { message, stack });
    },
    deserialize: (obj) => {
        throw Object.assign(Error(), obj);
    }
};
const transferHandlers = new Map([
    ["PROXY", proxyTransferHandler],
    ["THROW", throwTransferHandler]
]);
let pingPongMessageCounter = 0;
function proxy(endpoint, target) {
    if (isWindow(endpoint))
        endpoint = windowEndpoint(endpoint);
    if (!isEndpoint(endpoint))
        throw Error("endpoint does not have all of addEventListener, removeEventListener and postMessage defined");
    activateEndpoint(endpoint);
    return cbProxy(async (irequest) => {
        let args = [];
        if (irequest.type === "APPLY" || irequest.type === "CONSTRUCT")
            args = irequest.argumentsList.map(wrapValue);
        const response = await pingPongMessage(endpoint, Object.assign({}, irequest, { argumentsList: args }), transferableProperties(args));
        const result = response.data;
        return unwrapValue(result.value);
    }, [], target);
}
function proxyValue(obj) {
    obj[proxyValueSymbol] = true;
    return obj;
}
function expose(rootObj, endpoint) {
    if (isWindow(endpoint))
        endpoint = windowEndpoint(endpoint);
    if (!isEndpoint(endpoint))
        throw Error("endpoint does not have all of addEventListener, removeEventListener and postMessage defined");
    activateEndpoint(endpoint);
    attachMessageHandler(endpoint, async function (event) {
        if (!event.data.id || !event.data.callPath)
            return;
        const irequest = event.data;
        let that = await irequest.callPath
            .slice(0, -1)
            .reduce((obj, propName) => obj[propName], rootObj);
        let obj = await irequest.callPath.reduce((obj, propName) => obj[propName], rootObj);
        let iresult = obj;
        let args = [];
        if (irequest.type === "APPLY" || irequest.type === "CONSTRUCT")
            args = irequest.argumentsList.map(unwrapValue);
        if (irequest.type === "APPLY") {
            try {
                iresult = await obj.apply(that, args);
            }
            catch (e) {
                iresult = e;
                iresult[throwSymbol] = true;
            }
        }
        if (irequest.type === "CONSTRUCT") {
            try {
                iresult = new obj(...args); // eslint-disable-line new-cap
                iresult = proxyValue(iresult);
            }
            catch (e) {
                iresult = e;
                iresult[throwSymbol] = true;
            }
        }
        if (irequest.type === "SET") {
            obj[irequest.property] = irequest.value;
            // FIXME: ES6 Proxy Handler `set` methods are supposed to return a
            // boolean. To show good will, we return true asynchronously ¯\_(ツ)_/¯
            iresult = true;
        }
        iresult = makeInvocationResult(iresult);
        iresult.id = irequest.id;
        return endpoint.postMessage(iresult, transferableProperties([iresult]));
    });
}
function wrapValue(arg) {
    // Is arg itself handled by a TransferHandler?
    for (const [key, transferHandler] of transferHandlers) {
        if (transferHandler.canHandle(arg)) {
            return {
                type: key,
                value: transferHandler.serialize(arg)
            };
        }
    }
    // If not, traverse the entire object and find handled values.
    let wrappedChildren = [];
    for (const item of iterateAllProperties(arg)) {
        for (const [key, transferHandler] of transferHandlers) {
            if (transferHandler.canHandle(item.value)) {
                wrappedChildren.push({
                    path: item.path,
                    wrappedValue: {
                        type: key,
                        value: transferHandler.serialize(item.value)
                    }
                });
            }
        }
    }
    for (const wrappedChild of wrappedChildren) {
        const container = wrappedChild.path
            .slice(0, -1)
            .reduce((obj, key) => obj[key], arg);
        container[wrappedChild.path[wrappedChild.path.length - 1]] = null;
    }
    return {
        type: "RAW",
        value: arg,
        wrappedChildren
    };
}
function unwrapValue(arg) {
    if (transferHandlers.has(arg.type)) {
        const transferHandler = transferHandlers.get(arg.type);
        return transferHandler.deserialize(arg.value);
    }
    else if (isRawWrappedValue(arg)) {
        for (const wrappedChildValue of arg.wrappedChildren || []) {
            if (!transferHandlers.has(wrappedChildValue.wrappedValue.type))
                throw Error(`Unknown value type "${arg.type}" at ${wrappedChildValue.path.join(".")}`);
            const transferHandler = transferHandlers.get(wrappedChildValue.wrappedValue.type);
            const newValue = transferHandler.deserialize(wrappedChildValue.wrappedValue.value);
            replaceValueInObjectAtPath(arg.value, wrappedChildValue.path, newValue);
        }
        return arg.value;
    }
    else {
        throw Error(`Unknown value type "${arg.type}"`);
    }
}
function replaceValueInObjectAtPath(obj, path, newVal) {
    const lastKey = path.slice(-1)[0];
    const lastObj = path
        .slice(0, -1)
        .reduce((obj, key) => obj[key], obj);
    lastObj[lastKey] = newVal;
}
function isRawWrappedValue(arg) {
    return arg.type === "RAW";
}
function windowEndpoint(w) {
    if (self.constructor.name !== "Window")
        throw Error("self is not a window");
    return {
        addEventListener: self.addEventListener.bind(self),
        removeEventListener: self.removeEventListener.bind(self),
        postMessage: (msg, transfer) => w.postMessage(msg, "*", transfer)
    };
}
function isEndpoint(endpoint) {
    return ("addEventListener" in endpoint &&
        "removeEventListener" in endpoint &&
        "postMessage" in endpoint);
}
function activateEndpoint(endpoint) {
    if (isMessagePort(endpoint))
        endpoint.start();
}
function attachMessageHandler(endpoint, f) {
    // Checking all possible types of `endpoint` manually satisfies TypeScript’s
    // type checker. Not sure why the inference is failing here. Since it’s
    // unnecessary code I’m going to resort to `any` for now.
    // if(isWorker(endpoint))
    //   endpoint.addEventListener('message', f);
    // if(isMessagePort(endpoint))
    //   endpoint.addEventListener('message', f);
    // if(isOtherWindow(endpoint))
    //   endpoint.addEventListener('message', f);
    endpoint.addEventListener("message", f);
}
function detachMessageHandler(endpoint, f) {
    // Same as above.
    endpoint.removeEventListener("message", f);
}
function isMessagePort(endpoint) {
    return endpoint.constructor.name === "MessagePort";
}
function isWindow(endpoint) {
    // TODO: This doesn’t work on cross-origin iframes.
    // return endpoint.constructor.name === 'Window';
    return ["window", "length", "location", "parent", "opener"].every(prop => prop in endpoint);
}
/**
 * `pingPongMessage` sends a `postMessage` and waits for a reply. Replies are
 * identified by a unique id that is attached to the payload.
 */
function pingPongMessage(endpoint, msg, transferables) {
    const id = `${uid}-${pingPongMessageCounter++}`;
    return new Promise(resolve => {
        attachMessageHandler(endpoint, function handler(event) {
            if (event.data.id !== id)
                return;
            detachMessageHandler(endpoint, handler);
            resolve(event);
        });
        // Copy msg and add `id` property
        msg = Object.assign({}, msg, { id });
        endpoint.postMessage(msg, transferables);
    });
}
function cbProxy(cb, callPath = [], target = function () { }) {
    return new Proxy(target, {
        construct(_target, argumentsList, proxy) {
            return cb({
                type: "CONSTRUCT",
                callPath,
                argumentsList
            });
        },
        apply(_target, _thisArg, argumentsList) {
            // We use `bind` as an indicator to have a remote function bound locally.
            // The actual target for `bind()` is currently ignored.
            if (callPath[callPath.length - 1] === "bind")
                return cbProxy(cb, callPath.slice(0, -1));
            return cb({
                type: "APPLY",
                callPath,
                argumentsList
            });
        },
        get(_target, property, proxy) {
            if (property === "then" && callPath.length === 0) {
                return { then: () => proxy };
            }
            else if (property === "then") {
                const r = cb({
                    type: "GET",
                    callPath
                });
                return Promise.resolve(r).then.bind(r);
            }
            else {
                return cbProxy(cb, callPath.concat(property), _target[property]);
            }
        },
        set(_target, property, value, _proxy) {
            return cb({
                type: "SET",
                callPath,
                property,
                value
            });
        }
    });
}
function isTransferable(thing) {
    return TRANSFERABLE_TYPES.some(type => thing instanceof type);
}
function* iterateAllProperties(value, path = [], visited = null) {
    if (!value)
        return;
    if (!visited)
        visited = new WeakSet();
    if (visited.has(value))
        return;
    if (typeof value === "string")
        return;
    if (typeof value === "object")
        visited.add(value);
    if (ArrayBuffer.isView(value))
        return;
    yield { value, path };
    const keys = Object.keys(value);
    for (const key of keys)
        yield* iterateAllProperties(value[key], [...path, key], visited);
}
function transferableProperties(obj) {
    const r = [];
    for (const prop of iterateAllProperties(obj)) {
        if (isTransferable(prop.value))
            r.push(prop.value);
    }
    return r;
}
function makeInvocationResult(obj) {
    for (const [type, transferHandler] of transferHandlers) {
        if (transferHandler.canHandle(obj)) {
            const value = transferHandler.serialize(obj);
            return {
                value: { type, value }
            };
        }
    }
    return {
        value: {
            type: "RAW",
            value: obj
        }
    };
}


/***/ }),

/***/ "./node_modules/worker-plugin/dist/loader.js!./js/worker/worker.js":
/*!*************************************************************************!*\
  !*** ./node_modules/worker-plugin/dist/loader.js!./js/worker/worker.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "0.worker.js"

/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4uL3dvcmRzL2xpc3QuanMiLCJ3ZWJwYWNrOi8vLy4vanMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvbWxpbmtqcy9jb21saW5rLmpzIiwid2VicGFjazovLy8uL2pzL3dvcmtlci93b3JrZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOzs7QUFHQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esa0RBQTBDLGdDQUFnQztBQUMxRTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGdFQUF3RCxrQkFBa0I7QUFDMUU7QUFDQSx5REFBaUQsY0FBYztBQUMvRDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaURBQXlDLGlDQUFpQztBQUMxRSx3SEFBZ0gsbUJBQW1CLEVBQUU7QUFDckk7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBMkIsMEJBQTBCLEVBQUU7QUFDdkQseUNBQWlDLGVBQWU7QUFDaEQ7QUFDQTtBQUNBOztBQUVBO0FBQ0EsOERBQXNELCtEQUErRDs7QUFFckg7QUFDQTs7O0FBR0E7QUFDQTs7Ozs7Ozs7Ozs7OztBQ2xGQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVpQzs7Ozs7Ozs7Ozs7OztBQ3R3RmpDO0FBQUE7QUFBQTtBQUFvQztBQUNxQjtBQUN6RDtBQUNBOztBQUVBLHdCQUF3QixvQkFBaUIsR0FBRyxDQUFlLEVBQUU7QUFDN0QsV0FBVywrQ0FBYTs7QUFFeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSx3REFBd0Qsc0RBQVU7O0FBRWxFO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkRBQTJELHNEQUFVO0FBQ3JFO0FBQ0EsS0FBSztBQUNMO0FBQ0EsMkRBQTJELHNEQUFVO0FBQ3JFO0FBQ0E7QUFDQSxJQUFJO0FBQ0osR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSixHQUFHOztBQUVIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7O0FBRUEsc0NBQXNDOztBQUV0Qzs7QUFFQTtBQUNBOztBQUVBLG9DQUFvQztBQUNwQyxtQ0FBbUM7O0FBRW5DO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLG1CQUFtQixVQUFVO0FBQzdCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDO0FBQ2pDLEdBQUc7QUFDSDtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7QUNwSEQ7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsZUFBZTtBQUM5QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQixRQUFRLGlCQUFpQjtBQUN4RCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5RUFBeUUsYUFBYSxzQkFBc0I7QUFDNUc7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbURBQW1ELFNBQVMsT0FBTyxpQ0FBaUM7QUFDcEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsU0FBUztBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLElBQUksR0FBRyx5QkFBeUI7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsOEJBQThCLFFBQVEsS0FBSztBQUMzQztBQUNBLEtBQUs7QUFDTDtBQUNBLDBEQUEwRCxFQUFFO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7QUN2VUEsaUJBQWlCLHFCQUF1QixnQiIsImZpbGUiOiJzYW1wbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gXCIuL2pzL2luZGV4LmpzXCIpO1xuIiwibGV0IHdvcmRMaXN0SlAgPSBbXG5cdCfjgZPjgpPjgavjgaHjga8nLFxuXHQn44GV44KI44GG44Gq44KJJyxcblx0J+OBlOOBjeOBkuOCk+OCiOOBhicsXG5cdCfjgb7jgZ/jgYLjgZfjgZ8nLFxuXHQn44GK44KE44GZ44G/44Gq44GV44GEJyxcblx0J+OBhOOBn+OBoOOBjeOBvuOBmScsXG5cdCfjgYTjgaPjgabjgY3jgb7jgZknLFxuXHQn44Gf44Gg44GE44G+Jyxcblx0J29oYXlvJyxcblx0J+OBk+OCk25p44GhV2EnLFxuXHQn5YWo6KeS44K544Oa44O844CA44K5Jyxcblx0J+WNiuinkuOCueODmuODvCDjgrknLFxuXHQn44OP44Kk44OV44OzLScsXG5cdCfoqJjlj7fvvJ8nLFxuXHQn6KiY5Y+344O7Jyxcbl1cblxubGV0IHdvcmRMaXN0RU4gPSBbXG5cdCd0aGUnLFxuXHQnYmUnLFxuXHQnYW5kJyxcblx0J29mJyxcblx0J3RvJyxcblx0J2EnLFxuXHQnaW4nLFxuXHQnaGF2ZScsXG5cdCdpdCcsXG5cdCd5b3UnLFxuXHQnaGUnLFxuXHQnZm9yJyxcblx0J3RoZXknLFxuXHQnbm90Jyxcblx0J3RoYXQnLFxuXHQnd2UnLFxuXHQnb24nLFxuXHQnd2l0aCcsXG5cdCd0aGlzJyxcblx0J2knLFxuXHQnZG8nLFxuXHQnYXMnLFxuXHQnYXQnLFxuXHQnc2hlJyxcblx0J2J1dCcsXG5cdCdmcm9tJyxcblx0J2J5Jyxcblx0J3dpbGwnLFxuXHQnb3InLFxuXHQnc2F5Jyxcblx0J2dvJyxcblx0J3NvJyxcblx0J2FsbCcsXG5cdCdpZicsXG5cdCdvbmUnLFxuXHQnd291bGQnLFxuXHQnYWJvdXQnLFxuXHQnY2FuJyxcblx0J3doaWNoJyxcblx0J3RoZXJlJyxcblx0J2tub3cnLFxuXHQnbW9yZScsXG5cdCdnZXQnLFxuXHQnd2hvJyxcblx0J2xpa2UnLFxuXHQnd2hlbicsXG5cdCd0aGluaycsXG5cdCdtYWtlJyxcblx0J3RpbWUnLFxuXHQnc2VlJyxcblx0J3doYXQnLFxuXHQndXAnLFxuXHQnc29tZScsXG5cdCdvdGhlcicsXG5cdCdvdXQnLFxuXHQnZ29vZCcsXG5cdCdwZW9wbGUnLFxuXHQneWVhcicsXG5cdCd0YWtlJyxcblx0J25vJyxcblx0J3dlbGwnLFxuXHQnYmVjYXVzZScsXG5cdCd2ZXJ5Jyxcblx0J2p1c3QnLFxuXHQnY29tZScsXG5cdCdjb3VsZCcsXG5cdCd3b3JrJyxcblx0J3VzZScsXG5cdCd0aGFuJyxcblx0J25vdycsXG5cdCd0aGVuJyxcblx0J2Fsc28nLFxuXHQnaW50bycsXG5cdCdvbmx5Jyxcblx0J2xvb2snLFxuXHQnd2FudCcsXG5cdCdnaXZlJyxcblx0J2ZpcnN0Jyxcblx0J25ldycsXG5cdCd3YXknLFxuXHQnZmluZCcsXG5cdCdvdmVyJyxcblx0J2FueScsXG5cdCdhZnRlcicsXG5cdCdkYXknLFxuXHQnd2hlcmUnLFxuXHQndGhpbmcnLFxuXHQnbW9zdCcsXG5cdCdzaG91bGQnLFxuXHQnbmVlZCcsXG5cdCdtdWNoJyxcblx0J3JpZ2h0Jyxcblx0J2hvdycsXG5cdCdiYWNrJyxcblx0J21lYW4nLFxuXHQnZXZlbicsXG5cdCdtYXknLFxuXHQnaGVyZScsXG5cdCdtYW55Jyxcblx0J3N1Y2gnLFxuXHQnbGFzdCcsXG5cdCdjaGlsZCcsXG5cdCd0ZWxsJyxcblx0J3JlYWxseScsXG5cdCdjYWxsJyxcblx0J2JlZm9yZScsXG5cdCdjb21wYW55Jyxcblx0J3Rocm91Z2gnLFxuXHQnZG93bicsXG5cdCdzaG93Jyxcblx0J2xpZmUnLFxuXHQnbWFuJyxcblx0J2NoYW5nZScsXG5cdCdwbGFjZScsXG5cdCdsb25nJyxcblx0J2JldHdlZW4nLFxuXHQnZmVlbCcsXG5cdCd0b28nLFxuXHQnc3RpbGwnLFxuXHQncHJvYmxlbScsXG5cdCd3cml0ZScsXG5cdCdzYW1lJyxcblx0J2xvdCcsXG5cdCdncmVhdCcsXG5cdCd0cnknLFxuXHQnbGVhdmUnLFxuXHQnbnVtYmVyJyxcblx0J2JvdGgnLFxuXHQnb3duJyxcblx0J3BhcnQnLFxuXHQncG9pbnQnLFxuXHQnbGl0dGxlJyxcblx0J2hlbHAnLFxuXHQnYXNrJyxcblx0J21lZXQnLFxuXHQnc3RhcnQnLFxuXHQndGFsaycsXG5cdCdzb21ldGhpbmcnLFxuXHQncHV0Jyxcblx0J2Fub3RoZXInLFxuXHQnYmVjb21lJyxcblx0J2ludGVyZXN0Jyxcblx0J2NvdW50cnknLFxuXHQnb2xkJyxcblx0J2VhY2gnLFxuXHQnc2Nob29sJyxcblx0J2xhdGUnLFxuXHQnaGlnaCcsXG5cdCdkaWZmZXJlbnQnLFxuXHQnb2ZmJyxcblx0J25leHQnLFxuXHQnZW5kJyxcblx0J2xpdmUnLFxuXHQnd2h5Jyxcblx0J3doaWxlJyxcblx0J3dvcmxkJyxcblx0J3dlZWsnLFxuXHQncGxheScsXG5cdCdtaWdodCcsXG5cdCdtdXN0Jyxcblx0J2hvbWUnLFxuXHQnbmV2ZXInLFxuXHQnaW5jbHVkZScsXG5cdCdjb3Vyc2UnLFxuXHQnaG91c2UnLFxuXHQncmVwb3J0Jyxcblx0J2dyb3VwJyxcblx0J2Nhc2UnLFxuXHQnd29tYW4nLFxuXHQnYXJvdW5kJyxcblx0J2Jvb2snLFxuXHQnZmFtaWx5Jyxcblx0J3NlZW0nLFxuXHQnbGV0Jyxcblx0J2FnYWluJyxcblx0J2tpbmQnLFxuXHQna2VlcCcsXG5cdCdoZWFyJyxcblx0J3N5c3RlbScsXG5cdCdldmVyeScsXG5cdCdxdWVzdGlvbicsXG5cdCdkdXJpbmcnLFxuXHQnYWx3YXlzJyxcblx0J2JpZycsXG5cdCdzZXQnLFxuXHQnc21hbGwnLFxuXHQnc3R1ZHknLFxuXHQnZm9sbG93Jyxcblx0J2JlZ2luJyxcblx0J2ltcG9ydGFudCcsXG5cdCdzaW5jZScsXG5cdCdydW4nLFxuXHQndW5kZXInLFxuXHQndHVybicsXG5cdCdmZXcnLFxuXHQnYnJpbmcnLFxuXHQnZWFybHknLFxuXHQnaGFuZCcsXG5cdCdzdGF0ZScsXG5cdCdtb3ZlJyxcblx0J21vbmV5Jyxcblx0J2ZhY3QnLFxuXHQnaG93ZXZlcicsXG5cdCdhcmVhJyxcblx0J3Byb3ZpZGUnLFxuXHQnbmFtZScsXG5cdCdyZWFkJyxcblx0J2ZyaWVuZCcsXG5cdCdtb250aCcsXG5cdCdsYXJnZScsXG5cdCdidXNpbmVzcycsXG5cdCd3aXRob3V0Jyxcblx0J2luZm9ybWF0aW9uJyxcblx0J29wZW4nLFxuXHQnb3JkZXInLFxuXHQnZ292ZXJubWVudCcsXG5cdCd3b3JkJyxcblx0J2lzc3VlJyxcblx0J21hcmtldCcsXG5cdCdwYXknLFxuXHQnYnVpbGQnLFxuXHQnaG9sZCcsXG5cdCdzZXJ2aWNlJyxcblx0J2FnYWluc3QnLFxuXHQnYmVsaWV2ZScsXG5cdCdzZWNvbmQnLFxuXHQndGhvdWdoJyxcblx0J3llcycsXG5cdCdsb3ZlJyxcblx0J2luY3JlYXNlJyxcblx0J2pvYicsXG5cdCdwbGFuJyxcblx0J3Jlc3VsdCcsXG5cdCdhd2F5Jyxcblx0J2V4YW1wbGUnLFxuXHQnaGFwcGVuJyxcblx0J29mZmVyJyxcblx0J3lvdW5nJyxcblx0J2Nsb3NlJyxcblx0J3Byb2dyYW0nLFxuXHQnbGVhZCcsXG5cdCdidXknLFxuXHQndW5kZXJzdGFuZCcsXG5cdCd0aGFuaycsXG5cdCdmYXInLFxuXHQndG9kYXknLFxuXHQnaG91cicsXG5cdCdzdHVkZW50Jyxcblx0J2ZhY2UnLFxuXHQnaG9wZScsXG5cdCdpZGVhJyxcblx0J2Nvc3QnLFxuXHQnbGVzcycsXG5cdCdyb29tJyxcblx0J3VudGlsJyxcblx0J3JlYXNvbicsXG5cdCdmb3JtJyxcblx0J3NwZW5kJyxcblx0J2hlYWQnLFxuXHQnY2FyJyxcblx0J2xlYXJuJyxcblx0J2xldmVsJyxcblx0J3BlcnNvbicsXG5cdCdleHBlcmllbmNlJyxcblx0J29uY2UnLFxuXHQnbWVtYmVyJyxcblx0J2Vub3VnaCcsXG5cdCdiYWQnLFxuXHQnY2l0eScsXG5cdCduaWdodCcsXG5cdCdhYmxlJyxcblx0J3N1cHBvcnQnLFxuXHQnd2hldGhlcicsXG5cdCdsaW5lJyxcblx0J3ByZXNlbnQnLFxuXHQnc2lkZScsXG5cdCdxdWl0ZScsXG5cdCdhbHRob3VnaCcsXG5cdCdzdXJlJyxcblx0J3Rlcm0nLFxuXHQnbGVhc3QnLFxuXHQnYWdlJyxcblx0J2xvdycsXG5cdCdzcGVhaycsXG5cdCd3aXRoaW4nLFxuXHQncHJvY2VzcycsXG5cdCdwdWJsaWMnLFxuXHQnb2Z0ZW4nLFxuXHQndHJhaW4nLFxuXHQncG9zc2libGUnLFxuXHQnYWN0dWFsbHknLFxuXHQncmF0aGVyJyxcblx0J3ZpZXcnLFxuXHQndG9nZXRoZXInLFxuXHQnY29uc2lkZXInLFxuXHQncHJpY2UnLFxuXHQncGFyZW50Jyxcblx0J2hhcmQnLFxuXHQncGFydHknLFxuXHQnbG9jYWwnLFxuXHQnY29udHJvbCcsXG5cdCdhbHJlYWR5Jyxcblx0J2NvbmNlcm4nLFxuXHQncHJvZHVjdCcsXG5cdCdsb3NlJyxcblx0J3N0b3J5Jyxcblx0J2FsbW9zdCcsXG5cdCdjb250aW51ZScsXG5cdCdzdGFuZCcsXG5cdCd3aG9sZScsXG5cdCd5ZXQnLFxuXHQncmF0ZScsXG5cdCdjYXJlJyxcblx0J2V4cGVjdCcsXG5cdCdlZmZlY3QnLFxuXHQnc29ydCcsXG5cdCdldmVyJyxcblx0J2FueXRoaW5nJyxcblx0J2NhdXNlJyxcblx0J2ZhbGwnLFxuXHQnZGVhbCcsXG5cdCd3YXRlcicsXG5cdCdzZW5kJyxcblx0J2FsbG93Jyxcblx0J3Nvb24nLFxuXHQnd2F0Y2gnLFxuXHQnYmFzZScsXG5cdCdwcm9iYWJseScsXG5cdCdzdWdnZXN0Jyxcblx0J3Bhc3QnLFxuXHQncG93ZXInLFxuXHQndGVzdCcsXG5cdCd2aXNpdCcsXG5cdCdjZW50ZXInLFxuXHQnZ3JvdycsXG5cdCdub3RoaW5nJyxcblx0J3JldHVybicsXG5cdCdtb3RoZXInLFxuXHQnd2FsaycsXG5cdCdtYXR0ZXInLFxuXHQnbWluZCcsXG5cdCd2YWx1ZScsXG5cdCdvZmZpY2UnLFxuXHQncmVjb3JkJyxcblx0J3N0YXknLFxuXHQnZm9yY2UnLFxuXHQnc3RvcCcsXG5cdCdzZXZlcmFsJyxcblx0J2xpZ2h0Jyxcblx0J2RldmVsb3AnLFxuXHQncmVtZW1iZXInLFxuXHQnYml0Jyxcblx0J3NoYXJlJyxcblx0J3JlYWwnLFxuXHQnYW5zd2VyJyxcblx0J3NpdCcsXG5cdCdmaWd1cmUnLFxuXHQnbGV0dGVyJyxcblx0J2RlY2lkZScsXG5cdCdsYW5ndWFnZScsXG5cdCdzdWJqZWN0Jyxcblx0J2NsYXNzJyxcblx0J2RldmVsb3BtZW50Jyxcblx0J3Rvd24nLFxuXHQnaGFsZicsXG5cdCdtaW51dGUnLFxuXHQnZm9vZCcsXG5cdCdicmVhaycsXG5cdCdjbGVhcicsXG5cdCdmdXR1cmUnLFxuXHQnZWl0aGVyJyxcblx0J2FnbycsXG5cdCdwZXInLFxuXHQncmVtYWluJyxcblx0J3RvcCcsXG5cdCdhbW9uZycsXG5cdCd3aW4nLFxuXHQnY29sb3InLFxuXHQnaW52b2x2ZScsXG5cdCdyZWFjaCcsXG5cdCdzb2NpYWwnLFxuXHQncGVyaW9kJyxcblx0J2Fjcm9zcycsXG5cdCdub3RlJyxcblx0J2hpc3RvcnknLFxuXHQnY3JlYXRlJyxcblx0J2RyaXZlJyxcblx0J2Fsb25nJyxcblx0J3R5cGUnLFxuXHQnc291bmQnLFxuXHQnZXllJyxcblx0J211c2ljJyxcblx0J2dhbWUnLFxuXHQncG9saXRpY2FsJyxcblx0J2ZyZWUnLFxuXHQncmVjZWl2ZScsXG5cdCdtb21lbnQnLFxuXHQnc2FsZScsXG5cdCdwb2xpY3knLFxuXHQnZnVydGhlcicsXG5cdCdib2R5Jyxcblx0J3JlcXVpcmUnLFxuXHQnd2FpdCcsXG5cdCdnZW5lcmFsJyxcblx0J2FwcGVhcicsXG5cdCd0b3dhcmQnLFxuXHQndGVhbScsXG5cdCdlYXN5Jyxcblx0J2luZGl2aWR1YWwnLFxuXHQnZnVsbCcsXG5cdCdibGFjaycsXG5cdCdzZW5zZScsXG5cdCdwZXJoYXBzJyxcblx0J2FkZCcsXG5cdCdydWxlJyxcblx0J3Bhc3MnLFxuXHQncHJvZHVjZScsXG5cdCdzZWxsJyxcblx0J3Nob3J0Jyxcblx0J2FncmVlJyxcblx0J2xhdycsXG5cdCdldmVyeXRoaW5nJyxcblx0J3Jlc2VhcmNoJyxcblx0J2NvdmVyJyxcblx0J3BhcGVyJyxcblx0J3Bvc2l0aW9uJyxcblx0J25lYXInLFxuXHQnaHVtYW4nLFxuXHQnY29tcHV0ZXInLFxuXHQnc2l0dWF0aW9uJyxcblx0J3N0YWZmJyxcblx0J2FjdGl2aXR5Jyxcblx0J2ZpbG0nLFxuXHQnbW9ybmluZycsXG5cdCd3YXInLFxuXHQnYWNjb3VudCcsXG5cdCdzaG9wJyxcblx0J21ham9yJyxcblx0J3NvbWVvbmUnLFxuXHQnYWJvdmUnLFxuXHQnZGVzaWduJyxcblx0J2V2ZW50Jyxcblx0J3NwZWNpYWwnLFxuXHQnc29tZXRpbWVzJyxcblx0J2NvbmRpdGlvbicsXG5cdCdjYXJyeScsXG5cdCdjaG9vc2UnLFxuXHQnZmF0aGVyJyxcblx0J2RlY2lzaW9uJyxcblx0J3RhYmxlJyxcblx0J2NlcnRhaW4nLFxuXHQnZm9yd2FyZCcsXG5cdCdtYWluJyxcblx0J2RpZScsXG5cdCdiZWFyJyxcblx0J2N1dCcsXG5cdCdkZXNjcmliZScsXG5cdCdoaW1zZWxmJyxcblx0J2F2YWlsYWJsZScsXG5cdCdlc3BlY2lhbGx5Jyxcblx0J3N0cm9uZycsXG5cdCdyaXNlJyxcblx0J2dpcmwnLFxuXHQnbWF5YmUnLFxuXHQnY29tbXVuaXR5Jyxcblx0J2Vsc2UnLFxuXHQncGFydGljdWxhcicsXG5cdCdyb2xlJyxcblx0J2pvaW4nLFxuXHQnZGlmZmljdWx0Jyxcblx0J3BsZWFzZScsXG5cdCdkZXRhaWwnLFxuXHQnZGlmZmVyZW5jZScsXG5cdCdhY3Rpb24nLFxuXHQnaGVhbHRoJyxcblx0J2VhdCcsXG5cdCdzdGVwJyxcblx0J3RydWUnLFxuXHQncGhvbmUnLFxuXHQndGhlbXNlbHZlcycsXG5cdCdkcmF3Jyxcblx0J3doaXRlJyxcblx0J2RhdGUnLFxuXHQncHJhY3RpY2UnLFxuXHQnbW9kZWwnLFxuXHQncmFpc2UnLFxuXHQnY3VzdG9tZXInLFxuXHQnZnJvbnQnLFxuXHQnZXhwbGFpbicsXG5cdCdkb29yJyxcblx0J291dHNpZGUnLFxuXHQnYmVoaW5kJyxcblx0J2Vjb25vbWljJyxcblx0J3NpdGUnLFxuXHQnYXBwcm9hY2gnLFxuXHQndGVhY2hlcicsXG5cdCdsYW5kJyxcblx0J2NoYXJnZScsXG5cdCdmaW5hbGx5Jyxcblx0J3NpZ24nLFxuXHQnY2xhaW0nLFxuXHQncmVsYXRpb25zaGlwJyxcblx0J3RyYXZlbCcsXG5cdCdlbmpveScsXG5cdCdkZWF0aCcsXG5cdCduaWNlJyxcblx0J2Ftb3VudCcsXG5cdCdpbXByb3ZlJyxcblx0J3BpY3R1cmUnLFxuXHQnYm95Jyxcblx0J3JlZ2FyZCcsXG5cdCdvcmdhbml6YXRpb24nLFxuXHQnaGFwcHknLFxuXHQnY291cGxlJyxcblx0J2FjdCcsXG5cdCdyYW5nZScsXG5cdCdxdWFsaXR5Jyxcblx0J3Byb2plY3QnLFxuXHQncm91bmQnLFxuXHQnb3Bwb3J0dW5pdHknLFxuXHQncm9hZCcsXG5cdCdhY2NvcmQnLFxuXHQnbGlzdCcsXG5cdCd3aXNoJyxcblx0J3RoZXJlZm9yZScsXG5cdCd3ZWFyJyxcblx0J2Z1bmQnLFxuXHQncmVzdCcsXG5cdCdraWQnLFxuXHQnaW5kdXN0cnknLFxuXHQnZWR1Y2F0aW9uJyxcblx0J21lYXN1cmUnLFxuXHQna2lsbCcsXG5cdCdzZXJ2ZScsXG5cdCdsaWtlbHknLFxuXHQnY2VydGFpbmx5Jyxcblx0J25hdGlvbmFsJyxcblx0J2l0c2VsZicsXG5cdCd0ZWFjaCcsXG5cdCdmaWVsZCcsXG5cdCdzZWN1cml0eScsXG5cdCdhaXInLFxuXHQnYmVuZWZpdCcsXG5cdCd0cmFkZScsXG5cdCdyaXNrJyxcblx0J25ld3MnLFxuXHQnc3RhbmRhcmQnLFxuXHQndm90ZScsXG5cdCdwZXJjZW50Jyxcblx0J2ZvY3VzJyxcblx0J3N0YWdlJyxcblx0J3NwYWNlJyxcblx0J2luc3RlYWQnLFxuXHQncmVhbGl6ZScsXG5cdCd1c3VhbGx5Jyxcblx0J2RhdGEnLFxuXHQnc2luZ2xlJyxcblx0J2FkZHJlc3MnLFxuXHQncGVyZm9ybWFuY2UnLFxuXHQnY2hhbmNlJyxcblx0J2FjY2VwdCcsXG5cdCdzb2NpZXR5Jyxcblx0J3RlY2hub2xvZ3knLFxuXHQnbWVudGlvbicsXG5cdCdjaG9pY2UnLFxuXHQnc2F2ZScsXG5cdCdjb21tb24nLFxuXHQnY3VsdHVyZScsXG5cdCd0b3RhbCcsXG5cdCdkZW1hbmQnLFxuXHQnbWF0ZXJpYWwnLFxuXHQnbGltaXQnLFxuXHQnbGlzdGVuJyxcblx0J2R1ZScsXG5cdCd3cm9uZycsXG5cdCdmb290Jyxcblx0J2VmZm9ydCcsXG5cdCdhdHRlbnRpb24nLFxuXHQndXBvbicsXG5cdCdjaGVjaycsXG5cdCdjb21wbGV0ZScsXG5cdCdsaWUnLFxuXHQncGljaycsXG5cdCdyZWR1Y2UnLFxuXHQncGVyc29uYWwnLFxuXHQnZ3JvdW5kJyxcblx0J2FuaW1hbCcsXG5cdCdhcnJpdmUnLFxuXHQncGF0aWVudCcsXG5cdCdjdXJyZW50Jyxcblx0J2NlbnR1cnknLFxuXHQnZXZpZGVuY2UnLFxuXHQnZXhpc3QnLFxuXHQnc2ltaWxhcicsXG5cdCdmaWdodCcsXG5cdCdsZWFkZXInLFxuXHQnZmluZScsXG5cdCdzdHJlZXQnLFxuXHQnZm9ybWVyJyxcblx0J2NvbnRhY3QnLFxuXHQncGFydGljdWxhcmx5Jyxcblx0J3dpZmUnLFxuXHQnc3BvcnQnLFxuXHQncHJlcGFyZScsXG5cdCdkaXNjdXNzJyxcblx0J3Jlc3BvbnNlJyxcblx0J3ZvaWNlJyxcblx0J3BpZWNlJyxcblx0J2ZpbmlzaCcsXG5cdCdzdXBwb3NlJyxcblx0J2FwcGx5Jyxcblx0J3ByZXNpZGVudCcsXG5cdCdmaXJlJyxcblx0J2NvbXBhcmUnLFxuXHQnY291cnQnLFxuXHQncG9saWNlJyxcblx0J3N0b3JlJyxcblx0J3Bvb3InLFxuXHQna25vd2xlZGdlJyxcblx0J2xhdWdoJyxcblx0J2FybScsXG5cdCdoZWFydCcsXG5cdCdzb3VyY2UnLFxuXHQnZW1wbG95ZWUnLFxuXHQnbWFuYWdlJyxcblx0J3NpbXBseScsXG5cdCdiYW5rJyxcblx0J2Zpcm0nLFxuXHQnY2VsbCcsXG5cdCdhcnRpY2xlJyxcblx0J2Zhc3QnLFxuXHQnYXR0YWNrJyxcblx0J2ZvcmVpZ24nLFxuXHQnc3VycHJpc2UnLFxuXHQnZmVhdHVyZScsXG5cdCdmYWN0b3InLFxuXHQncHJldHR5Jyxcblx0J3JlY2VudGx5Jyxcblx0J2FmZmVjdCcsXG5cdCdkcm9wJyxcblx0J3JlY2VudCcsXG5cdCdyZWxhdGUnLFxuXHQnb2ZmaWNpYWwnLFxuXHQnZmluYW5jaWFsJyxcblx0J21pc3MnLFxuXHQnYXJ0Jyxcblx0J2NhbXBhaWduJyxcblx0J3ByaXZhdGUnLFxuXHQncGF1c2UnLFxuXHQnZXZlcnlvbmUnLFxuXHQnZm9yZ2V0Jyxcblx0J3BhZ2UnLFxuXHQnd29ycnknLFxuXHQnc3VtbWVyJyxcblx0J2RyaW5rJyxcblx0J29waW5pb24nLFxuXHQncGFyaycsXG5cdCdyZXByZXNlbnQnLFxuXHQna2V5Jyxcblx0J2luc2lkZScsXG5cdCdtYW5hZ2VyJyxcblx0J2ludGVybmF0aW9uYWwnLFxuXHQnY29udGFpbicsXG5cdCdub3RpY2UnLFxuXHQnd29uZGVyJyxcblx0J25hdHVyZScsXG5cdCdzdHJ1Y3R1cmUnLFxuXHQnc2VjdGlvbicsXG5cdCdteXNlbGYnLFxuXHQnZXhhY3RseScsXG5cdCdwbGFudCcsXG5cdCdwYWludCcsXG5cdCd3b3JrZXInLFxuXHQncHJlc3MnLFxuXHQnd2hhdGV2ZXInLFxuXHQnbmVjZXNzYXJ5Jyxcblx0J3JlZ2lvbicsXG5cdCdncm93dGgnLFxuXHQnZXZlbmluZycsXG5cdCdpbmZsdWVuY2UnLFxuXHQncmVzcGVjdCcsXG5cdCd2YXJpb3VzJyxcblx0J2NhdGNoJyxcblx0J3RodXMnLFxuXHQnc2tpbGwnLFxuXHQnYXR0ZW1wdCcsXG5cdCdzb24nLFxuXHQnc2ltcGxlJyxcblx0J21lZGl1bScsXG5cdCdhdmVyYWdlJyxcblx0J3N0b2NrJyxcblx0J21hbmFnZW1lbnQnLFxuXHQnY2hhcmFjdGVyJyxcblx0J2JlZCcsXG5cdCdoaXQnLFxuXHQnZXN0YWJsaXNoJyxcblx0J2luZGVlZCcsXG5cdCdmaW5hbCcsXG5cdCdlY29ub215Jyxcblx0J2ZpdCcsXG5cdCdndXknLFxuXHQnZnVuY3Rpb24nLFxuXHQneWVzdGVyZGF5Jyxcblx0J2ltYWdlJyxcblx0J3NpemUnLFxuXHQnYmVoYXZpb3InLFxuXHQnYWRkaXRpb24nLFxuXHQnZGV0ZXJtaW5lJyxcblx0J3N0YXRpb24nLFxuXHQncG9wdWxhdGlvbicsXG5cdCdmYWlsJyxcblx0J2Vudmlyb25tZW50Jyxcblx0J3Byb2R1Y3Rpb24nLFxuXHQnY29udHJhY3QnLFxuXHQncGxheWVyJyxcblx0J2NvbW1lbnQnLFxuXHQnZW50ZXInLFxuXHQnb2NjdXInLFxuXHQnYWxvbmUnLFxuXHQnc2lnbmlmaWNhbnQnLFxuXHQnZHJ1ZycsXG5cdCd3YWxsJyxcblx0J3NlcmllcycsXG5cdCdkaXJlY3QnLFxuXHQnc3VjY2VzcycsXG5cdCd0b21vcnJvdycsXG5cdCdkaXJlY3RvcicsXG5cdCdjbGVhcmx5Jyxcblx0J2xhY2snLFxuXHQncmV2aWV3Jyxcblx0J2RlcGVuZCcsXG5cdCdyYWNlJyxcblx0J3JlY29nbml6ZScsXG5cdCd3aW5kb3cnLFxuXHQncHVycG9zZScsXG5cdCdkZXBhcnRtZW50Jyxcblx0J2dhaW4nLFxuXHQndHJlZScsXG5cdCdjb2xsZWdlJyxcblx0J2FyZ3VlJyxcblx0J2JvYXJkJyxcblx0J2hvbGlkYXknLFxuXHQnbWFyaycsXG5cdCdjaHVyY2gnLFxuXHQnbWFjaGluZScsXG5cdCdhY2hpZXZlJyxcblx0J2l0ZW0nLFxuXHQncHJvdmUnLFxuXHQnY2VudCcsXG5cdCdzZWFzb24nLFxuXHQnZmxvb3InLFxuXHQnc3R1ZmYnLFxuXHQnd2lkZScsXG5cdCdhbnlvbmUnLFxuXHQnbWV0aG9kJyxcblx0J2FuYWx5c2lzJyxcblx0J2VsZWN0aW9uJyxcblx0J21pbGl0YXJ5Jyxcblx0J2hvdGVsJyxcblx0J2NsdWInLFxuXHQnYmVsb3cnLFxuXHQnbW92aWUnLFxuXHQnZG9jdG9yJyxcblx0J2Rpc2N1c3Npb24nLFxuXHQnc29ycnknLFxuXHQnY2hhbGxlbmdlJyxcblx0J25hdGlvbicsXG5cdCduZWFybHknLFxuXHQnc3RhdGVtZW50Jyxcblx0J2xpbmsnLFxuXHQnZGVzcGl0ZScsXG5cdCdpbnRyb2R1Y2UnLFxuXHQnYWR2YW50YWdlJyxcblx0J3JlYWR5Jyxcblx0J21hcnJ5Jyxcblx0J3N0cmlrZScsXG5cdCdtaWxlJyxcblx0J3NlZWsnLFxuXHQnYWJpbGl0eScsXG5cdCd1bml0Jyxcblx0J2NhcmQnLFxuXHQnaG9zcGl0YWwnLFxuXHQncXVpY2tseScsXG5cdCdpbnRlcnZpZXcnLFxuXHQnYWdyZWVtZW50Jyxcblx0J3JlbGVhc2UnLFxuXHQndGF4Jyxcblx0J3NvbHV0aW9uJyxcblx0J2NhcGl0YWwnLFxuXHQncG9wdWxhcicsXG5cdCdzcGVjaWZpYycsXG5cdCdiZWF1dGlmdWwnLFxuXHQnZmVhcicsXG5cdCdhaW0nLFxuXHQndGVsZXZpc2lvbicsXG5cdCdzZXJpb3VzJyxcblx0J3RhcmdldCcsXG5cdCdkZWdyZWUnLFxuXHQncHVsbCcsXG5cdCdyZWQnLFxuXHQnaHVzYmFuZCcsXG5cdCdhY2Nlc3MnLFxuXHQnbW92ZW1lbnQnLFxuXHQndHJlYXQnLFxuXHQnaWRlbnRpZnknLFxuXHQnbG9zcycsXG5cdCdzaGFsbCcsXG5cdCdtb2Rlcm4nLFxuXHQncHJlc3N1cmUnLFxuXHQnYnVzJyxcblx0J3RyZWF0bWVudCcsXG5cdCd5b3Vyc2VsZicsXG5cdCdzdXBwbHknLFxuXHQndmlsbGFnZScsXG5cdCd3b3J0aCcsXG5cdCduYXR1cmFsJyxcblx0J2V4cHJlc3MnLFxuXHQnaW5kaWNhdGUnLFxuXHQnYXR0ZW5kJyxcblx0J2Jyb3RoZXInLFxuXHQnaW52ZXN0bWVudCcsXG5cdCdzY29yZScsXG5cdCdvcmdhbml6ZScsXG5cdCd0cmlwJyxcblx0J2JleW9uZCcsXG5cdCdzbGVlcCcsXG5cdCdmaXNoJyxcblx0J3Byb21pc2UnLFxuXHQncG90ZW50aWFsJyxcblx0J2VuZXJneScsXG5cdCd0cm91YmxlJyxcblx0J3JlbGF0aW9uJyxcblx0J3RvdWNoJyxcblx0J2ZpbGUnLFxuXHQnbWlkZGxlJyxcblx0J2JhcicsXG5cdCdzdWZmZXInLFxuXHQnc3RyYXRlZ3knLFxuXHQnZGVlcCcsXG5cdCdleGNlcHQnLFxuXHQnY2xlYW4nLFxuXHQndGVuZCcsXG5cdCdhZHZhbmNlJyxcblx0J2ZpbGwnLFxuXHQnc3RhcicsXG5cdCduZXR3b3JrJyxcblx0J2dlbmVyYWxseScsXG5cdCdvcGVyYXRpb24nLFxuXHQnbWF0Y2gnLFxuXHQnYXZvaWQnLFxuXHQnc2VhdCcsXG5cdCd0aHJvdycsXG5cdCd0YXNrJyxcblx0J25vcm1hbCcsXG5cdCdnb2FsJyxcblx0J2Fzc29jaWF0ZScsXG5cdCdibHVlJyxcblx0J3Bvc2l0aXZlJyxcblx0J29wdGlvbicsXG5cdCdib3gnLFxuXHQnaHVnZScsXG5cdCdtZXNzYWdlJyxcblx0J2luc3RhbmNlJyxcblx0J3N0eWxlJyxcblx0J3JlZmVyJyxcblx0J2NvbGQnLFxuXHQncHVzaCcsXG5cdCdxdWFydGVyJyxcblx0J2Fzc3VtZScsXG5cdCdiYWJ5Jyxcblx0J3N1Y2Nlc3NmdWwnLFxuXHQnc2luZycsXG5cdCdkb3VidCcsXG5cdCdjb21wZXRpdGlvbicsXG5cdCd0aGVvcnknLFxuXHQncHJvcG9zZScsXG5cdCdyZWZlcmVuY2UnLFxuXHQnYXJndW1lbnQnLFxuXHQnYWR1bHQnLFxuXHQnZmx5Jyxcblx0J2RvY3VtZW50Jyxcblx0J3BhdHRlcm4nLFxuXHQnYXBwbGljYXRpb24nLFxuXHQnaG90Jyxcblx0J29idmlvdXNseScsXG5cdCd1bmNsZWFyJyxcblx0J2JpbGwnLFxuXHQnc2VhcmNoJyxcblx0J3NlcGFyYXRlJyxcblx0J2NlbnRyYWwnLFxuXHQnY2FyZWVyJyxcblx0J2FueXdheScsXG5cdCdzcGVlY2gnLFxuXHQnZG9nJyxcblx0J29mZmljZXInLFxuXHQndGhyb3VnaG91dCcsXG5cdCdvaWwnLFxuXHQnZHJlc3MnLFxuXHQncHJvZml0Jyxcblx0J2d1ZXNzJyxcblx0J2Z1bicsXG5cdCdwcm90ZWN0Jyxcblx0J3Jlc291cmNlJyxcblx0J3NjaWVuY2UnLFxuXHQnZGlzZWFzZScsXG5cdCdiYWxhbmNlJyxcblx0J2RhbWFnZScsXG5cdCdiYXNpcycsXG5cdCdhdXRob3InLFxuXHQnYmFzaWMnLFxuXHQnZW5jb3VyYWdlJyxcblx0J2hhaXInLFxuXHQnbWFsZScsXG5cdCdvcGVyYXRlJyxcblx0J3JlZmxlY3QnLFxuXHQnZXhlcmNpc2UnLFxuXHQndXNlZnVsJyxcblx0J3Jlc3RhdXJhbnQnLFxuXHQnaW5jb21lJyxcblx0J3Byb3BlcnR5Jyxcblx0J3ByZXZpb3VzJyxcblx0J2RhcmsnLFxuXHQnaW1hZ2luZScsXG5cdCdva2F5Jyxcblx0J2Vhcm4nLFxuXHQnZGF1Z2h0ZXInLFxuXHQncG9zdCcsXG5cdCduZXdzcGFwZXInLFxuXHQnZGVmaW5lJyxcblx0J2NvbmNsdXNpb24nLFxuXHQnY2xvY2snLFxuXHQnZXZlcnlib2R5Jyxcblx0J3dlZWtlbmQnLFxuXHQncGVyZm9ybScsXG5cdCdwcm9mZXNzaW9uYWwnLFxuXHQnbWluZScsXG5cdCdkZWJhdGUnLFxuXHQnbWVtb3J5Jyxcblx0J2dyZWVuJyxcblx0J3NvbmcnLFxuXHQnb2JqZWN0Jyxcblx0J21haW50YWluJyxcblx0J2NyZWRpdCcsXG5cdCdyaW5nJyxcblx0J2Rpc2NvdmVyJyxcblx0J2RlYWQnLFxuXHQnYWZ0ZXJub29uJyxcblx0J3ByZWZlcicsXG5cdCdleHRlbmQnLFxuXHQncG9zc2liaWxpdHknLFxuXHQnZGlyZWN0aW9uJyxcblx0J2ZhY2lsaXR5Jyxcblx0J3ZhcmlldHknLFxuXHQnZGFpbHknLFxuXHQnY2xvdGhlcycsXG5cdCdzY3JlZW4nLFxuXHQndHJhY2snLFxuXHQnZGFuY2UnLFxuXHQnY29tcGxldGVseScsXG5cdCdmZW1hbGUnLFxuXHQncmVzcG9uc2liaWxpdHknLFxuXHQnb3JpZ2luYWwnLFxuXHQnc2lzdGVyJyxcblx0J3JvY2snLFxuXHQnZHJlYW0nLFxuXHQnbm9yJyxcblx0J3VuaXZlcnNpdHknLFxuXHQnZWFzaWx5Jyxcblx0J2FnZW5jeScsXG5cdCdkb2xsYXInLFxuXHQnZ2FyZGVuJyxcblx0J2ZpeCcsXG5cdCdhaGVhZCcsXG5cdCdjcm9zcycsXG5cdCd5ZWFoJyxcblx0J3dlaWdodCcsXG5cdCdsZWdhbCcsXG5cdCdwcm9wb3NhbCcsXG5cdCd2ZXJzaW9uJyxcblx0J2NvbnZlcnNhdGlvbicsXG5cdCdzb21lYm9keScsXG5cdCdwb3VuZCcsXG5cdCdtYWdhemluZScsXG5cdCdzaGFwZScsXG5cdCdzZWEnLFxuXHQnaW1tZWRpYXRlbHknLFxuXHQnd2VsY29tZScsXG5cdCdzbWlsZScsXG5cdCdjb21tdW5pY2F0aW9uJyxcblx0J2FnZW50Jyxcblx0J3RyYWRpdGlvbmFsJyxcblx0J3JlcGxhY2UnLFxuXHQnanVkZ2UnLFxuXHQnaGVyc2VsZicsXG5cdCdzdWRkZW5seScsXG5cdCdnZW5lcmF0aW9uJyxcblx0J2VzdGltYXRlJyxcblx0J2Zhdm9yaXRlJyxcblx0J2RpZmZpY3VsdHknLFxuXHQncHVyY2hhc2UnLFxuXHQnc2hvb3QnLFxuXHQnYW5ub3VuY2UnLFxuXHQndW5sZXNzJyxcblx0J2luZGVwZW5kZW50Jyxcblx0J3JlY29tbWVuZCcsXG5cdCdzdXJ2ZXknLFxuXHQnbWFqb3JpdHknLFxuXHQnc3RpY2snLFxuXHQncmVxdWVzdCcsXG5cdCdyaWNoJyxcblx0J3dpbmQnLFxuXHQnbm9uZScsXG5cdCdleGNoYW5nZScsXG5cdCdidWRnZXQnLFxuXHQnZmFtb3VzJyxcblx0J2Jsb29kJyxcblx0J2FwcHJvcHJpYXRlJyxcblx0J2Jsb2NrJyxcblx0J3dhcm0nLFxuXHQnY291bnQnLFxuXHQnc2NlbmUnLFxuXHQnd3JpdGVyJyxcblx0J2NvbnRlbnQnLFxuXHQncHJldmVudCcsXG5cdCdzYWZlJyxcblx0J2ludml0ZScsXG5cdCdtaXgnLFxuXHQnZWxlbWVudCcsXG5cdCdlZmZlY3RpdmUnLFxuXHQnY29ycmVjdCcsXG5cdCdtZWRpY2FsJyxcblx0J2FkbWl0Jyxcblx0J2JlYXQnLFxuXHQndGVsZXBob25lJyxcblx0J2NvcHknLFxuXHQnY29tbWl0dGVlJyxcblx0J2F3YXJlJyxcblx0J2FkdmljZScsXG5cdCdoYW5kbGUnLFxuXHQnZ2xhc3MnLFxuXHQndHJpYWwnLFxuXHQnc3RyZXNzJyxcblx0J3JhZGlvJyxcblx0J2FkbWluaXN0cmF0aW9uJyxcblx0J2NvbXBsZXgnLFxuXHQndGV4dCcsXG5cdCdjb250ZXh0Jyxcblx0J3JpZGUnLFxuXHQnZGlyZWN0bHknLFxuXHQnaGVhdnknLFxuXHQncmVtb3ZlJyxcblx0J2NvbmR1Y3QnLFxuXHQnZXF1aXBtZW50Jyxcblx0J290aGVyd2lzZScsXG5cdCd0aXRsZScsXG5cdCdleHRyYScsXG5cdCdleGVjdXRpdmUnLFxuXHQnY2hhaXInLFxuXHQnZXhwZW5zaXZlJyxcblx0J3NhbXBsZScsXG5cdCdzZXgnLFxuXHQnZGVsaXZlcicsXG5cdCd2aWRlbycsXG5cdCdjb25uZWN0aW9uJyxcblx0J3ByaW1hcnknLFxuXHQnd2VhdGhlcicsXG5cdCdjb2xsZWN0Jyxcblx0J2luZm9ybScsXG5cdCdwcmluY2lwbGUnLFxuXHQnc3RyYWlnaHQnLFxuXHQnYXBwZWFsJyxcblx0J2hpZ2hseScsXG5cdCd0cnVzdCcsXG5cdCd3b25kZXJmdWwnLFxuXHQnZmxhdCcsXG5cdCdhYnNvbHV0ZWx5Jyxcblx0J2Zsb3cnLFxuXHQnZmFpcicsXG5cdCdhZGRpdGlvbmFsJyxcblx0J3Jlc3BvbnNpYmxlJyxcblx0J2Zhcm0nLFxuXHQnY29sbGVjdGlvbicsXG5cdCdoYW5nJyxcblx0J25lZ2F0aXZlJyxcblx0J2JhbmQnLFxuXHQncmVsYXRpdmUnLFxuXHQndG91cicsXG5cdCdhbHRlcm5hdGl2ZScsXG5cdCdzb2Z0d2FyZScsXG5cdCdwYWlyJyxcblx0J3NoaXAnLFxuXHQnYXR0aXR1ZGUnLFxuXHQnY2hlYXAnLFxuXHQnZG91YmxlJyxcblx0J2xlZycsXG5cdCdvYnNlcnZlJyxcblx0J3NlbnRlbmNlJyxcblx0J3ByaW50Jyxcblx0J3Byb2dyZXNzJyxcblx0J3RydXRoJyxcblx0J25vYm9keScsXG5cdCdleGFtaW5lJyxcblx0J2xheScsXG5cdCdzcGVlZCcsXG5cdCdwb2xpdGljcycsXG5cdCdyZXBseScsXG5cdCdkaXNwbGF5Jyxcblx0J3RyYW5zZmVyJyxcblx0J3BlcmZlY3QnLFxuXHQnc2xpZ2h0bHknLFxuXHQnb3ZlcmFsbCcsXG5cdCdpbnRlbmQnLFxuXHQndXNlcicsXG5cdCdyZXNwb25kJyxcblx0J2Rpbm5lcicsXG5cdCdzbG93Jyxcblx0J3JlZ3VsYXInLFxuXHQncGh5c2ljYWwnLFxuXHQnYXBhcnQnLFxuXHQnc3VpdCcsXG5cdCdmZWRlcmFsJyxcblx0J3JldmVhbCcsXG5cdCdwZXJjZW50YWdlJyxcblx0J3BlYWNlJyxcblx0J3N0YXR1cycsXG5cdCdjcmltZScsXG5cdCdkZWNsaW5lJyxcblx0J2RlY2FkZScsXG5cdCdsYXVuY2gnLFxuXHQnd2FybicsXG5cdCdjb25zdW1lcicsXG5cdCdmYXZvcicsXG5cdCdkcnknLFxuXHQncGFydG5lcicsXG5cdCdpbnN0aXR1dGlvbicsXG5cdCdzcG90Jyxcblx0J2hvcnNlJyxcblx0J2V2ZW50dWFsbHknLFxuXHQnaGVhdCcsXG5cdCdleGNpdGUnLFxuXHQncmVhZGVyJyxcblx0J2ltcG9ydGFuY2UnLFxuXHQnZGlzdGFuY2UnLFxuXHQnZ3VpZGUnLFxuXHQnZ3JhbnQnLFxuXHQndGF4aScsXG5cdCdmZWVkJyxcblx0J3BhaW4nLFxuXHQnc2VjdG9yJyxcblx0J21pc3Rha2UnLFxuXHQnZW5zdXJlJyxcblx0J3NhdGlzZnknLFxuXHQnY2hpZWYnLFxuXHQnY29vbCcsXG5cdCdleHBlcnQnLFxuXHQnd2F2ZScsXG5cdCdzb3V0aCcsXG5cdCdsYWJvcicsXG5cdCdzdXJmYWNlJyxcblx0J2xpYnJhcnknLFxuXHQnZXhjZWxsZW50Jyxcblx0J2VkZ2UnLFxuXHQnY2FtcCcsXG5cdCdhdWRpZW5jZScsXG5cdCdsaWZ0Jyxcblx0J3Byb2NlZHVyZScsXG5cdCdlbWFpbCcsXG5cdCdnbG9iYWwnLFxuXHQnc3RydWdnbGUnLFxuXHQnYWR2ZXJ0aXNlJyxcblx0J3NlbGVjdCcsXG5cdCdzdXJyb3VuZCcsXG5cdCdleHRlbnQnLFxuXHQncml2ZXInLFxuXHQnYW5udWFsJyxcblx0J2Z1bGx5Jyxcblx0J2NvbnRyYXN0Jyxcblx0J3JvbGwnLFxuXHQncmVhbGl0eScsXG5cdCdwaG90b2dyYXBoJyxcblx0J2FydGlzdCcsXG5cdCdjb25mbGljdCcsXG5cdCdlbnRpcmUnLFxuXHQncHJlc2VuY2UnLFxuXHQnY3Jvd2QnLFxuXHQnY29ybmVyJyxcblx0J2dhcycsXG5cdCdzaGlmdCcsXG5cdCduZXQnLFxuXHQnY2F0ZWdvcnknLFxuXHQnc2VjcmV0YXJ5Jyxcblx0J2RlZmVuc2UnLFxuXHQncXVpY2snLFxuXHQnY29vaycsXG5cdCdzcHJlYWQnLFxuXHQnbnVjbGVhcicsXG5cdCdzY2FsZScsXG5cdCdkcml2ZXInLFxuXHQnYmFsbCcsXG5cdCdjcnknLFxuXHQnaW50cm9kdWN0aW9uJyxcblx0J3JlcXVpcmVtZW50Jyxcblx0J25vcnRoJyxcblx0J2NvbmZpcm0nLFxuXHQnc2VuaW9yJyxcblx0J3Bob3RvJyxcblx0J3JlZnVzZScsXG5cdCd0cmFuc3BvcnQnLFxuXHQnZW1lcmdlJyxcblx0J21hcCcsXG5cdCdjb25jZXB0Jyxcblx0J2lzbGFuZCcsXG5cdCdyZWZvcm0nLFxuXHQnbmVpdGhlcicsXG5cdCdmb290YmFsbCcsXG5cdCdzdXJ2aXZlJyxcblx0J2ZsaWdodCcsXG5cdCdsZWZ0Jyxcblx0J3NvbHZlJyxcblx0J25laWdoYm9yJyxcblx0J2JhY2tncm91bmQnLFxuXHQndGVjaG5pcXVlJyxcblx0J3RyYWZmaWMnLFxuXHQnaW1wcm92ZW1lbnQnLFxuXHQndG9vbCcsXG5cdCdjb25zZXF1ZW5jZScsXG5cdCdjaXJjdW1zdGFuY2UnLFxuXHQnc21va2UnLFxuXHQncmVhY3Rpb24nLFxuXHQncmFpbicsXG5cdCdidXN5Jyxcblx0J2xlc3NvbicsXG5cdCdicmFpbicsXG5cdCdtYXNzJyxcblx0J2Z1bm55Jyxcblx0J2NvbnRyaWJ1dGUnLFxuXHQnZmFpbHVyZScsXG5cdCdzY2hlZHVsZScsXG5cdCdzcGVha2VyJyxcblx0J2JvdHRvbScsXG5cdCdhZG9wdCcsXG5cdCdjb21iaW5lJyxcblx0J21vdW50YWluJyxcblx0J3dhc3RlJyxcblx0J2hpZGUnLFxuXHQnbWFycmlhZ2UnLFxuXHQndGlja2V0Jyxcblx0J21lYWwnLFxuXHQnY29sbGVhZ3VlJyxcblx0J2JhZycsXG5cdCdyZXBlYXQnLFxuXHQnZXF1YWwnLFxuXHQnZXhwcmVzc2lvbicsXG5cdCdwbHVzJyxcblx0J2V4dHJlbWVseScsXG5cdCdvd25lcicsXG5cdCdwbGFuZScsXG5cdCdjb21tZXJjaWFsJyxcblx0J2xhZHknLFxuXHQnZHV0eScsXG5cdCdzdHJlbmd0aCcsXG5cdCdjb25uZWN0Jyxcblx0J2N1bHR1cmFsJyxcblx0J2FycmFuZ2UnLFxuXHQnc2NoZW1lJyxcblx0J3BheW1lbnQnLFxuXHQndW5mb3J0dW5hdGVseScsXG5cdCdicmllZicsXG5cdCdiaXJkJyxcblx0J2RlbW9uc3RyYXRlJyxcblx0J2NvbnRyaWJ1dGlvbicsXG5cdCdhcHByZWNpYXRlJyxcblx0J2NoYXB0ZXInLFxuXHQnc2VjcmV0Jyxcblx0J2FwcGFyZW50bHknLFxuXHQnbm92ZWwnLFxuXHQndW5pb24nLFxuXHQnYnVybicsXG5cdCd0cmVuZCcsXG5cdCdpbml0aWFsJyxcblx0J3BsZWFzdXJlJyxcblx0J3N1Z2dlc3Rpb24nLFxuXHQnY3JpdGljYWwnLFxuXHQnZ2F0aGVyJyxcblx0J21vc3RseScsXG5cdCdlYXJ0aCcsXG5cdCdwb3AnLFxuXHQnZXNzZW50aWFsJyxcblx0J2Rlc2lyZScsXG5cdCdwcm9tb3RlJyxcblx0J2N1cnJlbnRseScsXG5cdCdlbXBsb3knLFxuXHQncGF0aCcsXG5cdCd0b3BpYycsXG5cdCdiZWFjaCcsXG5cdCdhdHRyYWN0Jyxcblx0J2VuZ2FnZScsXG5cdCdwb3dlcmZ1bCcsXG5cdCdmbG93ZXInLFxuXHQnY3Jpc2lzJyxcblx0J3NldHRsZScsXG5cdCdib2F0Jyxcblx0J2FpZCcsXG5cdCdmYW4nLFxuXHQna2l0Y2hlbicsXG5cdCd0d2ljZScsXG5cdCdmcmVzaCcsXG5cdCdkZWxheScsXG5cdCdzYWZldHknLFxuXHQnZW5naW5lZXInLFxuXHQncXVpZXQnLFxuXHQnaW5zdXJhbmNlJyxcblx0J251cnNlJyxcblx0J2RpdmlkZScsXG5cdCdsZW5ndGgnLFxuXHQnaW52ZXN0aWdhdGlvbicsXG5cdCdwYWNrYWdlJyxcblx0J3NvbWV3aGVyZScsXG5cdCdleHBhbmQnLFxuXHQnY29tbWl0Jyxcblx0J29idmlvdXMnLFxuXHQnanVtcCcsXG5cdCd3ZWFwb24nLFxuXHQncmVsYXRpdmVseScsXG5cdCdob3N0Jyxcblx0J3dpbnRlcicsXG5cdCdkaXN0cmljdCcsXG5cdCdicm9hZCcsXG5cdCd0aXJlJyxcblx0J3NwcmluZycsXG5cdCdzcGlyaXQnLFxuXHQnbHVuY2gnLFxuXHQnYWN0dWFsJyxcblx0J3Bvb2wnLFxuXHQnYmF0dGxlJyxcblx0J3RyYWRpdGlvbicsXG5cdCdjYXNoJyxcblx0J2hhcmRseScsXG5cdCdhd2FyZCcsXG5cdCdjb2FjaCcsXG5cdCdleHBlcmltZW50Jyxcblx0J2NvbnNpZGVyYXRpb24nLFxuXHQnc3RyYW5nZScsXG5cdCdjb2RlJyxcblx0J3Bvc3NpYmx5Jyxcblx0J3RocmVhdCcsXG5cdCdhY2NpZGVudCcsXG5cdCdpbXBvc3NpYmxlJyxcblx0J3JldmVudWUnLFxuXHQnZW5hYmxlJyxcblx0J2FmcmFpZCcsXG5cdCdhY3RpdmUnLFxuXHQnY29uY2x1ZGUnLFxuXHQncmVsaWdpb3VzJyxcblx0J2NhbmNlcicsXG5cdCdjb252aW5jZScsXG5cdCd2YXJ5Jyxcblx0J2Vudmlyb25tZW50YWwnLFxuXHQnc3VuJyxcblx0J2hlYWx0aHknLFxuXHQnYmxvdycsXG5cdCd2b2x1bWUnLFxuXHQnbG9jYXRpb24nLFxuXHQnaW52ZXN0Jyxcblx0J3Byb2NlZWQnLFxuXHQnd2FzaCcsXG5cdCdhY3RvcicsXG5cdCdnbGFkJyxcblx0J3RhcGUnLFxuXHQnd2hlcmVhcycsXG5cdCdvcHBvc2l0ZScsXG5cdCdzdG9uZScsXG5cdCdzdW0nLFxuXHQnbXVyZGVyJyxcblx0J21vbml0b3InLFxuXHQnc29sZGllcicsXG5cdCdmaW5hbmNlJyxcblx0J2hhdGUnLFxuXHQnZWdnJyxcblx0J2NvbmNlcnQnLFxuXHQnc2hvY2snLFxuXHQnY29tZm9ydGFibGUnLFxuXHQndXN1YWwnLFxuXHQnY2FyZWZ1bGx5Jyxcblx0J3BhY2snLFxuXHQncmVjYWxsJyxcblx0J3dpbmUnLFxuXHQnY2FtZXJhJyxcblx0J3N3aW0nLFxuXHQnbWFudWZhY3R1cmUnLFxuXHQndGhlYXRlcicsXG5cdCdjeWNsZScsXG5cdCdjb2ZmZWUnLFxuXHQndG90YWxseScsXG5cdCdtdXNldW0nLFxuXHQndmlzaXRvcicsXG5cdCdmcmVlZG9tJyxcblx0J2NvbnN0cnVjdGlvbicsXG5cdCdkZWFyJyxcblx0J29iamVjdGl2ZScsXG5cdCdtb3Jlb3ZlcicsXG5cdCdvbnRvJyxcblx0J2hpc3RvcmljYWwnLFxuXHQnb3Bwb3NlJyxcblx0J2JyYW5jaCcsXG5cdCd2ZWhpY2xlJyxcblx0J3NjaWVudGlzdCcsXG5cdCdyb3V0ZScsXG5cdCdiaW5kJyxcblx0J2JlbG9uZycsXG5cdCd0YXN0ZScsXG5cdCd0b25pZ2h0Jyxcblx0J2Zhc2hpb24nLFxuXHQnZGFuZ2VyJyxcblx0J2JvbWInLFxuXHQnYXJteScsXG5cdCdkYW5nZXJvdXMnLFxuXHQnZGVjcmVhc2UnLFxuXHQnaHVydCcsXG5cdCdjb3VuY2lsJyxcblx0J2VkaXRvcicsXG5cdCdub3JtYWxseScsXG5cdCdzaWdodCcsXG5cdCdnZW5lcmF0ZScsXG5cdCdnaWZ0Jyxcblx0J2RlbGl2ZXJ5Jyxcblx0J2RlbnknLFxuXHQnZ3Vlc3QnLFxuXHQnYW55Ym9keScsXG5cdCdiZWRyb29tJyxcblx0J3F1b3RlJyxcblx0J2NsaW1iJyxcblx0J2Jhc2ljYWxseScsXG5cdCd2aW9sZW5jZScsXG5cdCdtaW5pc3RlcicsXG5cdCdtYWlubHknLFxuXHQnbW91dGgnLFxuXHQnbm9pc2UnLFxuXHQnbWFubmVyJyxcblx0J2d1bicsXG5cdCdzcXVhcmUnLFxuXHQnb2NjYXNpb24nLFxuXHQnZmFtaWxpYXInLFxuXHQnaWdub3JlJyxcblx0J2Rlc3Ryb3knLFxuXHQnYWZmYWlyJyxcblx0J2NpdmlsJyxcblx0J2xvY2F0ZScsXG5cdCdjaXRpemVuJyxcblx0J3RlbXBlcmF0dXJlJyxcblx0J2dvbGQnLFxuXHQnZG9tZXN0aWMnLFxuXHQnbG9hZCcsXG5cdCdiZWxpZWYnLFxuXHQndHJvb3AnLFxuXHQndGVjaG5pY2FsJyxcblx0J3JlbWluZCcsXG5cdCdhcnJhbmdlbWVudCcsXG5cdCdza2luJyxcblx0J3ByaXNvbicsXG5cdCdzd2l0Y2gnLFxuXHQnYWNxdWlyZScsXG5cdCdjb3Jwb3JhdGUnLFxuXHQnZmFpcmx5Jyxcblx0J3dvb2QnLFxuXHQncGFydGljaXBhdGUnLFxuXHQndG91Z2gnLFxuXHQndGVhcicsXG5cdCdyZXByZXNlbnRhdGl2ZScsXG5cdCdjYXBhY2l0eScsXG5cdCdib3JkZXInLFxuXHQnc2hha2UnLFxuXHQnYXNzZXNzbWVudCcsXG5cdCdzaG9lJyxcblx0J291Z2h0Jyxcblx0J2FkJyxcblx0J2ZlZScsXG5cdCdoYWxsJyxcblx0J3JlZ3VsYXRpb24nLFxuXHQnZXNjYXBlJyxcblx0J3N0dWRpbycsXG5cdCdwcm9wZXInLFxuXHQncmVsYXgnLFxuXHQndG91cmlzdCcsXG5cdCdjb21wb25lbnQnLFxuXHQnYWZmb3JkJyxcblx0J2xhd3llcicsXG5cdCdzdXNwZWN0Jyxcblx0J2N1cCcsXG5cdCdkZXNjcmlwdGlvbicsXG5cdCdjb25maWRlbmNlJyxcblx0J2luZHVzdHJpYWwnLFxuXHQnY29tcGxhaW4nLFxuXHQncGVyc3BlY3RpdmUnLFxuXHQnZXJyb3InLFxuXHQnYXJyZXN0Jyxcblx0J2Fzc2VzcycsXG5cdCdyZWdpc3RlcicsXG5cdCdhc3NldCcsXG5cdCdzaWduYWwnLFxuXHQnZmluZ2VyJyxcblx0J3JlbGV2YW50Jyxcblx0J2V4cGxvcmUnLFxuXHQnbGVhZGVyc2hpcCcsXG5cdCdjb21taXRtZW50Jyxcblx0J3dha2UnLFxuXHQnbmVjZXNzYXJpbHknLFxuXHQnYnJpZ2h0Jyxcblx0J2ZyYW1lJyxcblx0J3Nsb3dseScsXG5cdCdib25kJyxcblx0J2hpcmUnLFxuXHQnaG9sZScsXG5cdCd0aWUnLFxuXHQnaW50ZXJuYWwnLFxuXHQnY2hhaW4nLFxuXHQnbGl0ZXJhdHVyZScsXG5cdCd2aWN0aW0nLFxuXHQndGhyZWF0ZW4nLFxuXHQnZGl2aXNpb24nLFxuXHQnc2VjdXJlJyxcblx0J2FtYXplJyxcblx0J2RldmljZScsXG5cdCdiaXJ0aCcsXG5cdCdmb3Jlc3QnLFxuXHQnbGFiZWwnLFxuXHQncm9vdCcsXG5cdCdmYWN0b3J5Jyxcblx0J2V4cGVuc2UnLFxuXHQnY2hhbm5lbCcsXG5cdCdpbnZlc3RpZ2F0ZScsXG5cdCdyZWNvbW1lbmRhdGlvbicsXG5cdCdyYW5rJyxcblx0J3R5cGljYWwnLFxuXHQnd2VzdCcsXG5cdCdmcmllbmRseScsXG5cdCdyZXNpZGVudCcsXG5cdCdwcm92aXNpb24nLFxuXHQnY29uY2VudHJhdGUnLFxuXHQncGxlbnR5Jyxcblx0J2V4cG9ydCcsXG5cdCdlbnRpcmVseScsXG5cdCdzdHJvbmdseScsXG5cdCdicmlkZ2UnLFxuXHQnY29uc2lzdCcsXG5cdCdncmFkdWF0ZScsXG5cdCdicmFuZCcsXG5cdCdtb3JhbCcsXG5cdCdpbnNpc3QnLFxuXHQnY29tYmluYXRpb24nLFxuXHQnYWJ1c2UnLFxuXHQnaWNlJyxcblx0J3ByaW5jaXBhbCcsXG5cdCdtYXN0ZXInLFxuXHQnZGVmaW5pdGVseScsXG5cdCdzZXNzaW9uJyxcblx0J2dyYWRlJyxcblx0J25ldmVydGhlbGVzcycsXG5cdCdwcmVkaWN0Jyxcblx0J3ByZXZpb3VzbHknLFxuXHQncHJvdGVjdGlvbicsXG5cdCdsYXJnZWx5Jyxcblx0J3dlZCcsXG5cdCdyZW50Jyxcblx0J3Nob3QnLFxuXHQnYXBwZWFyYW5jZScsXG5cdCdyZWFzb25hYmxlJyxcblx0J2d1YXJhbnRlZScsXG5cdCd0aWxsJyxcblx0J3RoZW1lJyxcblx0J2p1ZGdtZW50Jyxcblx0J29kZCcsXG5cdCdhcHByb3ZlJyxcblx0J2xvYW4nLFxuXHQnZGVmaW5pdGlvbicsXG5cdCdlbGVjdCcsXG5cdCdhdG1vc3BoZXJlJyxcblx0J2Zhcm1lcicsXG5cdCdjb21wYXJpc29uJyxcblx0J2NoYXJhY3RlcmlzdGljJyxcblx0J2xpY2Vuc2UnLFxuXHQncmVseScsXG5cdCduYXJyb3cnLFxuXHQnc3VjY2VlZCcsXG5cdCdpZGVudGl0eScsXG5cdCdkZXNrJyxcblx0J3Blcm1pdCcsXG5cdCdzZXJpb3VzbHknLFxuXHQnd2lsZCcsXG5cdCdlbXB0eScsXG5cdCdjb21taXNzaW9uJyxcblx0J3VuaXF1ZScsXG5cdCdhc3NvY2lhdGlvbicsXG5cdCdpbnN0cnVtZW50Jyxcblx0J2ludmVzdG9yJyxcblx0J3ByYWN0aWNhbCcsXG5cdCd0ZWEnLFxuXHQnbG92ZWx5Jyxcblx0J3NvZnQnLFxuXHQncm93Jyxcblx0J3lvdXRoJyxcblx0J2xvY2snLFxuXHQnZnVlbCcsXG5cdCdleHBlY3RhdGlvbicsXG5cdCdlbXBsb3ltZW50Jyxcblx0J2NlbGVicmF0ZScsXG5cdCdzZXh1YWwnLFxuXHQnc2hvdWxkZXInLFxuXHQnYnJlYXRoJyxcblx0J2luY3JlYXNpbmdseScsXG5cdCdpbXBvcnQnLFxuXHQnYm90dGxlJyxcblx0J291cnNlbHZlcycsXG5cdCdzaGVldCcsXG5cdCdlbmdpbmUnLFxuXHQnY2FzdCcsXG5cdCdub3Rpb24nLFxuXHQnY29uc2VydmF0aXZlJyxcblx0J2pvdXJuZXknLFxuXHQnb3Bwb3NpdGlvbicsXG5cdCdyZWxpZWYnLFxuXHQnZGVidCcsXG5cdCdob25vcicsXG5cdCdvdXRjb21lJyxcblx0J2JsYW1lJyxcblx0J2V4cGxhbmF0aW9uJyxcblx0J2FyaXNlJyxcblx0J211c2ljYWwnLFxuXHQncmVjb3ZlcicsXG5cdCdkYWQnLFxuXHQnc3RyZXRjaCcsXG5cdCdkZWNsYXJlJyxcblx0J3JldGlyZScsXG5cdCd0aW55Jyxcblx0J2NhcmVmdWwnLFxuXHQnc3VpdGFibGUnLFxuXHQnbmF0aXZlJyxcblx0J2ZydWl0Jyxcblx0J2FuYWx5emUnLFxuXHQnd2l0bmVzcycsXG5cdCdtYWlsJyxcblx0J3RlcnJpYmxlJyxcblx0J3Jlc2VhcmNoZXInLFxuXHQnb3JkaW5hcnknLFxuXHQnc2VsZWN0aW9uJyxcblx0J2FueXdoZXJlJyxcblx0J21lbnRhbCcsXG5cdCdwYXJ0aWNpcGFudCcsXG5cdCd2aXNpb24nLFxuXHQncGVyc29uYWxpdHknLFxuXHQnc3BlY2lmaWNhbGx5Jyxcblx0J2ZhdCcsXG5cdCdlbnRyeScsXG5cdCdmZWxsb3cnLFxuXHQnY2hlbWljYWwnLFxuXHQnY2FwdHVyZScsXG5cdCd0aXAnLFxuXHQnZGlzY291bnQnLFxuXHQncGVhaycsXG5cdCdjaGFpcm1hbicsXG5cdCdwcm9wb3J0aW9uJyxcblx0J2VhcicsXG5cdCdkaXNhcHBlYXInLFxuXHQnc2hvdXQnLFxuXHQneWFyZCcsXG5cdCdjb25zdGFudCcsXG5cdCdzaWduaWZpY2FudGx5Jyxcblx0J2hpbGwnLFxuXHQnY29uc2lkZXJhYmxlJyxcblx0J2luc3RydWN0aW9uJyxcblx0J2ludGVsbGlnZW5jZScsXG5cdCdpZGVhbCcsXG5cdCdmb2xrJyxcblx0J3N1cmVseScsXG5cdCdndWFyZCcsXG5cdCdjYXQnLFxuXHQnc29tZXdoYXQnLFxuXHQna2lzcycsXG5cdCdwcmVzZW50YXRpb24nLFxuXHQnam9pbnQnLFxuXHQnY29tcGV0ZScsXG5cdCdwb2xsJyxcblx0J3dlYWsnLFxuXHQnZmFpdGgnLFxuXHQncmVkdWN0aW9uJyxcblx0J3Jlc2VydmUnLFxuXHQnY29tcGxhaW50Jyxcblx0J2JvcmUnLFxuXHQnbWlzc2lvbicsXG5cdCdzb21laG93Jyxcblx0J3RvbmUnLFxuXHQnbmVpZ2hib3Job29kJyxcblx0J3Bhc3NlbmdlcicsXG5cdCdqdXN0aWNlJyxcblx0J3BoYXNlJyxcblx0J3RoaW4nLFxuXHQncnVzaCcsXG5cdCdmb3JtYWwnLFxuXHQncmVsaWdpb24nLFxuXHQnZW1wbG95ZXInLFxuXHQncmVqZWN0Jyxcblx0J2xhdHRlcicsXG5cdCdwbGF0ZScsXG5cdCdiYW4nLFxuXHQnc3RlYWwnLFxuXHQncHJvdGVzdCcsXG5cdCdpbmRleCcsXG5cdCdzYWQnLFxuXHQnZnJlcXVlbnRseScsXG5cdCdjaXJjbGUnLFxuXHQnaGVscGZ1bCcsXG5cdCdjb21tYW5kJyxcblx0J2F0dHJhY3RpdmUnLFxuXHQnc2ljaycsXG5cdCdpbXByZXNzaW9uJyxcblx0J3VuYWJsZScsXG5cdCdqb2tlJyxcblx0J3NreScsXG5cdCdjb2x1bW4nLFxuXHQnZWxlY3Ryb25pYycsXG5cdCdpbXBvc2UnLFxuXHQnY3JpbWluYWwnLFxuXHQnYmVzaWRlcycsXG5cdCdwcm9wZXJseScsXG5cdCdhbmNpZW50Jyxcblx0J2NvYXN0Jyxcblx0J2lsbCcsXG5cdCdraWNrJyxcblx0J2Nsb3NlbHknLFxuXHQnbXVsdGlwbGUnLFxuXHQneWllbGQnLFxuXHQndmlhJyxcblx0J2xlZ2lzbGF0aW9uJyxcblx0J2NvdW50eScsXG5cdCd1bmxpa2UnLFxuXHQnbW9iaWxlJyxcblx0J2Fzc2lzdGFudCcsXG5cdCdpbXBsZW1lbnQnLFxuXHQnY2hhcnQnLFxuXHQnYXR0YWNoJyxcblx0J2hlbGwnLFxuXHQnZXZlcnl3aGVyZScsXG5cdCdhZHZpc2UnLFxuXHQnaG91c2Vob2xkJyxcblx0J2Fja25vd2xlZGdlJyxcblx0J3Jld2FyZCcsXG5cdCdlYXN0Jyxcblx0J2hhdCcsXG5cdCdhY2FkZW1pYycsXG5cdCd2b3RlcicsXG5cdCdtZWFud2hpbGUnLFxuXHQnZnVydGhlcm1vcmUnLFxuXHQnYWNjdXNlJyxcblx0J3NjaWVudGlmaWMnLFxuXHQnd2FnZScsXG5cdCdhYnNlbmNlJyxcblx0J2NvbnN0cnVjdCcsXG5cdCdyZW1hcmsnLFxuXHQnbWVkaWNpbmUnLFxuXHQncHJvZmVzc29yJyxcblx0J3JhcmUnLFxuXHQnaW50ZW50aW9uJyxcblx0J2RvemVuJyxcblx0J3NldHRsZW1lbnQnLFxuXHQnZ2FwJyxcblx0J3dpZGVseScsXG5cdCdtaW5pbXVtJyxcblx0J25vcnRoZXJuJyxcblx0J2VzdGF0ZScsXG5cdCdlcXVhbGx5Jyxcblx0J2V4cG9zZScsXG5cdCdhbGl2ZScsXG5cdCdzaHV0Jyxcblx0J3ZpY3RvcnknLFxuXHQncmVzb2x2ZScsXG5cdCdjcml0aWMnLFxuXHQndmFyaWFibGUnLFxuXHQnZW5vcm1vdXMnLFxuXHQnc3dlZXQnLFxuXHQncGVybWFuZW50Jyxcblx0J2Vtb3Rpb24nLFxuXHQncHVyc3VlJyxcblx0J3RhbGwnLFxuXHQndXJnZScsXG5cdCdlbmVteScsXG5cdCdhcHBvaW50Jyxcblx0J21pbGsnLFxuXHQndGFsZW50Jyxcblx0J3NtZWxsJyxcblx0J3ByaW9yJyxcblx0J3ByaW9yaXR5Jyxcblx0J29ubGluZScsXG5cdCdwaHJhc2UnLFxuXHQncGlsb3QnLFxuXHQnc3RhYmxlJyxcblx0J21lcmVseScsXG5cdCdyZXNvbHV0aW9uJyxcblx0J2NvbW11bmljYXRlJyxcblx0J2luanVyeScsXG5cdCd2YXN0Jyxcblx0J2V4aGliaXRpb24nLFxuXHQncHJvZHVjZXInLFxuXHQncmVnaW9uYWwnLFxuXHQnaW1tZWRpYXRlJyxcblx0J2luY2lkZW50Jyxcblx0J2NoaWxkaG9vZCcsXG5cdCdkcmFmdCcsXG5cdCdzbGlwJyxcblx0J2FjY29tcGFueScsXG5cdCdwb2xpdGljaWFuJyxcblx0J2FuZ3J5Jyxcblx0J2tub2NrJyxcblx0J3NlZWQnLFxuXHQnc2FsYXJ5Jyxcblx0J2lsbHVzdHJhdGUnLFxuXHQnaW1wbHknLFxuXHQnYnJlYWtmYXN0Jyxcblx0J3RlbXBvcmFyeScsXG5cdCdsaWJlcmFsJyxcblx0J2xha2UnLFxuXHQncXVhbGlmeScsXG5cdCdjb21wZXRpdGl2ZScsXG5cdCd0cnVseScsXG5cdCdoaScsXG5cdCd5ZWxsb3cnLFxuXHQnaGFiaXQnLFxuXHQnZGlzaycsXG5cdCdjb3JlJyxcblx0J2Vtb3Rpb25hbCcsXG5cdCdhaXJjcmFmdCcsXG5cdCdzZWxmJyxcblx0J21ldGFsJyxcblx0J2V4aXN0ZW5jZScsXG5cdCdib25lJyxcblx0J3BhbmVsJyxcblx0J3ByaW1lJyxcblx0J2FwcG9pbnRtZW50Jyxcblx0J2VtcGhhc2l6ZScsXG5cdCdtYXhpbXVtJyxcblx0J2VmZmVjdGl2ZWx5Jyxcblx0J2Vsc2V3aGVyZScsXG5cdCdib3RoZXInLFxuXHQnaW5pdGlhdGl2ZScsXG5cdCdzaGFycCcsXG5cdCdkaWV0Jyxcblx0J21vdGlvbicsXG5cdCdncmF5Jyxcblx0J3BsYXN0aWMnLFxuXHQnY29tcGxpY2F0ZScsXG5cdCdkaXNjaXBsaW5lJyxcblx0J2Rpc2FwcG9pbnQnLFxuXHQnYm9zcycsXG5cdCdhc3N1bXB0aW9uJyxcblx0J2ZyZWV6ZScsXG5cdCdleHRyZW1lJyxcblx0J3Bhc3NhZ2UnLFxuXHQncmVwdXRhdGlvbicsXG5cdCdmb3J0aCcsXG5cdCduZWdvdGlhdGlvbicsXG5cdCdtZWNoYW5pc20nLFxuXHQnY29hdCcsXG5cdCdkZW1vY3JhY3knLFxuXHQncG9ja2V0Jyxcblx0J2x1Y2t5Jyxcblx0J2NyYXNoJyxcblx0J29ic2VydmF0aW9uJyxcblx0J21lYXQnLFxuXHQnY29uY2VudHJhdGlvbicsXG5cdCdpbXBsaWNhdGlvbicsXG5cdCdkZXNlcnZlJyxcblx0J3VudXN1YWwnLFxuXHQnZGVmZW5kJyxcblx0J2NsYXNzaWMnLFxuXHQna2luZycsXG5cdCdpbnRlcmFjdGlvbicsXG5cdCdyZXBhaXInLFxuXHQnY29sbGFwc2UnLFxuXHQnYm9ycm93Jyxcblx0J2Z1bmRhbWVudGFsJyxcblx0J2Rpc2gnLFxuXHQnYWJyb2FkJyxcblx0J3NvdWwnLFxuXHQnY2FwYWJsZScsXG5cdCdkZWZlYXQnLFxuXHQncHJlc2lkZW50aWFsJyxcblx0J3BlcmZlY3RseScsXG5cdCdlbmhhbmNlJyxcblx0J3Byb3VkJyxcblx0J2VtZXJnZW5jeScsXG5cdCdlZHVjYXRpb25hbCcsXG5cdCdkaXN0aW5ndWlzaCcsXG5cdCdzdWJzdGFudGlhbCcsXG5cdCduZWFyYnknLFxuXHQnbWFudWZhY3R1cmVyJyxcblx0J3NsaWRlJyxcblx0J3ZhbHVhYmxlJyxcblx0J3BlcnNvbmFsbHknLFxuXHQnYnJlYXN0Jyxcblx0J2NvcGUnLFxuXHQnYXBwcm94aW1hdGVseScsXG5cdCdhY2NvbW1vZGF0aW9uJyxcblx0J2hpZ2hsaWdodCcsXG5cdCdyZXBvcnRlcicsXG5cdCdjbGltYXRlJyxcblx0J3NoaXJ0Jyxcblx0J2V4Y2VwdGlvbicsXG5cdCdjb3Jwb3JhdGlvbicsXG5cdCdjaGlwJyxcblx0J3dpbm5lcicsXG5cdCdlbmNvdW50ZXInLFxuXHQnYnJvd24nLFxuXHQnYnJlYXRoZScsXG5cdCdleGN1c2UnLFxuXHQncGFydGx5Jyxcblx0J3Rlbm5pcycsXG5cdCd1cmJhbicsXG5cdCdjb25mdXNlJyxcblx0J3NvdXRoZXJuJyxcblx0J291dHB1dCcsXG5cdCdiZWF1dHknLFxuXHQnbWFzc2l2ZScsXG5cdCdpbnN0YWxsJyxcblx0J2NhbGN1bGF0ZScsXG5cdCdtb3VzZScsXG5cdCdtYXRoZW1hdGljcycsXG5cdCd1cHBlcicsXG5cdCdjcmVhdGlvbicsXG5cdCdvY2N1cHknLFxuXHQnb3V0bGluZScsXG5cdCdzdWZmaWNpZW50Jyxcblx0J3VwZGF0ZScsXG5cdCdsdWNrJyxcblx0J3ByZXNlcnZlJyxcblx0J3NwbGl0Jyxcblx0J3N3aW5nJyxcblx0J2lsbG5lc3MnLFxuXHQnam91cm5hbGlzdCcsXG5cdCdzdWRkZW4nLFxuXHQnYWR2ZXJ0aXNlbWVudCcsXG5cdCdjb25zaXN0ZW50Jyxcblx0J29yaWdpbmFsbHknLFxuXHQnYXNpZGUnLFxuXHQnY29tZm9ydCcsXG5cdCdzZWNvbmRseScsXG5cdCdzZXZlcmUnLFxuXHQnZ2VuZScsXG5cdCdwcm9zcGVjdCcsXG5cdCdzbm93Jyxcblx0J3Bsb3QnLFxuXHQnbmVjaycsXG5cdCdjcml0ZXJpb24nLFxuXHQncHJpbWFyaWx5Jyxcblx0J2ludGVncmF0ZScsXG5cdCdjcml0aWNpc20nLFxuXHQnY29udmVudGlvbicsXG5cdCdiZXQnLFxuXHQncmV0YWluJyxcblx0J3NlcXVlbmNlJyxcblx0J3BsYWluJyxcblx0J3ZvbHVudGVlcicsXG5cdCdydXJhbCcsXG5cdCdjYWxtJyxcblx0J2FiYW5kb24nLFxuXHQnZXhhbWluYXRpb24nLFxuXHQnc2lsZW5jZScsXG5cdCdyYXBpZGx5Jyxcblx0J2VmZmljaWVudCcsXG5cdCdyZXZvbHV0aW9uJyxcblx0J2RlbGlnaHQnLFxuXHQnc3BlbGwnLFxuXHQncHJlbWlzZScsXG5cdCdsZWFuJyxcblx0J2RyYW1hdGljJyxcblx0J2RpZmZlcicsXG5cdCdncmF0ZWZ1bCcsXG5cdCdwcm90ZWluJyxcblx0J2Jpa2UnLFxuXHQnZGlzdHJpYnV0ZScsXG5cdCdpbnRlbGxlY3R1YWwnLFxuXHQnZGVyaXZlJyxcblx0J2NydWNpYWwnLFxuXHQndW5lbXBsb3ltZW50Jyxcblx0J3doZWVsJyxcblx0J2Nyb3AnLFxuXHQnbWlub3JpdHknLFxuXHQnb3JpZ2luJyxcblx0J2ludGVycHJldGF0aW9uJyxcblx0J2dlbnRsZW1hbicsXG5cdCdkcmFtYScsXG5cdCdsYW5kc2NhcGUnLFxuXHQnZWR1Y2F0ZScsXG5cdCd0b3knLFxuXHQnZmF1bHQnLFxuXHQnZXhoaWJpdCcsXG5cdCdtaW5vcicsXG5cdCdodW50Jyxcblx0J3N0b3JtJyxcblx0J3RoaWNrJyxcblx0J2FjaGlldmVtZW50Jyxcblx0J25lZ290aWF0ZScsXG5cdCdkb21pbmF0ZScsXG5cdCdzdXBwbGllcicsXG5cdCdwcml6ZScsXG5cdCd0eXBpY2FsbHknLFxuXHQncGVlcicsXG5cdCdwZW5zaW9uJyxcblx0J3dpbmcnLFxuXHQnYWNxdWlzaXRpb24nLFxuXHQnbGF1Z2h0ZXInLFxuXHQnZGVlcGx5Jyxcblx0J3JlY29nbml0aW9uJyxcblx0J2VsZWN0cmljaXR5Jyxcblx0J2Fzc2lzdGFuY2UnLFxuXHQncm9vZicsXG5cdCdyZXRpcmVtZW50Jyxcblx0J3Jlc3BlY3RpdmVseScsXG5cdCd2YXJpYXRpb24nLFxuXHQndWx0aW1hdGVseScsXG5cdCdwcm9vZicsXG5cdCdzb2lsJyxcblx0J3NtYXJ0Jyxcblx0J2xheWVyJyxcblx0J3Vwc2V0Jyxcblx0J3Rvb3RoJyxcblx0J3JlcHJlc2VudGF0aW9uJyxcblx0J3ByZXBhcmF0aW9uJyxcblx0J2Rpc3B1dGUnLFxuXHQnYWdlbmRhJyxcblx0J2VtcGhhc2lzJyxcblx0J2VkaXRpb24nLFxuXHQnc2lsdmVyJyxcblx0J2VudGVydGFpbm1lbnQnLFxuXHQnaG9uZXN0Jyxcblx0J3VuZGVydGFrZScsXG5cdCdyZXRhaWwnLFxuXHQnd2lyZScsXG5cdCd1bmxpa2VseScsXG5cdCdnYXknLFxuXHQncHVibGljYXRpb24nLFxuXHQnc2xpZ2h0Jyxcblx0J3Vua25vd24nLFxuXHQnZnJhbWV3b3JrJyxcblx0J3pvbmUnLFxuXHQncmVzdHJpY3QnLFxuXHQndHJhY2UnLFxuXHQnaW5jaCcsXG5cdCdlcXVpdmFsZW50Jyxcblx0J3NvbGlkJyxcblx0J2VudGVycHJpc2UnLFxuXHQnZWxkZXJseScsXG5cdCdvd2UnLFxuXHQnZ292ZXJub3InLFxuXHQndW5pZm9ybScsXG5cdCdwb3J0Jyxcblx0J3BpdGNoJyxcblx0J2Fycml2YWwnLFxuXHQnY29udGVtcG9yYXJ5Jyxcblx0J2dhdGUnLFxuXHQnZWFzZScsXG5cdCdiZWVyJyxcblx0J3NwZWNpYWxpc3QnLFxuXHQnYXNzdXJlJyxcblx0J3Byb2ZpbGUnLFxuXHQnbW9vZCcsXG5cdCdlcGlzb2RlJyxcblx0J2NyYWNrJyxcblx0J251bWVyb3VzJyxcblx0J3N1Ym1pdCcsXG5cdCdzeW1wdG9tJyxcblx0J3ZpcnR1YWxseScsXG5cdCdlcmEnLFxuXHQnY292ZXJhZ2UnLFxuXHQndGVuc2lvbicsXG5cdCdjYWJsZScsXG5cdCdzZW5zaXRpdmUnLFxuXHQnbmVydm91cycsXG5cdCdpbnB1dCcsXG5cdCdpc29sYXRlJyxcblx0J3ByaXNvbmVyJyxcblx0J2VsaW1pbmF0ZScsXG5cdCd0aWdodCcsXG5cdCd3ZXQnLFxuXHQnc2Vjb25kYXJ5Jyxcblx0J3dlbGZhcmUnLFxuXHQncmVjcnVpdCcsXG5cdCdleGNsdWRlJyxcblx0J3N0cmluZycsXG5cdCdjbG91ZCcsXG5cdCdwZXJzdWFkZScsXG5cdCdpbnNwaXJlJyxcblx0J2dyYW5kJyxcblx0J2hlbmNlJyxcblx0J2NyZXcnLFxuXHQncGhlbm9tZW5vbicsXG5cdCdwdXBpbCcsXG5cdCdmYWxzZScsXG5cdCdhc3Npc3QnLFxuXHQncmVzdG9yZScsXG5cdCdmb3JtdWxhJyxcblx0J2FsdGVyJyxcblx0J3BlcmNlaXZlJyxcblx0J3JvdXRpbmUnLFxuXHQnc2luaycsXG5cdCdzdGFyZScsXG5cdCdhbnltb3JlJyxcblx0J2hlcm8nLFxuXHQnc3VwcG9ydGVyJyxcblx0J2NvbnZlcnQnLFxuXHQnc3RlYWR5Jyxcblx0J21ldGVyJyxcblx0J3RydWNrJyxcblx0J25vc2UnLFxuXHQnYmVzaWRlJyxcblx0J3NhaWwnLFxuXHQnZGlzYXN0ZXInLFxuXHQncGFjZScsXG5cdCdoZWF2aWx5Jyxcblx0J2Rldm90ZScsXG5cdCd0ZXJyb3Jpc3QnLFxuXHQnanVzdGlmeScsXG5cdCd2aXRhbCcsXG5cdCdmYXNjaW5hdGUnLFxuXHQnZXh0ZXJuYWwnLFxuXHQnc3BhcmUnLFxuXHQnd2hlbmV2ZXInLFxuXHQnZGVwcmVzc2lvbicsXG5cdCdndWlsdHknLFxuXHQndW5kZXJsaWUnLFxuXHQnbW9tJyxcblx0J2Rpc3RpbmN0aW9uJyxcblx0J3NhdGlzZmFjdGlvbicsXG5cdCdpbmNvcnBvcmF0ZScsXG5cdCdwb3VyJyxcblx0J3N3ZWVwJyxcblx0J29ibGlnYXRpb24nLFxuXHQnc2lyJyxcblx0J2V2YWx1YXRlJyxcblx0J2FuZ2VyJyxcblx0J3B1YicsXG5cdCdwZXJjZXB0aW9uJyxcblx0J25hdHVyYWxseScsXG5cdCdjdXJyZW5jeScsXG5cdCdkYXRhYmFzZScsXG5cdCdpbml0aWFsbHknLFxuXHQndGVycml0b3J5Jyxcblx0J3N0cmVhbScsXG5cdCdyYXJlbHknLFxuXHQnaGVpZ2h0Jyxcblx0J2FwcGFyZW50Jyxcblx0J3dlc3Rlcm4nLFxuXHQnZXhwYW5zaW9uJyxcblx0J2NvbnN0YW50bHknLFxuXHQnbXVzY2xlJyxcblx0J3NjYXJlJyxcblx0J2JhZGx5Jyxcblx0J2V2ZXJ5ZGF5Jyxcblx0J2JvdW5kYXJ5Jyxcblx0J3JhdGlvJyxcblx0J2Vzc2F5Jyxcblx0J3NjcmVhbScsXG5cdCd3aXRoZHJhdycsXG5cdCdwb2xsdXRpb24nLFxuXHQnZGlzb3JkZXInLFxuXHQnZnVybml0dXJlJyxcblx0J3N5bWJvbCcsXG5cdCdhcGFydG1lbnQnLFxuXHQnZGVtb25zdHJhdGlvbicsXG5cdCdhbmFseXN0Jyxcblx0J3BsYXRmb3JtJyxcblx0J3N0ZWVsJyxcblx0J2Nha2UnLFxuXHQndHJhbnNmb3JtJyxcblx0J3dvdW5kJyxcblx0J3Jlc3RyaWN0aW9uJyxcblx0J2ZvdW5kYXRpb24nLFxuXHQnZGVzaWduZXInLFxuXHQnc3RyYWluJyxcblx0J2lubm92YXRpb24nLFxuXHQnYWxidW0nLFxuXHQnc2luZ2VyJyxcblx0J3RyYWlsJyxcblx0J3RyYXAnLFxuXHQnbG9vc2UnLFxuXHQnZXh0ZW5zaW9uJyxcblx0J3dlYWx0aCcsXG5cdCdncmFkdWFsbHknLFxuXHQndGFuaycsXG5cdCdldmlsJyxcblx0J3JlbWFya2FibGUnLFxuXHQndHVuZScsXG5cdCdncmFzcycsXG5cdCdpbnZpdGF0aW9uJyxcblx0J3RyYW5zaXRpb24nLFxuXHQnZnJpZ2h0ZW4nLFxuXHQnYmlkJyxcblx0J2JyZWVkJyxcblx0J2V4dHJhb3JkaW5hcnknLFxuXHQnYnJpbGxpYW50Jyxcblx0J2FkdmlzZXInLFxuXHQnc3RlbScsXG5cdCdyZXZlcnNlJyxcblx0J21vZGUnLFxuXHQnbWlycm9yJyxcblx0J2F3ZnVsJyxcblx0J3Bvc2UnLFxuXHQnYWRqdXN0Jyxcblx0J2NyZWF0aXZlJyxcblx0J25vd2FkYXlzJyxcblx0J3BvZW0nLFxuXHQnYWdyaWN1bHR1cmFsJyxcblx0J2NvbXBldGl0b3InLFxuXHQnYWxjb2hvbCcsXG5cdCdmZXN0aXZhbCcsXG5cdCd2ZWdldGFibGUnLFxuXHQndmFuJyxcblx0J2NvbmZpZGVudCcsXG5cdCdwbGFuZXQnLFxuXHQnY3VydmUnLFxuXHQna25lZScsXG5cdCdvdmVyY29tZScsXG5cdCd3ZWInLFxuXHQnZGVwdGgnLFxuXHQnZW50cmFuY2UnLFxuXHQnbG9nJyxcblx0J2dpYW50Jyxcblx0J2dvZCcsXG5cdCdwb3J0aW9uJyxcblx0J3N1YnN0YW5jZScsXG5cdCdleHRlbnNpdmUnLFxuXHQnaW50ZXJwcmV0Jyxcblx0J2luZGVwZW5kZW5jZScsXG5cdCdzdWdhcicsXG5cdCdpbm5lcicsXG5cdCdoYXJtJyxcblx0J2NvbnN1bHQnLFxuXHQncGluaycsXG5cdCdzaGFkb3cnLFxuXHQnc3RyaXAnLFxuXHQnc21vb3RoJyxcblx0J2ludGVydmVudGlvbicsXG5cdCdpbXByZXNzJyxcblx0J2V4YW0nLFxuXHQndmljZScsXG5cdCdyYWRpY2FsJyxcblx0J3NpbWlsYXJseScsXG5cdCdiZWhhdmUnLFxuXHQnbG91ZCcsXG5cdCdkaW1lbnNpb24nLFxuXHQnc3Vic2VxdWVudCcsXG5cdCdpbmZlY3Rpb24nLFxuXHQnamFja2V0Jyxcblx0J2VmZmljaWVuY3knLFxuXHQnZGlydHknLFxuXHQnc3RhdGlzdGljJyxcblx0J3JlZ3VsYXJseScsXG5cdCdyZXNvcnQnLFxuXHQnaXJvbicsXG5cdCdicm9hZGNhc3QnLFxuXHQnbWVtYmVyc2hpcCcsXG5cdCdicmVhZCcsXG5cdCdibGluZCcsXG5cdCdwdXJlJyxcblx0J2Jsb29keScsXG5cdCdhbGx5Jyxcblx0J3F1YW50aXR5Jyxcblx0J2JlbmQnLFxuXHQnbWF0dXJlJyxcblx0J2JyaWVmbHknLFxuXHQnYWxhcm0nLFxuXHQnZGlzdHVyYicsXG5cdCdzdXN0YWluJyxcblx0J2Zsb29kJyxcblx0J3BvdmVydHknLFxuXHQnY3JhenknLFxuXHQnY2l0ZScsXG5cdCduZXdseScsXG5cdCdwYXJhbGxlbCcsXG5cdCdnZW5kZXInLFxuXHQnc3BvbnNvcicsXG5cdCdib290Jyxcblx0J2FjY3VyYXRlJyxcblx0J2RlYWxlcicsXG5cdCdidXR0b24nLFxuXHQnYnVyZGVuJyxcblx0J2Rlc2VydCcsXG5cdCdtYXRlJyxcblx0J29jY2FzaW9uYWxseScsXG5cdCdzaGFyZWhvbGRlcicsXG5cdCdib3dsJyxcblx0J2Rpc2NvdmVyeScsXG5cdCdyZXNpc3RhbmNlJyxcblx0J2JhdGgnLFxuXHQnZnJlcXVlbmN5Jyxcblx0J2NyaXRpY2l6ZScsXG5cdCd0YXAnLFxuXHQncGhpbG9zb3BoeScsXG5cdCdsaXAnLFxuXHQnYXR0cmlidXRlJyxcblx0J2Fwb2xvZ2l6ZScsXG5cdCdhcHByb3ZhbCcsXG5cdCdncmFiJyxcblx0J2VudGl0bGUnLFxuXHQnbGVuZCcsXG5cdCdpbnZvbHZlbWVudCcsXG5cdCdleHBvc3VyZScsXG5cdCdjb252ZW50aW9uYWwnLFxuXHQnZGlnaXRhbCcsXG5cdCd0cmFuc2xhdGUnLFxuXHQnZWRpdCcsXG5cdCdmb3JtYXRpb24nLFxuXHQnZGVwb3NpdCcsXG5cdCdwbGVhc2FudCcsXG5cdCdvdmVyc2VhcycsXG5cdCdhZHZvY2F0ZScsXG5cdCdlc3RhYmxpc2htZW50Jyxcblx0J3N1bW1hcnknLFxuXHQncm91Z2gnLFxuXHQncGVuJyxcblx0J3JlY292ZXJ5Jyxcblx0J3NlYWwnLFxuXHQndHViZScsXG5cdCd0b3dlcicsXG5cdCdjaGFyYWN0ZXJpemUnLFxuXHQnc3BlY2lmeScsXG5cdCdleGFjdCcsXG5cdCdzcGluJyxcblx0J29wZXJhdG9yJyxcblx0J2luZmFudCcsXG5cdCdkaWcnLFxuXHQnZHJhZycsXG5cdCdtb3VudCcsXG5cdCd3cmFwJyxcblx0J2FudGljaXBhdGUnLFxuXHQnZGVwZW5kZW50Jyxcblx0J3NwZWNpYWxpemUnLFxuXHQnYW5nbGUnLFxuXHQnY2hpY2tlbicsXG5cdCdhbnhpZXR5Jyxcblx0J3ZpcnVzJyxcblx0J3ByZWNpc2VseScsXG5cdCdyaXZhbCcsXG5cdCdvZmZlbnNlJyxcblx0J2RldGVjdCcsXG5cdCd0ZWVuYWdlcicsXG5cdCdhZG1pcmUnLFxuXHQnbW9kZXJhdGUnLFxuXHQnc3VyZ2VyeScsXG5cdCdtdXNpY2lhbicsXG5cdCdzaWduaWZpY2FuY2UnLFxuXHQnc2hvd2VyJyxcblx0J2lsbGVnYWwnLFxuXHQnY2hhcml0eScsXG5cdCd1bml2ZXJzYWwnLFxuXHQnY2lnYXJldHRlJyxcblx0J2NvbnN0aXR1dGUnLFxuXHQnYWRlcXVhdGUnLFxuXHQnY29uc3VsdGFudCcsXG5cdCdoaXN0b3JpYW4nLFxuXHQnY291c2luJyxcblx0J3Zpc3VhbCcsXG5cdCdzdHVwaWQnLFxuXHQna2VlbicsXG5cdCdldGhuaWMnLFxuXHQndHdpbicsXG5cdCdjbGluaWNhbCcsXG5cdCdlYXN0ZXJuJyxcblx0J2ZvcmVjYXN0Jyxcblx0J3NlZ21lbnQnLFxuXHQnY3VzdG9tJyxcblx0J2FkYXB0Jyxcblx0J3NhbmQnLFxuXHQnY2FwJyxcblx0J3Byb21wdCcsXG5cdCdjaGFybScsXG5cdCdyZWFjdCcsXG5cdCdsZWN0dXJlJyxcblx0J3ZlbnR1cmUnLFxuXHQnY29tcG91bmQnLFxuXHQncmVzY3VlJyxcblx0J21lc3MnLFxuXHQncHJlZmVyZW5jZScsXG5cdCdjb21wcmVoZW5zaXZlJyxcblx0J2luY2VudGl2ZScsXG5cdCdsZWFndWUnLFxuXHQnZGlhbG9nJyxcblx0J2NyZWFtJyxcblx0J3JhcGlkJyxcblx0J2NhbmNlbCcsXG5cdCdyZWdyZXQnLFxuXHQnZGlzbWlzcycsXG5cdCdtYXJnaW4nLFxuXHQnYmVuZWF0aCcsXG5cdCdvcHBvbmVudCcsXG5cdCdyZXNpc3QnLFxuXHQnY2FwYWJpbGl0eScsXG5cdCdhYnNvbHV0ZScsXG5cdCdjb3JyZXNwb25kJyxcblx0J3N0cm9rZScsXG5cdCdkYXJlJyxcblx0J2JhcnJpZXInLFxuXHQncmlkJyxcblx0J2Rpdm9yY2UnLFxuXHQncnVpbicsXG5cdCdidXJ5Jyxcblx0J2NvdW5zZWwnLFxuXHQndGVuZGVuY3knLFxuXHQnZnJlcXVlbnQnLFxuXHQnbW90b3InLFxuXHQnc3Vydml2YWwnLFxuXHQnY291bnRlcicsXG5cdCdwb3NzZXNzJyxcblx0J3Blcm1pc3Npb24nLFxuXHQndmFsbGV5Jyxcblx0J2Zsb2F0Jyxcblx0J21hZCcsXG5cdCdncmVhdGx5Jyxcblx0J3Zpc2libGUnLFxuXHQnZWxlY3RyaWMnLFxuXHQnaW1wcmVzc2l2ZScsXG5cdCdldm9sdXRpb24nLFxuXHQnYXdhcmVuZXNzJyxcblx0J3Zpb2xlbnQnLFxuXHQnc2xhdmUnLFxuXHQnd2VhbHRoeScsXG5cdCdhcmNoaXRlY3R1cmUnLFxuXHQnYWNjZXB0YWJsZScsXG5cdCdqb3VybmFsJyxcblx0J2NvYWwnLFxuXHQnbWVhc3VyZW1lbnQnLFxuXHQncmFuZG9tJyxcblx0J3N1Y2Nlc3NmdWxseScsXG5cdCdkZXByZXNzJyxcblx0J2lsbHVzdHJhdGlvbicsXG5cdCdidXJzdCcsXG5cdCdwcml2aWxlZ2UnLFxuXHQnYnV5ZXInLFxuXHQnbXV0dWFsJyxcblx0J3JhaWwnLFxuXHQnbW90aXZhdGUnLFxuXHQnbGFib3JhdG9yeScsXG5cdCdtb3J0Z2FnZScsXG5cdCdwcm9tb3Rpb24nLFxuXHQncGFzc2lvbicsXG5cdCdjaGFtcGlvbicsXG5cdCdmdWxmaWxsJyxcblx0J2R1c3QnLFxuXHQnZGVkaWNhdGUnLFxuXHQncm91Z2hseScsXG5cdCdza2lydCcsXG5cdCdwcm92aW5jZScsXG5cdCdtYXJjaCcsXG5cdCdldmFsdWF0aW9uJyxcblx0J2NvbXByb21pc2UnLFxuXHQnYWNjb21wbGlzaCcsXG5cdCd3ZWFrbmVzcycsXG5cdCdhbm5vdW5jZW1lbnQnLFxuXHQnc2FsdCcsXG5cdCdnbGFuY2UnLFxuXHQnb3BlcmEnLFxuXHQnY29udGVzdCcsXG5cdCdicnVzaCcsXG5cdCdlbWJhcnJhc3MnLFxuXHQnZ2FsbGVyeScsXG5cdCdnZW5ldGljJyxcblx0J2FnZ3Jlc3NpdmUnLFxuXHQnY2hlc3QnLFxuXHQnZm9ybWF0Jyxcblx0J2xpdGVyYXJ5Jyxcblx0J2dvdmVybicsXG5cdCdlbWJyYWNlJyxcblx0J3ByYWlzZScsXG5cdCdzaWxlbnQnLFxuXHQncHVtcCcsXG5cdCdwdWJsaXNoZXInLFxuXHQnY2VsZWJyYXRpb24nLFxuXHQnZ29sZicsXG5cdCdjb21wZW5zYXRpb24nLFxuXHQnY2xhc3NpY2FsJyxcblx0J3dlaWdoJyxcblx0J3ZlcnN1cycsXG5cdCdkZWZpY2l0Jyxcblx0J21vZGlmeScsXG5cdCdmbGFzaCcsXG5cdCdmcmllbmRzaGlwJyxcblx0J3Byb2Zlc3Npb24nLFxuXHQnbGl0ZXJhbGx5Jyxcblx0J2VxdWF0aW9uJyxcblx0J2dlc3R1cmUnLFxuXHQnZW50ZXJ0YWluJyxcblx0J2ZhbnRhc3RpYycsXG5cdCdhc3NpZ24nLFxuXHQnaW5mbGF0aW9uJyxcblx0J2hpc3RvcmljJyxcblx0J2luanVyZScsXG5cdCdyZW1vdGUnLFxuXHQndGhlcmFweScsXG5cdCdvcmFuZ2UnLFxuXHQndHdpc3QnLFxuXHQncGVyc29ubmVsJyxcblx0J2ltYWdpbmF0aW9uJyxcblx0J2Rpc2FncmVlJyxcblx0J3Rocm9hdCcsXG5cdCdpbnNpZ2h0Jyxcblx0J3RhY2tsZScsXG5cdCdmb3JldmVyJyxcblx0J2V4Y2VlZCcsXG5cdCdleHBlbmRpdHVyZScsXG5cdCdqb3knLFxuXHQncHJlZ25hbnQnLFxuXHQncmVsaWFibGUnLFxuXHQnZ2VhcicsXG5cdCdwb2V0Jyxcblx0J2ZvcnR1bmUnLFxuXHQnY2VyZW1vbnknLFxuXHQncGlsZScsXG5cdCdwaWcnLFxuXHQnbWl4dHVyZScsXG5cdCdhdXRvbWF0aWNhbGx5Jyxcblx0J3NjaG9sYXInLFxuXHQncHN5Y2hvbG9naWNhbCcsXG5cdCdkcmFtYXRpY2FsbHknLFxuXHQnc3Rha2UnLFxuXHQnY3JlYXR1cmUnLFxuXHQncGFydG5lcnNoaXAnLFxuXHQncGFydGljaXBhdGlvbicsXG5cdCdjbGF1c2UnLFxuXHQncGVuYWx0eScsXG5cdCdjaGFtYmVyJyxcblx0J2ZhbmN5Jyxcblx0J3BvZXRyeScsXG5cdCdjaGF0Jyxcblx0J2Nsb3RoaW5nJyxcblx0J2V2b2x2ZScsXG5cdCdzYWtlJyxcblx0J3NoZWxmJyxcblx0J2Jvb3N0Jyxcblx0J3RhaWwnLFxuXHQncG9zc2Vzc2lvbicsXG5cdCdhYm9ydGlvbicsXG5cdCdjdXJpb3VzJyxcblx0J3dvb2RlbicsXG5cdCdib29tJyxcblx0J3RhbGUnLFxuXHQnZGVtb2NyYXRpYycsXG5cdCdtYWludGVuYW5jZScsXG5cdCdjb25zZXF1ZW50bHknLFxuXHQncG90Jyxcblx0J2NvdycsXG5cdCdzdHJlbmd0aGVuJyxcblx0J3doaWxzdCcsXG5cdCdjb25zdHJhaW50Jyxcblx0J2ZvbGQnLFxuXHQnYmluJyxcblx0J3VuZGVyZ28nLFxuXHQncG90ZW50aWFsbHknLFxuXHQnc2NvcGUnLFxuXHQncHJldGVuZCcsXG5cdCdkaXZlcnNpdHknLFxuXHQnYWxsZWdlJyxcblx0J3ByaWRlJyxcblx0J2ludGVuc2UnLFxuXHQnaW5xdWlyeScsXG5cdCdyZXNpZ24nLFxuXHQnY3JhZnQnLFxuXHQnc3RyaWN0Jyxcblx0J2NvbmNyZXRlJyxcblx0J3NoZWxsJyxcblx0J2RhbW4nLFxuXHQnZGlzdGluY3QnLFxuXHQnaHVtb3InLFxuXHQnbGltaXRhdGlvbicsXG5cdCdpbmRpY2F0aW9uJyxcblx0J3N0YWJpbGl0eScsXG5cdCd3aXNlJyxcblx0J25lZ2xlY3QnLFxuXHQnY29tcG9zZScsXG5cdCdqYWlsJyxcblx0J3NoZWx0ZXInLFxuXHQnbWVyZScsXG5cdCdjYXJib24nLFxuXHQncmVndWxhdGUnLFxuXHQnY2hlZXNlJyxcblx0J3RyaWdnZXInLFxuXHQncGlwZScsXG5cdCdkZXN0cnVjdGlvbicsXG5cdCdndWl0YXInLFxuXHQnZmxhZycsXG5cdCdwaWFubycsXG5cdCdtYWdpYycsXG5cdCdteXN0ZXJ5Jyxcblx0J3NraScsXG5cdCd3aGlzcGVyJyxcblx0J3JlYXInLFxuXHQnbWVudScsXG5cdCdzcGVjaWVzJyxcblx0J21vb24nLFxuXHQncHJlc3VtYWJseScsXG5cdCdibGVzcycsXG5cdCdhaXJsaW5lJyxcblx0J2FtZW5kbWVudCcsXG5cdCdncmFuZG1vdGhlcicsXG5cdCdqdXJ5Jyxcblx0J2Nvb3BlcmF0aW9uJyxcblx0J2NpdmlsaWFuJyxcblx0J2NvbXBvc2l0aW9uJyxcblx0J2NvaW4nLFxuXHQncmVnYXJkbGVzcycsXG5cdCdzY2FuJyxcblx0J2J1bmNoJyxcblx0J3JhY2lhbCcsXG5cdCdncmVldCcsXG5cdCdob3BlZnVsbHknLFxuXHQnc2FuY3Rpb24nLFxuXHQndHJpY2snLFxuXHQncGFyYWdyYXBoJyxcblx0J21ha2VyJyxcblx0J2Nob2NvbGF0ZScsXG5cdCdzdGltdWxhdGUnLFxuXHQnYmVsdCcsXG5cdCdwb3RhdG8nLFxuXHQnbmFycmF0aXZlJyxcblx0J3Rpc3N1ZScsXG5cdCdiYXJlbHknLFxuXHQnaW52ZW50Jyxcblx0J3RvdXJpc20nLFxuXHQncHJvJyxcblx0J3N0YWlyJyxcblx0J2hlc2l0YXRlJyxcblx0J3NoaW5lJyxcblx0J21vdGl2YXRpb24nLFxuXHQncm9tYW50aWMnLFxuXHQnZmlybWx5Jyxcblx0J2ludGVyaW9yJyxcblx0J3N0b21hY2gnLFxuXHQnbm93aGVyZScsXG5cdCdwcmF5Jyxcblx0J2NoYW1waW9uc2hpcCcsXG5cdCdzZXJ2YW50Jyxcblx0J2ltbWlncmFudCcsXG5cdCdleGNlc3MnLFxuXHQnY29tcGxleGl0eScsXG5cdCdsaWFiaWxpdHknLFxuXHQnc3VycHJpc2luZ2x5Jyxcblx0J2V4dHJhY3QnLFxuXHQnaW1wbGVtZW50YXRpb24nLFxuXHQnYmlhcycsXG5cdCdkaWZmZXJlbnRseScsXG5cdCdjYXRhbG9nJyxcblx0J2NvbnRpbnVvdXMnLFxuXHQnZ29sZGVuJyxcblx0J3N0YW1wJyxcblx0J2d1aWRlbGluZScsXG5cdCdlbnZlbG9wZScsXG5cdCdrbmlmZScsXG5cdCdiaW9sb2dpY2FsJyxcblx0J2NvbnN1bWUnLFxuXHQnbHV4dXJ5Jyxcblx0J3dlZWtseScsXG5cdCd3aGVyZXZlcicsXG5cdCdiaXRlJyxcblx0J3ByaW50ZXInLFxuXHQnZmlyc3RseScsXG5cdCdhbnhpb3VzJyxcblx0J2FkdmVudHVyZScsXG5cdCdmZW5jZScsXG5cdCdleGhhdXN0Jyxcblx0J2F0dHJhY3Rpb24nLFxuXHQnb2NlYW4nLFxuXHQncXVpZXRseScsXG5cdCdjYXN0bGUnLFxuXHQndmV0ZXJhbicsXG5cdCdyZWZsZWN0aW9uJyxcblx0J25lcnZlJyxcblx0J2RldGVybWluYXRpb24nLFxuXHQnYWx0b2dldGhlcicsXG5cdCdmaWN0aW9uJyxcblx0J2NhcnBldCcsXG5cdCdjbHVzdGVyJyxcblx0J2NvbmZ1c2lvbicsXG5cdCdodXJyeScsXG5cdCdsb2dpYycsXG5cdCdjb250cm92ZXJzaWFsJyxcblx0J3JhdycsXG5cdCdncmFtbWFyJyxcblx0J3JldmlzZScsXG5cdCdoaW50Jyxcblx0J2hvb2snLFxuXHQnYmVsbCcsXG5cdCdsaXF1aWQnLFxuXHQncGFuaWMnLFxuXHQndW5jbGUnLFxuXHQncmljZScsXG5cdCdzbG9wZScsXG5cdCdoYXBwaW5lc3MnLFxuXHQnZ2VudWluZScsXG5cdCd2ZXNzZWwnLFxuXHQndmVyYicsXG5cdCdyZWNrb24nLFxuXHQnc2lsbHknLFxuXHQndHJhbnNwb3J0YXRpb24nLFxuXHQnaGFyYm9yJyxcblx0J2NvbWVkeScsXG5cdCdjaGFzZScsXG5cdCdzdG9yYWdlJyxcblx0J3VuaXZlcnNlJyxcblx0J2hvcnJpYmxlJyxcblx0J3NoZWVwJyxcblx0J2xvdmVyJyxcblx0J3JhdCcsXG5cdCdwb3J0cmFpdCcsXG5cdCdpbm5vY2VudCcsXG5cdCdzdWJzdGl0dXRlJyxcblx0J3N1cHBsZW1lbnQnLFxuXHQnYWRqdXN0bWVudCcsXG5cdCdyZWFzb25hYmx5Jyxcblx0J2ZpbHRlcicsXG5cdCdmbGV4aWJsZScsXG5cdCdhYnN0cmFjdCcsXG5cdCd0ZW50Jyxcblx0J3ByZWNpc2UnLFxuXHQnZGlzdGFudCcsXG5cdCdzdHJhbmdlcicsXG5cdCdzaGFkZScsXG5cdCdncmFpbicsXG5cdCdzaXR1YXRlJyxcblx0J3N1bW1hcml6ZScsXG5cdCdsZWFwJyxcblx0J3NuYXAnLFxuXHQncHJvYmFiaWxpdHknLFxuXHQnbGVhdGhlcicsXG5cdCd1bmNlcnRhaW50eScsXG5cdCdzd2VhcicsXG5cdCdyZWZ1Z2VlJyxcblx0J3Nob3JlJyxcblx0J21vbnRobHknLFxuXHQnY29tcHJpc2UnLFxuXHQnc3RpcicsXG5cdCdleGNpdGVtZW50Jyxcblx0J3NpZ2gnLFxuXHQncHJlZ25hbmN5Jyxcblx0J2V4cGVyaW1lbnRhbCcsXG5cdCdpbnN0aXR1dGlvbmFsJyxcblx0J3NsaWNlJyxcblx0J3dhbmRlcicsXG5cdCdlbXBpcmUnLFxuXHQnc3Vic2VxdWVudGx5Jyxcblx0J2dlbnRsZScsXG5cdCdhdHRlbmRhbmNlJyxcblx0J293bmVyc2hpcCcsXG5cdCdxdWFsaWZpY2F0aW9uJyxcblx0J3N1c3BlbmQnLFxuXHQnZnVuY3Rpb25hbCcsXG5cdCd2b2x1bnRhcnknLFxuXHQncGFsZScsXG5cdCdzdGFpbicsXG5cdCdhdGhsZXRlJyxcblx0J29yZ2FuaWMnLFxuXHQndG9uZ3VlJyxcblx0J3NlcnZlcicsXG5cdCdzdHJ1Y3R1cmFsJyxcblx0J2Zvb2wnLFxuXHQnYWxvbmdzaWRlJyxcblx0J3VuaXRlJyxcblx0J2dlbnRseScsXG5cdCdjb21wdXRlJyxcblx0J3dpcGUnLFxuXHQnd2VpcmQnLFxuXHQnZ2F6ZScsXG5cdCdmYWRlJyxcblx0J2NvdWdoJyxcblx0J2h5cG90aGVzaXMnLFxuXHQncm95YWwnLFxuXHQndGhlb3JldGljYWwnLFxuXHQnY3VydGFpbicsXG5cdCdtYXlvcicsXG5cdCdkYXJrbmVzcycsXG5cdCdhdW50Jyxcblx0J3RvdXJuYW1lbnQnLFxuXHQncmVnaXN0cmF0aW9uJyxcblx0J2ZyYWdtZW50Jyxcblx0J2xpc3RlbmVyJyxcblx0J3RlbmRlcicsXG5cdCdkZW5zaXR5Jyxcblx0J3VnbHknLFxuXHQnbW9kdWxlJyxcblx0J2ZhaXRoZnVsbHknLFxuXHQnYXV0dW1uJyxcblx0J2NoZWVrJyxcblx0J2F0dGFjaG1lbnQnLFxuXHQnaG9sZGVyJyxcblx0J2dyaW4nLFxuXHQnbm91bicsXG5cdCdmb3J0dW5hdGUnLFxuXHQnYWxyaWdodCcsXG5cdCdsYXp5Jyxcblx0J2hlbGxvJyxcblx0J2h1bmdlcicsXG5cdCdpbnN1cmUnLFxuXHQnYXNoYW1lZCcsXG5cdCdmb3VuZCcsXG5cdCd0aGlyc3QnLFxuXVxuXG5leHBvcnQgeyB3b3JkTGlzdEpQLCB3b3JkTGlzdEVOIH1cbiIsImltcG9ydCAqIGFzIENvbWxpbmsgZnJvbSAnY29tbGlua2pzJ1xuaW1wb3J0IHsgd29yZExpc3RKUCwgd29yZExpc3RFTiB9IGZyb20gJy4uLy4uL3dvcmRzL2xpc3QnXG4vLyBZb3VyIGVudmlyb25tZW50IG1heSBhbHNvIHN1cHBvcnQgdHJhbnNwYXJlbnQgcmV3cml0aW5nIG9mIGNvbW1vbkpTIHRvIEVTNjpcbi8vIGltcG9ydCBQcm94eVBvbHlmaWxsIGZyb20gJ3Byb3h5LXBvbHlmaWxsL3NyYy9wcm94eSc7XG5cbmxldCB3b3JrZXIgPSBuZXcgV29ya2VyKCcuL3dvcmtlci93b3JrZXInLCB7IHR5cGU6ICdtb2R1bGUnIH0pXG5sZXQgTXVmZiA9IENvbWxpbmsucHJveHkod29ya2VyKVxuXG5jbGFzcyBtdWZmU2FtcGxlIHtcblx0Y29uc3RydWN0b3IgKE11ZmYpIHtcblx0XHR0aGlzLk11ZmYgPSBNdWZmXG5cdFx0dGhpcy5pc0luaXRpYWxpemVkID0gZmFsc2Vcblx0fVxuXG5cdGFzeW5jIGluaXQoKSB7XG5cdFx0aWYgKHRoaXMuaXNJbml0aWFsaXplZCkge1xuXHRcdFx0cmV0dXJuXG5cdFx0fVxuXG5cdFx0Ly8g57WQ5p6c44Gu5pWw44KS6Kit5a6aXG5cdFx0YXdhaXQgdGhpcy5NdWZmLmluaXQoKVxuXHRcdGF3YWl0IHRoaXMuTXVmZi5zZXRSZXR1cm5MaXN0TGVuZ3RoKDIwKVxuXHRcdGF3YWl0IHRoaXMuTXVmZi5zZXRTZWFyY2hXb3JkTGlzdCh0aGlzLmxpc3RUb0hhc2hMaXN0KHdvcmRMaXN0RU4pKVxuXG5cdFx0dGhpcy5zZXRGb3JtKClcblx0XHR0aGlzLnNldFRvZ2dsZSgpXG5cblx0XHR0aGlzLmlzSW5pdGlhbGl6ZWQgPSB0cnVlXG5cdH1cblxuXHRzZXRUb2dnbGUoKSB7XG5cdFx0bGV0IHN3aXRjaGVyID0gZmFsc2Vcblx0XHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNoYW5nZS13b3JkbGlzdFwiKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcblx0XHRcdChhc3luYyAoKSA9PiB7XG5cdFx0XHRcdGNvbnNvbGUubG9nKCdzd2l0Y2hlZCcpXG5cdFx0XHRcdHN3aXRjaGVyID0gIXN3aXRjaGVyXG5cdFx0XHRcdGlmIChzd2l0Y2hlcikge1xuXHRcdFx0XHRcdGNvbnNvbGUubG9nKCd0byBKUCcpXG5cdFx0XHRcdFx0YXdhaXQgdGhpcy5NdWZmLnNldFNlYXJjaFdvcmRMaXN0KHRoaXMubGlzdFRvSGFzaExpc3Qod29yZExpc3RKUCkpXG5cdFx0XHRcdFx0dGhpcy5zZWFyY2goKVxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGNvbnNvbGUubG9nKCd0byBFTicpXG5cdFx0XHRcdFx0YXdhaXQgdGhpcy5NdWZmLnNldFNlYXJjaFdvcmRMaXN0KHRoaXMubGlzdFRvSGFzaExpc3Qod29yZExpc3RFTikpXG5cdFx0XHRcdFx0dGhpcy5zZWFyY2goKVxuXHRcdFx0XHR9XG5cdFx0XHR9KSgpXG5cdFx0fSlcblx0fVxuXG5cdGxpc3RUb0hhc2hMaXN0KGxpc3QpIHtcblx0XHRsZXQgaGFzaExpc3QgPSBbXVxuXHRcdGxldCByZXZMaXN0ID0gbGlzdC5zbGljZSgpLnJldmVyc2UoKVxuXHRcdGxpc3QuZm9yRWFjaCgodmFsdWUsIGluZGV4KSA9PiB7XG5cdFx0XHRoYXNoTGlzdC5wdXNoKHtcblx0XHRcdFx0d29yZDogdmFsdWUsXG5cdFx0XHRcdGluZGV4OiBcIlwiICsgaW5kZXgsXG5cdFx0XHRcdHJldjogcmV2TGlzdFtpbmRleF0sXG5cdFx0XHRcdF9pZ25vcmU6ICd0ZXN0J1xuXHRcdFx0fSlcblx0XHR9KVxuXG5cdFx0cmV0dXJuIGhhc2hMaXN0XG5cdH1cblxuXHRzZXRGb3JtKCkge1xuXHRcdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic2VhcmNoXCIpLmFkZEV2ZW50TGlzdGVuZXIoJ2tleXVwJywgKCkgPT4ge1xuXHRcdFx0dGhpcy5zZWFyY2goKVxuXHRcdH0pXG5cdH1cblxuXHRhc3luYyBzZWFyY2goKSB7XG5cdFx0Y29uc3QgdmFsdWUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNlYXJjaFwiKS52YWx1ZVxuXG5cdFx0Y29uc3Qgc3RhcnRUaW1lID0gcGVyZm9ybWFuY2Uubm93KCk7IC8vIOmWi+Wni+aZgumWk1xuXG5cdFx0Y29uc3QgcmVzdWx0ID0gYXdhaXQgdGhpcy5NdWZmLnNlYXJjaCh2YWx1ZSlcblxuXHRcdGNvbnN0IGxlbiA9IGF3YWl0IHRoaXMuTXVmZi5nZXRIaXRMZW5ndGgoKVxuXHRcdGNvbnNvbGUubG9nKGxlbilcblxuXHRcdGNvbnN0IGVuZFRpbWUgPSBwZXJmb3JtYW5jZS5ub3coKTsgLy8g57WC5LqG5pmC6ZaTXG5cdFx0Y29uc29sZS5sb2coZW5kVGltZSAtIHN0YXJ0VGltZSk7IC8vIOS9leODn+ODquenkuOBi+OBi+OBo+OBn+OBi+OCkuihqOekuuOBmeOCi1xuXG5cdFx0Y29uc3QgJHJlc3VsdEZpZWxkID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jlc3VsdC1maWVsZCcpXG5cdFx0Y29uc3QgJHJlc3VsdEZpZWxkV29yZCA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ3Jlc3VsdC1maWVsZC1saScpXG5cblx0XHRpZiAoJHJlc3VsdEZpZWxkV29yZC5sZW5ndGggPiAwKSB7XG5cdFx0XHRsZXQgbGVuID0gJHJlc3VsdEZpZWxkV29yZC5sZW5ndGhcblx0XHRcdGZvciAobGV0ICRpID0gMDsgJGkgPCBsZW47ICRpKyspIHtcblx0XHRcdFx0Ly8g6KaB57Sg44GM5rib44Gj44Gm44GE44GP44Gf44KBMOWAi+ebruOCkuWJiumZpFxuXHRcdFx0XHQkcmVzdWx0RmllbGQucmVtb3ZlQ2hpbGQoJHJlc3VsdEZpZWxkV29yZFswXSlcblx0XHRcdH1cblx0XHR9XG5cblx0XHRjb25zb2xlLmxvZyhyZXN1bHQpXG5cdFx0cmVzdWx0LmZvckVhY2goKHJlcykgPT4ge1xuXHRcdFx0bGV0ICRsaSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJylcblx0XHRcdCRsaS5jbGFzc0xpc3QuYWRkKCdyZXN1bHQtZmllbGQtbGknKVxuXHRcdFx0bGV0IHdvcmROb2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoXG5cdFx0XHRcdHJlcy5tYXRjaGVzLndvcmQgKyBcblx0XHRcdFx0JygnICsgcmVzLm1hdGNoZXMuaW5kZXggKyAnKSAtPiAnICsgXG5cdFx0XHRcdHJlcy5oaWdobGlnaHRlZHMud29yZCArIFxuXHRcdFx0XHQnKCcgKyByZXMuaGlnaGxpZ2h0ZWRzLmluZGV4ICsgJyknICsgXG5cdFx0XHRcdHJlcy5tYXRjaGVzLnJldiArICctPicgK1xuXHRcdFx0XHRyZXMuaGlnaGxpZ2h0ZWRzLnJldlxuXHRcdFx0KVxuXHRcdFx0JGxpLmFwcGVuZENoaWxkKHdvcmROb2RlKVxuXHRcdFx0JHJlc3VsdEZpZWxkLmFwcGVuZENoaWxkKCRsaSk7IC8vIGZyYWdtZW5044Gu6L+95Yqg44GZ44KLXG5cdFx0fSlcblx0fVxufVxuXG5sZXQgU2FtcGxlID0gbmV3IG11ZmZTYW1wbGUoTXVmZilcblxuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzZWFyY2hcIikuYWRkRXZlbnRMaXN0ZW5lcihcImZvY3VzXCIsIGZ1bmN0aW9uKCBldmVudCApIHtcblx0U2FtcGxlLmluaXQoKVxufSlcblxuIiwiLyoqXG4gKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuY29uc3QgVFJBTlNGRVJBQkxFX1RZUEVTID0gW1wiQXJyYXlCdWZmZXJcIiwgXCJNZXNzYWdlUG9ydFwiLCBcIk9mZnNjcmVlbkNhbnZhc1wiXVxuICAgIC5maWx0ZXIoZiA9PiBmIGluIHNlbGYpXG4gICAgLm1hcChmID0+IHNlbGZbZl0pO1xuY29uc3QgdWlkID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogTnVtYmVyLk1BWF9TQUZFX0lOVEVHRVIpO1xuY29uc3QgcHJveHlWYWx1ZVN5bWJvbCA9IFN5bWJvbChcInByb3h5VmFsdWVcIik7XG5jb25zdCB0aHJvd1N5bWJvbCA9IFN5bWJvbChcInRocm93XCIpO1xuY29uc3QgcHJveHlUcmFuc2ZlckhhbmRsZXIgPSB7XG4gICAgY2FuSGFuZGxlOiAob2JqKSA9PiBvYmogJiYgb2JqW3Byb3h5VmFsdWVTeW1ib2xdLFxuICAgIHNlcmlhbGl6ZTogKG9iaikgPT4ge1xuICAgICAgICBjb25zdCB7IHBvcnQxLCBwb3J0MiB9ID0gbmV3IE1lc3NhZ2VDaGFubmVsKCk7XG4gICAgICAgIGV4cG9zZShvYmosIHBvcnQxKTtcbiAgICAgICAgcmV0dXJuIHBvcnQyO1xuICAgIH0sXG4gICAgZGVzZXJpYWxpemU6IChvYmopID0+IHtcbiAgICAgICAgcmV0dXJuIHByb3h5KG9iaik7XG4gICAgfVxufTtcbmNvbnN0IHRocm93VHJhbnNmZXJIYW5kbGVyID0ge1xuICAgIGNhbkhhbmRsZTogKG9iaikgPT4gb2JqICYmIG9ialt0aHJvd1N5bWJvbF0sXG4gICAgc2VyaWFsaXplOiAob2JqKSA9PiB7XG4gICAgICAgIGNvbnN0IG1lc3NhZ2UgPSBvYmogJiYgb2JqLm1lc3NhZ2U7XG4gICAgICAgIGNvbnN0IHN0YWNrID0gb2JqICYmIG9iai5zdGFjaztcbiAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIG9iaiwgeyBtZXNzYWdlLCBzdGFjayB9KTtcbiAgICB9LFxuICAgIGRlc2VyaWFsaXplOiAob2JqKSA9PiB7XG4gICAgICAgIHRocm93IE9iamVjdC5hc3NpZ24oRXJyb3IoKSwgb2JqKTtcbiAgICB9XG59O1xuZXhwb3J0IGNvbnN0IHRyYW5zZmVySGFuZGxlcnMgPSBuZXcgTWFwKFtcbiAgICBbXCJQUk9YWVwiLCBwcm94eVRyYW5zZmVySGFuZGxlcl0sXG4gICAgW1wiVEhST1dcIiwgdGhyb3dUcmFuc2ZlckhhbmRsZXJdXG5dKTtcbmxldCBwaW5nUG9uZ01lc3NhZ2VDb3VudGVyID0gMDtcbmV4cG9ydCBmdW5jdGlvbiBwcm94eShlbmRwb2ludCwgdGFyZ2V0KSB7XG4gICAgaWYgKGlzV2luZG93KGVuZHBvaW50KSlcbiAgICAgICAgZW5kcG9pbnQgPSB3aW5kb3dFbmRwb2ludChlbmRwb2ludCk7XG4gICAgaWYgKCFpc0VuZHBvaW50KGVuZHBvaW50KSlcbiAgICAgICAgdGhyb3cgRXJyb3IoXCJlbmRwb2ludCBkb2VzIG5vdCBoYXZlIGFsbCBvZiBhZGRFdmVudExpc3RlbmVyLCByZW1vdmVFdmVudExpc3RlbmVyIGFuZCBwb3N0TWVzc2FnZSBkZWZpbmVkXCIpO1xuICAgIGFjdGl2YXRlRW5kcG9pbnQoZW5kcG9pbnQpO1xuICAgIHJldHVybiBjYlByb3h5KGFzeW5jIChpcmVxdWVzdCkgPT4ge1xuICAgICAgICBsZXQgYXJncyA9IFtdO1xuICAgICAgICBpZiAoaXJlcXVlc3QudHlwZSA9PT0gXCJBUFBMWVwiIHx8IGlyZXF1ZXN0LnR5cGUgPT09IFwiQ09OU1RSVUNUXCIpXG4gICAgICAgICAgICBhcmdzID0gaXJlcXVlc3QuYXJndW1lbnRzTGlzdC5tYXAod3JhcFZhbHVlKTtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBwaW5nUG9uZ01lc3NhZ2UoZW5kcG9pbnQsIE9iamVjdC5hc3NpZ24oe30sIGlyZXF1ZXN0LCB7IGFyZ3VtZW50c0xpc3Q6IGFyZ3MgfSksIHRyYW5zZmVyYWJsZVByb3BlcnRpZXMoYXJncykpO1xuICAgICAgICBjb25zdCByZXN1bHQgPSByZXNwb25zZS5kYXRhO1xuICAgICAgICByZXR1cm4gdW53cmFwVmFsdWUocmVzdWx0LnZhbHVlKTtcbiAgICB9LCBbXSwgdGFyZ2V0KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBwcm94eVZhbHVlKG9iaikge1xuICAgIG9ialtwcm94eVZhbHVlU3ltYm9sXSA9IHRydWU7XG4gICAgcmV0dXJuIG9iajtcbn1cbmV4cG9ydCBmdW5jdGlvbiBleHBvc2Uocm9vdE9iaiwgZW5kcG9pbnQpIHtcbiAgICBpZiAoaXNXaW5kb3coZW5kcG9pbnQpKVxuICAgICAgICBlbmRwb2ludCA9IHdpbmRvd0VuZHBvaW50KGVuZHBvaW50KTtcbiAgICBpZiAoIWlzRW5kcG9pbnQoZW5kcG9pbnQpKVxuICAgICAgICB0aHJvdyBFcnJvcihcImVuZHBvaW50IGRvZXMgbm90IGhhdmUgYWxsIG9mIGFkZEV2ZW50TGlzdGVuZXIsIHJlbW92ZUV2ZW50TGlzdGVuZXIgYW5kIHBvc3RNZXNzYWdlIGRlZmluZWRcIik7XG4gICAgYWN0aXZhdGVFbmRwb2ludChlbmRwb2ludCk7XG4gICAgYXR0YWNoTWVzc2FnZUhhbmRsZXIoZW5kcG9pbnQsIGFzeW5jIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICBpZiAoIWV2ZW50LmRhdGEuaWQgfHwgIWV2ZW50LmRhdGEuY2FsbFBhdGgpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGNvbnN0IGlyZXF1ZXN0ID0gZXZlbnQuZGF0YTtcbiAgICAgICAgbGV0IHRoYXQgPSBhd2FpdCBpcmVxdWVzdC5jYWxsUGF0aFxuICAgICAgICAgICAgLnNsaWNlKDAsIC0xKVxuICAgICAgICAgICAgLnJlZHVjZSgob2JqLCBwcm9wTmFtZSkgPT4gb2JqW3Byb3BOYW1lXSwgcm9vdE9iaik7XG4gICAgICAgIGxldCBvYmogPSBhd2FpdCBpcmVxdWVzdC5jYWxsUGF0aC5yZWR1Y2UoKG9iaiwgcHJvcE5hbWUpID0+IG9ialtwcm9wTmFtZV0sIHJvb3RPYmopO1xuICAgICAgICBsZXQgaXJlc3VsdCA9IG9iajtcbiAgICAgICAgbGV0IGFyZ3MgPSBbXTtcbiAgICAgICAgaWYgKGlyZXF1ZXN0LnR5cGUgPT09IFwiQVBQTFlcIiB8fCBpcmVxdWVzdC50eXBlID09PSBcIkNPTlNUUlVDVFwiKVxuICAgICAgICAgICAgYXJncyA9IGlyZXF1ZXN0LmFyZ3VtZW50c0xpc3QubWFwKHVud3JhcFZhbHVlKTtcbiAgICAgICAgaWYgKGlyZXF1ZXN0LnR5cGUgPT09IFwiQVBQTFlcIikge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBpcmVzdWx0ID0gYXdhaXQgb2JqLmFwcGx5KHRoYXQsIGFyZ3MpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICBpcmVzdWx0ID0gZTtcbiAgICAgICAgICAgICAgICBpcmVzdWx0W3Rocm93U3ltYm9sXSA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlyZXF1ZXN0LnR5cGUgPT09IFwiQ09OU1RSVUNUXCIpIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgaXJlc3VsdCA9IG5ldyBvYmooLi4uYXJncyk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbmV3LWNhcFxuICAgICAgICAgICAgICAgIGlyZXN1bHQgPSBwcm94eVZhbHVlKGlyZXN1bHQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICBpcmVzdWx0ID0gZTtcbiAgICAgICAgICAgICAgICBpcmVzdWx0W3Rocm93U3ltYm9sXSA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlyZXF1ZXN0LnR5cGUgPT09IFwiU0VUXCIpIHtcbiAgICAgICAgICAgIG9ialtpcmVxdWVzdC5wcm9wZXJ0eV0gPSBpcmVxdWVzdC52YWx1ZTtcbiAgICAgICAgICAgIC8vIEZJWE1FOiBFUzYgUHJveHkgSGFuZGxlciBgc2V0YCBtZXRob2RzIGFyZSBzdXBwb3NlZCB0byByZXR1cm4gYVxuICAgICAgICAgICAgLy8gYm9vbGVhbi4gVG8gc2hvdyBnb29kIHdpbGwsIHdlIHJldHVybiB0cnVlIGFzeW5jaHJvbm91c2x5IMKvXFxfKOODhClfL8KvXG4gICAgICAgICAgICBpcmVzdWx0ID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBpcmVzdWx0ID0gbWFrZUludm9jYXRpb25SZXN1bHQoaXJlc3VsdCk7XG4gICAgICAgIGlyZXN1bHQuaWQgPSBpcmVxdWVzdC5pZDtcbiAgICAgICAgcmV0dXJuIGVuZHBvaW50LnBvc3RNZXNzYWdlKGlyZXN1bHQsIHRyYW5zZmVyYWJsZVByb3BlcnRpZXMoW2lyZXN1bHRdKSk7XG4gICAgfSk7XG59XG5mdW5jdGlvbiB3cmFwVmFsdWUoYXJnKSB7XG4gICAgLy8gSXMgYXJnIGl0c2VsZiBoYW5kbGVkIGJ5IGEgVHJhbnNmZXJIYW5kbGVyP1xuICAgIGZvciAoY29uc3QgW2tleSwgdHJhbnNmZXJIYW5kbGVyXSBvZiB0cmFuc2ZlckhhbmRsZXJzKSB7XG4gICAgICAgIGlmICh0cmFuc2ZlckhhbmRsZXIuY2FuSGFuZGxlKGFyZykpIHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgdHlwZToga2V5LFxuICAgICAgICAgICAgICAgIHZhbHVlOiB0cmFuc2ZlckhhbmRsZXIuc2VyaWFsaXplKGFyZylcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICB9XG4gICAgLy8gSWYgbm90LCB0cmF2ZXJzZSB0aGUgZW50aXJlIG9iamVjdCBhbmQgZmluZCBoYW5kbGVkIHZhbHVlcy5cbiAgICBsZXQgd3JhcHBlZENoaWxkcmVuID0gW107XG4gICAgZm9yIChjb25zdCBpdGVtIG9mIGl0ZXJhdGVBbGxQcm9wZXJ0aWVzKGFyZykpIHtcbiAgICAgICAgZm9yIChjb25zdCBba2V5LCB0cmFuc2ZlckhhbmRsZXJdIG9mIHRyYW5zZmVySGFuZGxlcnMpIHtcbiAgICAgICAgICAgIGlmICh0cmFuc2ZlckhhbmRsZXIuY2FuSGFuZGxlKGl0ZW0udmFsdWUpKSB7XG4gICAgICAgICAgICAgICAgd3JhcHBlZENoaWxkcmVuLnB1c2goe1xuICAgICAgICAgICAgICAgICAgICBwYXRoOiBpdGVtLnBhdGgsXG4gICAgICAgICAgICAgICAgICAgIHdyYXBwZWRWYWx1ZToge1xuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZToga2V5LFxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHRyYW5zZmVySGFuZGxlci5zZXJpYWxpemUoaXRlbS52YWx1ZSlcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGZvciAoY29uc3Qgd3JhcHBlZENoaWxkIG9mIHdyYXBwZWRDaGlsZHJlbikge1xuICAgICAgICBjb25zdCBjb250YWluZXIgPSB3cmFwcGVkQ2hpbGQucGF0aFxuICAgICAgICAgICAgLnNsaWNlKDAsIC0xKVxuICAgICAgICAgICAgLnJlZHVjZSgob2JqLCBrZXkpID0+IG9ialtrZXldLCBhcmcpO1xuICAgICAgICBjb250YWluZXJbd3JhcHBlZENoaWxkLnBhdGhbd3JhcHBlZENoaWxkLnBhdGgubGVuZ3RoIC0gMV1dID0gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogXCJSQVdcIixcbiAgICAgICAgdmFsdWU6IGFyZyxcbiAgICAgICAgd3JhcHBlZENoaWxkcmVuXG4gICAgfTtcbn1cbmZ1bmN0aW9uIHVud3JhcFZhbHVlKGFyZykge1xuICAgIGlmICh0cmFuc2ZlckhhbmRsZXJzLmhhcyhhcmcudHlwZSkpIHtcbiAgICAgICAgY29uc3QgdHJhbnNmZXJIYW5kbGVyID0gdHJhbnNmZXJIYW5kbGVycy5nZXQoYXJnLnR5cGUpO1xuICAgICAgICByZXR1cm4gdHJhbnNmZXJIYW5kbGVyLmRlc2VyaWFsaXplKGFyZy52YWx1ZSk7XG4gICAgfVxuICAgIGVsc2UgaWYgKGlzUmF3V3JhcHBlZFZhbHVlKGFyZykpIHtcbiAgICAgICAgZm9yIChjb25zdCB3cmFwcGVkQ2hpbGRWYWx1ZSBvZiBhcmcud3JhcHBlZENoaWxkcmVuIHx8IFtdKSB7XG4gICAgICAgICAgICBpZiAoIXRyYW5zZmVySGFuZGxlcnMuaGFzKHdyYXBwZWRDaGlsZFZhbHVlLndyYXBwZWRWYWx1ZS50eXBlKSlcbiAgICAgICAgICAgICAgICB0aHJvdyBFcnJvcihgVW5rbm93biB2YWx1ZSB0eXBlIFwiJHthcmcudHlwZX1cIiBhdCAke3dyYXBwZWRDaGlsZFZhbHVlLnBhdGguam9pbihcIi5cIil9YCk7XG4gICAgICAgICAgICBjb25zdCB0cmFuc2ZlckhhbmRsZXIgPSB0cmFuc2ZlckhhbmRsZXJzLmdldCh3cmFwcGVkQ2hpbGRWYWx1ZS53cmFwcGVkVmFsdWUudHlwZSk7XG4gICAgICAgICAgICBjb25zdCBuZXdWYWx1ZSA9IHRyYW5zZmVySGFuZGxlci5kZXNlcmlhbGl6ZSh3cmFwcGVkQ2hpbGRWYWx1ZS53cmFwcGVkVmFsdWUudmFsdWUpO1xuICAgICAgICAgICAgcmVwbGFjZVZhbHVlSW5PYmplY3RBdFBhdGgoYXJnLnZhbHVlLCB3cmFwcGVkQ2hpbGRWYWx1ZS5wYXRoLCBuZXdWYWx1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGFyZy52YWx1ZTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHRocm93IEVycm9yKGBVbmtub3duIHZhbHVlIHR5cGUgXCIke2FyZy50eXBlfVwiYCk7XG4gICAgfVxufVxuZnVuY3Rpb24gcmVwbGFjZVZhbHVlSW5PYmplY3RBdFBhdGgob2JqLCBwYXRoLCBuZXdWYWwpIHtcbiAgICBjb25zdCBsYXN0S2V5ID0gcGF0aC5zbGljZSgtMSlbMF07XG4gICAgY29uc3QgbGFzdE9iaiA9IHBhdGhcbiAgICAgICAgLnNsaWNlKDAsIC0xKVxuICAgICAgICAucmVkdWNlKChvYmosIGtleSkgPT4gb2JqW2tleV0sIG9iaik7XG4gICAgbGFzdE9ialtsYXN0S2V5XSA9IG5ld1ZhbDtcbn1cbmZ1bmN0aW9uIGlzUmF3V3JhcHBlZFZhbHVlKGFyZykge1xuICAgIHJldHVybiBhcmcudHlwZSA9PT0gXCJSQVdcIjtcbn1cbmZ1bmN0aW9uIHdpbmRvd0VuZHBvaW50KHcpIHtcbiAgICBpZiAoc2VsZi5jb25zdHJ1Y3Rvci5uYW1lICE9PSBcIldpbmRvd1wiKVxuICAgICAgICB0aHJvdyBFcnJvcihcInNlbGYgaXMgbm90IGEgd2luZG93XCIpO1xuICAgIHJldHVybiB7XG4gICAgICAgIGFkZEV2ZW50TGlzdGVuZXI6IHNlbGYuYWRkRXZlbnRMaXN0ZW5lci5iaW5kKHNlbGYpLFxuICAgICAgICByZW1vdmVFdmVudExpc3RlbmVyOiBzZWxmLnJlbW92ZUV2ZW50TGlzdGVuZXIuYmluZChzZWxmKSxcbiAgICAgICAgcG9zdE1lc3NhZ2U6IChtc2csIHRyYW5zZmVyKSA9PiB3LnBvc3RNZXNzYWdlKG1zZywgXCIqXCIsIHRyYW5zZmVyKVxuICAgIH07XG59XG5mdW5jdGlvbiBpc0VuZHBvaW50KGVuZHBvaW50KSB7XG4gICAgcmV0dXJuIChcImFkZEV2ZW50TGlzdGVuZXJcIiBpbiBlbmRwb2ludCAmJlxuICAgICAgICBcInJlbW92ZUV2ZW50TGlzdGVuZXJcIiBpbiBlbmRwb2ludCAmJlxuICAgICAgICBcInBvc3RNZXNzYWdlXCIgaW4gZW5kcG9pbnQpO1xufVxuZnVuY3Rpb24gYWN0aXZhdGVFbmRwb2ludChlbmRwb2ludCkge1xuICAgIGlmIChpc01lc3NhZ2VQb3J0KGVuZHBvaW50KSlcbiAgICAgICAgZW5kcG9pbnQuc3RhcnQoKTtcbn1cbmZ1bmN0aW9uIGF0dGFjaE1lc3NhZ2VIYW5kbGVyKGVuZHBvaW50LCBmKSB7XG4gICAgLy8gQ2hlY2tpbmcgYWxsIHBvc3NpYmxlIHR5cGVzIG9mIGBlbmRwb2ludGAgbWFudWFsbHkgc2F0aXNmaWVzIFR5cGVTY3JpcHTigJlzXG4gICAgLy8gdHlwZSBjaGVja2VyLiBOb3Qgc3VyZSB3aHkgdGhlIGluZmVyZW5jZSBpcyBmYWlsaW5nIGhlcmUuIFNpbmNlIGl04oCZc1xuICAgIC8vIHVubmVjZXNzYXJ5IGNvZGUgSeKAmW0gZ29pbmcgdG8gcmVzb3J0IHRvIGBhbnlgIGZvciBub3cuXG4gICAgLy8gaWYoaXNXb3JrZXIoZW5kcG9pbnQpKVxuICAgIC8vICAgZW5kcG9pbnQuYWRkRXZlbnRMaXN0ZW5lcignbWVzc2FnZScsIGYpO1xuICAgIC8vIGlmKGlzTWVzc2FnZVBvcnQoZW5kcG9pbnQpKVxuICAgIC8vICAgZW5kcG9pbnQuYWRkRXZlbnRMaXN0ZW5lcignbWVzc2FnZScsIGYpO1xuICAgIC8vIGlmKGlzT3RoZXJXaW5kb3coZW5kcG9pbnQpKVxuICAgIC8vICAgZW5kcG9pbnQuYWRkRXZlbnRMaXN0ZW5lcignbWVzc2FnZScsIGYpO1xuICAgIGVuZHBvaW50LmFkZEV2ZW50TGlzdGVuZXIoXCJtZXNzYWdlXCIsIGYpO1xufVxuZnVuY3Rpb24gZGV0YWNoTWVzc2FnZUhhbmRsZXIoZW5kcG9pbnQsIGYpIHtcbiAgICAvLyBTYW1lIGFzIGFib3ZlLlxuICAgIGVuZHBvaW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJtZXNzYWdlXCIsIGYpO1xufVxuZnVuY3Rpb24gaXNNZXNzYWdlUG9ydChlbmRwb2ludCkge1xuICAgIHJldHVybiBlbmRwb2ludC5jb25zdHJ1Y3Rvci5uYW1lID09PSBcIk1lc3NhZ2VQb3J0XCI7XG59XG5mdW5jdGlvbiBpc1dpbmRvdyhlbmRwb2ludCkge1xuICAgIC8vIFRPRE86IFRoaXMgZG9lc27igJl0IHdvcmsgb24gY3Jvc3Mtb3JpZ2luIGlmcmFtZXMuXG4gICAgLy8gcmV0dXJuIGVuZHBvaW50LmNvbnN0cnVjdG9yLm5hbWUgPT09ICdXaW5kb3cnO1xuICAgIHJldHVybiBbXCJ3aW5kb3dcIiwgXCJsZW5ndGhcIiwgXCJsb2NhdGlvblwiLCBcInBhcmVudFwiLCBcIm9wZW5lclwiXS5ldmVyeShwcm9wID0+IHByb3AgaW4gZW5kcG9pbnQpO1xufVxuLyoqXG4gKiBgcGluZ1BvbmdNZXNzYWdlYCBzZW5kcyBhIGBwb3N0TWVzc2FnZWAgYW5kIHdhaXRzIGZvciBhIHJlcGx5LiBSZXBsaWVzIGFyZVxuICogaWRlbnRpZmllZCBieSBhIHVuaXF1ZSBpZCB0aGF0IGlzIGF0dGFjaGVkIHRvIHRoZSBwYXlsb2FkLlxuICovXG5mdW5jdGlvbiBwaW5nUG9uZ01lc3NhZ2UoZW5kcG9pbnQsIG1zZywgdHJhbnNmZXJhYmxlcykge1xuICAgIGNvbnN0IGlkID0gYCR7dWlkfS0ke3BpbmdQb25nTWVzc2FnZUNvdW50ZXIrK31gO1xuICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICAgICAgYXR0YWNoTWVzc2FnZUhhbmRsZXIoZW5kcG9pbnQsIGZ1bmN0aW9uIGhhbmRsZXIoZXZlbnQpIHtcbiAgICAgICAgICAgIGlmIChldmVudC5kYXRhLmlkICE9PSBpZClcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICBkZXRhY2hNZXNzYWdlSGFuZGxlcihlbmRwb2ludCwgaGFuZGxlcik7XG4gICAgICAgICAgICByZXNvbHZlKGV2ZW50KTtcbiAgICAgICAgfSk7XG4gICAgICAgIC8vIENvcHkgbXNnIGFuZCBhZGQgYGlkYCBwcm9wZXJ0eVxuICAgICAgICBtc2cgPSBPYmplY3QuYXNzaWduKHt9LCBtc2csIHsgaWQgfSk7XG4gICAgICAgIGVuZHBvaW50LnBvc3RNZXNzYWdlKG1zZywgdHJhbnNmZXJhYmxlcyk7XG4gICAgfSk7XG59XG5mdW5jdGlvbiBjYlByb3h5KGNiLCBjYWxsUGF0aCA9IFtdLCB0YXJnZXQgPSBmdW5jdGlvbiAoKSB7IH0pIHtcbiAgICByZXR1cm4gbmV3IFByb3h5KHRhcmdldCwge1xuICAgICAgICBjb25zdHJ1Y3QoX3RhcmdldCwgYXJndW1lbnRzTGlzdCwgcHJveHkpIHtcbiAgICAgICAgICAgIHJldHVybiBjYih7XG4gICAgICAgICAgICAgICAgdHlwZTogXCJDT05TVFJVQ1RcIixcbiAgICAgICAgICAgICAgICBjYWxsUGF0aCxcbiAgICAgICAgICAgICAgICBhcmd1bWVudHNMaXN0XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgYXBwbHkoX3RhcmdldCwgX3RoaXNBcmcsIGFyZ3VtZW50c0xpc3QpIHtcbiAgICAgICAgICAgIC8vIFdlIHVzZSBgYmluZGAgYXMgYW4gaW5kaWNhdG9yIHRvIGhhdmUgYSByZW1vdGUgZnVuY3Rpb24gYm91bmQgbG9jYWxseS5cbiAgICAgICAgICAgIC8vIFRoZSBhY3R1YWwgdGFyZ2V0IGZvciBgYmluZCgpYCBpcyBjdXJyZW50bHkgaWdub3JlZC5cbiAgICAgICAgICAgIGlmIChjYWxsUGF0aFtjYWxsUGF0aC5sZW5ndGggLSAxXSA9PT0gXCJiaW5kXCIpXG4gICAgICAgICAgICAgICAgcmV0dXJuIGNiUHJveHkoY2IsIGNhbGxQYXRoLnNsaWNlKDAsIC0xKSk7XG4gICAgICAgICAgICByZXR1cm4gY2Ioe1xuICAgICAgICAgICAgICAgIHR5cGU6IFwiQVBQTFlcIixcbiAgICAgICAgICAgICAgICBjYWxsUGF0aCxcbiAgICAgICAgICAgICAgICBhcmd1bWVudHNMaXN0XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0KF90YXJnZXQsIHByb3BlcnR5LCBwcm94eSkge1xuICAgICAgICAgICAgaWYgKHByb3BlcnR5ID09PSBcInRoZW5cIiAmJiBjYWxsUGF0aC5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICAgICByZXR1cm4geyB0aGVuOiAoKSA9PiBwcm94eSB9O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAocHJvcGVydHkgPT09IFwidGhlblwiKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgciA9IGNiKHtcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJHRVRcIixcbiAgICAgICAgICAgICAgICAgICAgY2FsbFBhdGhcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHIpLnRoZW4uYmluZChyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHJldHVybiBjYlByb3h5KGNiLCBjYWxsUGF0aC5jb25jYXQocHJvcGVydHkpLCBfdGFyZ2V0W3Byb3BlcnR5XSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHNldChfdGFyZ2V0LCBwcm9wZXJ0eSwgdmFsdWUsIF9wcm94eSkge1xuICAgICAgICAgICAgcmV0dXJuIGNiKHtcbiAgICAgICAgICAgICAgICB0eXBlOiBcIlNFVFwiLFxuICAgICAgICAgICAgICAgIGNhbGxQYXRoLFxuICAgICAgICAgICAgICAgIHByb3BlcnR5LFxuICAgICAgICAgICAgICAgIHZhbHVlXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuZnVuY3Rpb24gaXNUcmFuc2ZlcmFibGUodGhpbmcpIHtcbiAgICByZXR1cm4gVFJBTlNGRVJBQkxFX1RZUEVTLnNvbWUodHlwZSA9PiB0aGluZyBpbnN0YW5jZW9mIHR5cGUpO1xufVxuZnVuY3Rpb24qIGl0ZXJhdGVBbGxQcm9wZXJ0aWVzKHZhbHVlLCBwYXRoID0gW10sIHZpc2l0ZWQgPSBudWxsKSB7XG4gICAgaWYgKCF2YWx1ZSlcbiAgICAgICAgcmV0dXJuO1xuICAgIGlmICghdmlzaXRlZClcbiAgICAgICAgdmlzaXRlZCA9IG5ldyBXZWFrU2V0KCk7XG4gICAgaWYgKHZpc2l0ZWQuaGFzKHZhbHVlKSlcbiAgICAgICAgcmV0dXJuO1xuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIpXG4gICAgICAgIHJldHVybjtcbiAgICBpZiAodHlwZW9mIHZhbHVlID09PSBcIm9iamVjdFwiKVxuICAgICAgICB2aXNpdGVkLmFkZCh2YWx1ZSk7XG4gICAgaWYgKEFycmF5QnVmZmVyLmlzVmlldyh2YWx1ZSkpXG4gICAgICAgIHJldHVybjtcbiAgICB5aWVsZCB7IHZhbHVlLCBwYXRoIH07XG4gICAgY29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKHZhbHVlKTtcbiAgICBmb3IgKGNvbnN0IGtleSBvZiBrZXlzKVxuICAgICAgICB5aWVsZCogaXRlcmF0ZUFsbFByb3BlcnRpZXModmFsdWVba2V5XSwgWy4uLnBhdGgsIGtleV0sIHZpc2l0ZWQpO1xufVxuZnVuY3Rpb24gdHJhbnNmZXJhYmxlUHJvcGVydGllcyhvYmopIHtcbiAgICBjb25zdCByID0gW107XG4gICAgZm9yIChjb25zdCBwcm9wIG9mIGl0ZXJhdGVBbGxQcm9wZXJ0aWVzKG9iaikpIHtcbiAgICAgICAgaWYgKGlzVHJhbnNmZXJhYmxlKHByb3AudmFsdWUpKVxuICAgICAgICAgICAgci5wdXNoKHByb3AudmFsdWUpO1xuICAgIH1cbiAgICByZXR1cm4gcjtcbn1cbmZ1bmN0aW9uIG1ha2VJbnZvY2F0aW9uUmVzdWx0KG9iaikge1xuICAgIGZvciAoY29uc3QgW3R5cGUsIHRyYW5zZmVySGFuZGxlcl0gb2YgdHJhbnNmZXJIYW5kbGVycykge1xuICAgICAgICBpZiAodHJhbnNmZXJIYW5kbGVyLmNhbkhhbmRsZShvYmopKSB7XG4gICAgICAgICAgICBjb25zdCB2YWx1ZSA9IHRyYW5zZmVySGFuZGxlci5zZXJpYWxpemUob2JqKTtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgdmFsdWU6IHsgdHlwZSwgdmFsdWUgfVxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICB2YWx1ZToge1xuICAgICAgICAgICAgdHlwZTogXCJSQVdcIixcbiAgICAgICAgICAgIHZhbHVlOiBvYmpcbiAgICAgICAgfVxuICAgIH07XG59XG4iLCJtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCIwLndvcmtlci5qc1wiIl0sInNvdXJjZVJvb3QiOiIifQ==